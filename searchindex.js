Search.setIndex({"docnames": ["about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.i3extractor", "api/graphnet.data.extractors.i3featureextractor", "api/graphnet.data.extractors.i3genericextractor", "api/graphnet.data.extractors.i3hybridrecoextractor", "api/graphnet.data.extractors.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.i3particleextractor", "api/graphnet.data.extractors.i3pisaextractor", "api/graphnet.data.extractors.i3quesoextractor", "api/graphnet.data.extractors.i3retroextractor", "api/graphnet.data.extractors.i3splinempeextractor", "api/graphnet.data.extractors.i3truthextractor", "api/graphnet.data.extractors.i3tumextractor", "api/graphnet.data.extractors.utilities", "api/graphnet.data.extractors.utilities.collections", "api/graphnet.data.extractors.utilities.frames", "api/graphnet.data.extractors.utilities.types", "api/graphnet.data.parquet", "api/graphnet.data.parquet.parquet_dataconverter", "api/graphnet.data.parquet.parquet_dataset", "api/graphnet.data.pipeline", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.sqlite_dataconverter", "api/graphnet.data.sqlite.sqlite_dataset", "api/graphnet.data.sqlite.sqlite_dataset_perturbed", "api/graphnet.data.sqlite.sqlite_utilities", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.deployment", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deployer", "api/graphnet.deployment.i3modules.graphnet_module", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.prometheus", "api/graphnet.models.gnn", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.graph_builders", "api/graphnet.models.model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.utils", "api/graphnet.pisa", "api/graphnet.pisa.fitting", "api/graphnet.pisa.plotting", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute", "index", "install"], "filenames": ["about.md", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.i3extractor.rst", "api/graphnet.data.extractors.i3featureextractor.rst", "api/graphnet.data.extractors.i3genericextractor.rst", "api/graphnet.data.extractors.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.i3particleextractor.rst", "api/graphnet.data.extractors.i3pisaextractor.rst", "api/graphnet.data.extractors.i3quesoextractor.rst", "api/graphnet.data.extractors.i3retroextractor.rst", "api/graphnet.data.extractors.i3splinempeextractor.rst", "api/graphnet.data.extractors.i3truthextractor.rst", "api/graphnet.data.extractors.i3tumextractor.rst", "api/graphnet.data.extractors.utilities.rst", "api/graphnet.data.extractors.utilities.collections.rst", "api/graphnet.data.extractors.utilities.frames.rst", "api/graphnet.data.extractors.utilities.types.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.parquet_dataconverter.rst", "api/graphnet.data.parquet.parquet_dataset.rst", "api/graphnet.data.pipeline.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.sqlite_dataconverter.rst", "api/graphnet.data.sqlite.sqlite_dataset.rst", "api/graphnet.data.sqlite.sqlite_dataset_perturbed.rst", "api/graphnet.data.sqlite.sqlite_utilities.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deployer.rst", "api/graphnet.deployment.i3modules.graphnet_module.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.graph_builders.rst", "api/graphnet.models.model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.utils.rst", "api/graphnet.pisa.rst", "api/graphnet.pisa.fitting.rst", "api/graphnet.pisa.plotting.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute.md", "index.rst", "install.md"], "titles": ["About", "API", "constants", "data", "constants", "dataconverter", "dataloader", "dataset", "extractors", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "types", "parquet", "parquet_dataconverter", "parquet_dataset", "pipeline", "sqlite", "sqlite_dataconverter", "sqlite_dataset", "sqlite_dataset_perturbed", "sqlite_utilities", "utilities", "parquet_to_sqlite", "random", "string_selection_resolver", "deployment", "i3modules", "deployer", "graphnet_module", "models", "coarsening", "components", "layers", "pool", "detector", "detector", "icecube", "prometheus", "gnn", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "graph_builders", "model", "standard_model", "task", "classification", "reconstruction", "task", "utils", "pisa", "fitting", "plotting", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "filesys", "imports", "logging", "maths", "src", "Contribute", "About", "Install"], "terms": {"graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91], "i": [0, 1, 7, 9, 11, 22, 23, 24, 27, 30, 31, 32, 33, 36, 37, 41, 43, 46, 52, 53, 61, 62, 63, 64, 67, 69, 70, 71, 73, 75, 80, 81, 84, 85, 86, 89, 90, 91], "an": [0, 5, 24, 26, 28, 30, 37, 71, 84, 86, 89, 90, 91], "open": [0, 89, 90], "sourc": [0, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 41, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90], "python": [0, 1, 5, 8, 9, 11, 22, 24, 89, 90, 91], "framework": [0, 90], "aim": [0, 1, 89, 90], "provid": [0, 1, 7, 27, 31, 32, 41, 42, 71, 89, 90, 91], "high": [0, 90], "qualiti": [0, 90], "user": [0, 42, 69, 90, 91], "friendli": [0, 90], "end": [0, 1, 5, 26, 30, 90], "function": [0, 5, 6, 7, 24, 33, 36, 41, 43, 46, 58, 61, 62, 63, 64, 66, 67, 71, 72, 74, 79, 80, 81, 84, 85, 87, 90], "perform": [0, 43, 45, 46, 51, 53, 55, 59, 61, 62, 63, 90], "reconstruct": [0, 1, 10, 12, 13, 17, 18, 20, 28, 38, 42, 55, 60, 63, 90], "task": [0, 1, 42, 59, 61, 62, 71, 89, 90], "neutrino": [0, 1, 45, 55, 66, 90], "telescop": [0, 1, 90], "us": [0, 1, 2, 4, 5, 6, 7, 9, 14, 19, 21, 22, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 41, 42, 45, 46, 48, 53, 54, 55, 58, 60, 61, 62, 63, 64, 66, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 85, 86, 89, 90, 91], "graph": [0, 1, 6, 7, 27, 31, 32, 41, 45, 46, 48, 57, 64, 70, 72, 89, 90], "neural": [0, 1, 90], "network": [0, 1, 52, 90], "gnn": [0, 1, 28, 42, 52, 53, 54, 55, 59, 90, 91], "make": [0, 5, 73, 79, 80, 89, 90, 91], "fast": [0, 90, 91], "easi": [0, 90], "train": [0, 1, 32, 37, 38, 41, 59, 69, 70, 71, 72, 73, 75, 79, 80, 82, 88, 90, 91], "complex": [0, 42, 90], "model": [0, 1, 32, 38, 41, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 67, 68, 69, 71, 72, 75, 77, 80, 82, 88, 90, 91], "can": [0, 1, 7, 9, 11, 14, 27, 31, 32, 35, 41, 46, 66, 67, 73, 75, 77, 79, 80, 89, 90, 91], "event": [0, 1, 7, 16, 27, 31, 32, 33, 35, 37, 41, 46, 61, 62, 63, 64, 66, 71, 73, 79, 90], "state": [0, 90], "art": [0, 90], "arbitrari": [0, 90], "detector": [0, 1, 19, 42, 49, 50, 59, 90], "configur": [0, 1, 7, 42, 58, 59, 66, 74, 76, 79, 80, 82, 86, 90], "infer": [0, 1, 28, 38, 41, 59, 61, 62, 63, 90, 91], "time": [0, 4, 33, 43, 46, 49, 62, 86, 90, 91], "ar": [0, 1, 4, 5, 7, 11, 24, 26, 27, 30, 31, 32, 35, 37, 41, 46, 53, 55, 61, 66, 71, 73, 80, 89, 90, 91], "order": [0, 22, 43, 64, 90], "magnitud": [0, 90], "faster": [0, 90], "than": [0, 6, 61, 62, 63, 72, 86, 90], "tradit": [0, 90], "techniqu": [0, 90], "common": [0, 1, 71, 77, 82, 83, 85, 90], "ml": [0, 1, 90], "develop": [0, 1, 89, 90, 91], "physicist": [0, 1, 90], "wish": [0, 89, 90], "tool": [0, 1, 90], "research": [0, 90], "By": [0, 35, 61, 62, 63, 90], "unit": [0, 5, 85, 89, 90], "both": [0, 11, 61, 62, 63, 67, 90], "group": [0, 5, 26, 30, 46, 90], "increas": [0, 69, 90], "longev": [0, 90], "usabl": [0, 90], "individu": [0, 5, 7, 27, 31, 32, 46, 53, 64, 90], "code": [0, 19, 33, 79, 80, 90], "contribut": [0, 90, 91], "from": [0, 1, 6, 7, 8, 9, 11, 13, 14, 16, 22, 23, 24, 27, 28, 30, 31, 32, 35, 41, 46, 55, 57, 58, 61, 62, 63, 64, 67, 69, 70, 71, 77, 78, 80, 82, 86, 89, 90, 91], "build": [0, 1, 42, 48, 57, 58, 77, 80, 90], "gener": [0, 5, 7, 11, 27, 31, 41, 61, 71, 90], "reusabl": [0, 90], "softwar": [0, 71, 90], "packag": [0, 1, 36, 81, 84, 85, 89, 90, 91], "base": [0, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 27, 28, 30, 31, 32, 35, 37, 41, 43, 45, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 69, 70, 71, 73, 75, 77, 78, 79, 80, 82, 85, 86, 90], "engin": [0, 90], "best": [0, 89, 90], "practic": [0, 89, 90], "lower": [0, 67, 90], "technic": [0, 90], "threshold": [0, 41, 57, 90], "most": [0, 1, 37, 90, 91], "scientif": [0, 1, 90], "problem": [0, 89, 90], "The": [0, 5, 7, 22, 24, 27, 28, 30, 31, 33, 41, 43, 45, 46, 53, 55, 61, 62, 63, 64, 66, 67, 69, 70, 71, 90], "improv": [0, 1, 75, 90], "classif": [0, 1, 42, 60, 63, 71, 90], "yield": [0, 53, 66, 71, 90], "veri": [0, 37, 90], "accur": [0, 90], "e": [0, 1, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 24, 26, 27, 28, 30, 31, 32, 33, 37, 41, 43, 45, 46, 48, 49, 50, 52, 56, 57, 58, 59, 61, 62, 63, 64, 69, 70, 71, 73, 77, 86, 89, 90, 91], "g": [0, 1, 5, 7, 19, 22, 24, 26, 27, 28, 30, 31, 32, 33, 37, 41, 46, 61, 62, 63, 64, 73, 86, 89, 90, 91], "low": [0, 90], "energi": [0, 4, 28, 61, 62, 63, 73, 90], "observ": [0, 90], "icecub": [0, 1, 10, 23, 24, 42, 45, 47, 55, 85, 90, 91], "here": [0, 89, 90, 91], "implement": [0, 1, 5, 9, 25, 26, 29, 30, 45, 52, 53, 54, 55, 71, 89, 90], "wa": [0, 90], "appli": [0, 7, 9, 27, 31, 32, 46, 52, 53, 54, 55, 56, 59, 81, 90], "oscil": [0, 65, 90], "lead": [0, 90], "signific": [0, 90], "angular": [0, 90], "rang": [0, 61, 62, 63, 90], "relev": [0, 1, 24, 36, 84, 89, 90], "studi": [0, 90], "furthermor": [0, 90], "shown": [0, 90], "could": [0, 89, 90], "muon": [0, 13, 90], "v": [0, 90], "therebi": [0, 1, 79, 80, 90], "effici": [0, 90], "puriti": [0, 90], "sampl": [0, 37, 90], "analysi": [0, 28, 90, 91], "similarli": [0, 24, 90], "ha": [0, 5, 24, 26, 30, 33, 41, 52, 71, 84, 90, 91], "great": [0, 90], "point": [0, 18, 70, 71, 90], "analys": [0, 38, 65, 90], "final": [0, 46, 69, 79, 90], "millisecond": [0, 90], "allow": [0, 38, 42, 46, 69, 77, 82, 90, 91], "whole": [0, 90], "new": [0, 1, 30, 45, 77, 82, 89, 90], "type": [0, 5, 6, 7, 8, 9, 21, 22, 23, 26, 27, 30, 31, 32, 33, 35, 36, 37, 43, 45, 46, 48, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 66, 67, 69, 71, 72, 73, 75, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90], "cosmic": [0, 90], "alert": [0, 90], "which": [0, 7, 9, 10, 19, 23, 27, 28, 31, 32, 37, 41, 43, 46, 53, 58, 61, 66, 71, 75, 90, 91], "were": [0, 90], "previous": [0, 90], "unfeas": [0, 90], "possibl": [0, 22, 89, 90], "identifi": [0, 5, 7, 19, 27, 31, 32, 80, 90], "10": [0, 28, 75, 90], "tev": [0, 90], "monitor": [0, 90], "rate": [0, 69, 90], "direct": [0, 55, 61, 62, 63, 68, 70, 90], "real": [0, 90], "thi": [0, 3, 5, 7, 9, 11, 24, 26, 27, 30, 31, 32, 33, 36, 41, 42, 46, 48, 53, 59, 61, 62, 63, 64, 66, 67, 69, 71, 73, 77, 80, 86, 89, 90, 91], "enabl": [0, 3, 90], "first": [0, 69, 77, 82, 89, 90], "ever": [0, 90], "despit": [0, 90], "larg": [0, 71, 90], "background": [0, 90], "origin": [0, 66, 90], "compris": [0, 90], "number": [0, 5, 7, 26, 27, 28, 30, 31, 37, 45, 46, 48, 49, 52, 53, 54, 55, 56, 61, 62, 63, 69, 75, 90], "modul": [0, 3, 24, 28, 38, 41, 42, 45, 47, 51, 58, 60, 65, 68, 74, 76, 79, 80, 81, 82, 85, 90], "necessari": [0, 22, 89, 90], "workflow": [0, 90], "ingest": [0, 1, 3, 47, 90], "raw": [0, 90], "data": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 70, 72, 75, 77, 79, 82, 85, 88, 90, 91], "domain": [0, 1, 3, 38, 90], "specif": [0, 1, 3, 5, 7, 10, 24, 25, 26, 27, 29, 30, 31, 33, 38, 43, 46, 47, 48, 49, 50, 51, 56, 59, 60, 61, 62, 63, 71, 89, 90, 91], "format": [0, 1, 3, 5, 7, 22, 26, 30, 67, 79, 89, 90, 91], "deploi": [0, 1, 38, 41, 90], "chain": [0, 1, 38, 42, 59, 90, 91], "illustr": [0, 89, 90], "figur": [0, 67, 90], "level": [0, 7, 19, 27, 31, 32, 33, 43, 46, 57, 58, 86, 90, 91], "overview": [0, 90], "typic": [0, 22, 90], "convert": [0, 1, 3, 5, 22, 26, 30, 35, 90, 91], "industri": [0, 3, 90], "standard": [0, 3, 4, 5, 26, 30, 32, 37, 59, 75, 89, 90], "intermedi": [0, 1, 3, 5, 7, 26, 30, 52, 90, 91], "file": [0, 1, 3, 5, 7, 9, 22, 26, 27, 30, 31, 32, 35, 36, 41, 58, 66, 69, 71, 75, 76, 77, 78, 79, 80, 84, 86, 90, 91], "read": [0, 3, 7, 22, 27, 31, 32, 48, 53, 59, 60, 90, 91], "simpl": [0, 42, 90], "physic": [0, 1, 9, 23, 24, 38, 41, 42, 60, 61, 62, 63, 90], "orient": [0, 42, 90], "compon": [0, 1, 42, 45, 46, 59, 90], "manag": [0, 9, 68, 90], "experi": [0, 1, 68, 90], "log": [0, 1, 62, 68, 69, 71, 74, 90, 91], "deploy": [0, 1, 39, 41, 88, 90], "modular": [0, 42, 90], "subclass": [0, 42, 90], "torch": [0, 7, 27, 31, 32, 42, 45, 58, 59, 85, 90, 91], "nn": [0, 42, 45, 90], "mean": [0, 5, 7, 26, 27, 30, 31, 32, 42, 53, 55, 71, 80, 90], "onli": [0, 1, 7, 27, 31, 32, 42, 46, 61, 62, 63, 66, 73, 80, 85, 90, 91], "need": [0, 22, 42, 58, 71, 90, 91], "import": [0, 1, 33, 42, 74, 90], "few": [0, 42, 89, 90], "exist": [0, 7, 27, 28, 30, 31, 32, 33, 42, 70, 79, 90], "purpos": [0, 42, 71, 90], "built": [0, 42, 90], "them": [0, 1, 22, 42, 53, 61, 62, 63, 66, 90, 91], "togeth": [0, 42, 59, 90], "form": [0, 42, 61, 77, 82, 90], "complet": [0, 42, 59, 90], "extend": [0, 1, 90], "suit": [0, 90], "through": [0, 71, 90], "layer": [0, 42, 44, 46, 52, 53, 54, 55, 61, 62, 63, 90], "connect": [0, 57, 71, 90], "etc": [0, 71, 86, 90], "optimis": [0, 1, 90], "differ": [0, 7, 9, 27, 31, 32, 59, 89, 90, 91], "track": [0, 9, 13, 62, 89, 90], "These": [0, 89, 90], "prepar": [0, 71, 90], "satisfi": [0, 90], "o": [0, 61, 62, 63, 90], "load": [0, 6, 36, 58, 77, 79, 90], "requir": [0, 15, 33, 61, 71, 79, 80, 82, 90, 91], "when": [0, 5, 7, 22, 26, 27, 30, 31, 32, 33, 41, 45, 53, 55, 70, 86, 89, 90, 91], "batch": [0, 6, 28, 43, 45, 46, 59, 64, 72, 75, 90], "do": [0, 41, 71, 79, 80, 89, 90, 91], "predict": [0, 14, 18, 20, 28, 41, 52, 58, 59, 61, 62, 63, 71, 72, 90], "either": [0, 7, 27, 31, 71, 90, 91], "contain": [0, 5, 7, 22, 23, 26, 27, 28, 30, 31, 32, 41, 53, 58, 61, 62, 63, 71, 73, 75, 90, 91], "imag": [0, 1, 89, 90, 91], "portabl": [0, 90], "depend": [0, 90, 91], "free": [0, 71, 90], "split": [0, 43, 90], "up": [0, 5, 26, 30, 41, 89, 90, 91], "interfac": [0, 65, 90, 91], "block": [0, 1, 90], "pre": [0, 32, 48, 70, 89, 90], "directli": [0, 9, 90], "while": [0, 11, 69, 90], "continu": [0, 71, 90], "expand": [0, 90], "": [0, 5, 6, 7, 9, 22, 27, 30, 31, 32, 35, 52, 53, 59, 61, 62, 63, 64, 69, 73, 75, 79, 80, 86, 87, 90, 91], "capabl": [0, 90], "andrea": [0, 90], "s\u00f8gaard": [0, 90], "receiv": [0, 90], "fund": [0, 90], "european": [0, 90], "union": [0, 6, 7, 11, 22, 24, 27, 31, 32, 41, 43, 45, 46, 53, 58, 59, 61, 62, 63, 79, 82, 84, 90], "horizon": [0, 90], "2020": [0, 90], "innov": [0, 90], "programm": [0, 90], "under": [0, 32, 90], "mari": [0, 90], "sk\u0142odowska": [0, 90], "curi": [0, 90], "grant": [0, 71, 90], "agreement": [0, 89, 90], "No": [0, 90], "890778": [0, 90], "work": [0, 4, 23, 89, 90, 91], "rasmu": [0, 54, 90], "\u00f8rs\u00f8e": [0, 90], "partli": [0, 90], "punch4nfdi": [0, 90], "consortium": [0, 90], "support": [0, 24, 89, 90, 91], "dfg": [0, 90], "nfdi": [0, 90], "39": [0, 90, 91], "1": [0, 5, 7, 22, 26, 30, 37, 43, 46, 53, 55, 61, 62, 63, 64, 69, 71, 73, 79, 90, 91], "germani": [0, 90], "conveni": [1, 89, 91], "collabor": 1, "solv": [1, 89], "It": [1, 22, 33, 41, 89], "leverag": 1, "advanc": [1, 46], "machin": [1, 91], "learn": [1, 69, 91], "without": [1, 66, 71, 91], "have": [1, 5, 11, 26, 30, 33, 37, 46, 61, 62, 63, 89, 91], "expert": 1, "themselv": [1, 80], "acceler": 1, "area": 1, "phyic": 1, "design": 1, "principl": 1, "all": [1, 5, 7, 9, 11, 26, 27, 30, 31, 32, 33, 41, 45, 46, 48, 53, 56, 58, 63, 71, 77, 78, 79, 80, 81, 82, 86, 89, 91], "streamlin": 1, "process": [1, 5, 9, 32, 41, 48, 53, 89, 91], "transform": [1, 46, 61, 62, 63, 73], "extens": [1, 84], "basic": 1, "across": [1, 2, 7, 24, 27, 31, 32, 34, 46, 59, 71, 74, 75, 76, 86], "variou": 1, "easili": 1, "architectur": [1, 52, 53, 54, 55, 59], "main": [1, 51, 59, 89, 91], "featur": [1, 3, 4, 5, 7, 10, 27, 28, 31, 32, 41, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 61, 64, 72, 79, 89], "i3": [1, 5, 9, 23, 24, 26, 30, 36, 41, 84, 91], "more": [1, 7, 33, 36, 77, 79, 80, 82, 86], "index": [1, 5, 7, 24, 27, 31, 33, 46, 69], "sqlite": [1, 3, 28, 30, 31, 32, 33, 35, 91], "suitabl": 1, "plug": 1, "plai": 1, "abstract": [1, 5, 7, 48, 56, 58, 63, 78], "awai": 1, "detail": [1, 91], "expos": 1, "physicst": 1, "what": [1, 89], "i3modul": [1, 38, 41], "includ": [1, 32, 58, 59, 66, 71, 77, 89], "docker": 1, "run": [1, 35], "containeris": 1, "fashion": 1, "subpackag": [1, 3, 8, 38, 42, 74], "extractor": [1, 3, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 41], "parquet": [1, 3, 26, 27, 35, 91], "util": [1, 3, 8, 22, 23, 24, 33, 35, 36, 37, 42, 68, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88], "constant": [1, 3, 88], "dataconvert": [1, 3, 26, 30], "dataload": [1, 3, 28, 58, 59, 72, 82], "dataset": [1, 3, 6, 13, 27, 31, 32, 37, 75, 79], "pipelin": [1, 3], "coarsen": [1, 42, 46, 59], "graph_build": [1, 42, 48, 49, 50], "standard_model": [1, 42], "pisa": [1, 15, 28, 66, 67, 85, 88, 91], "fit": [1, 58, 65, 67, 71, 73, 82], "plot": [1, 65], "callback": [1, 58, 68], "label": [1, 7, 13, 16, 52, 59, 63, 67, 68, 72], "loss_funct": [1, 61, 62, 63, 68], "weight_fit": [1, 68], "config": [1, 6, 37, 66, 71, 74, 75, 77, 78, 79, 80, 81, 82], "argpars": [1, 74], "decor": [1, 5, 74, 85], "filesi": [1, 74], "math": [1, 74], "submodul": [1, 3, 8, 21, 25, 29, 34, 39, 42, 44, 47, 51, 60, 65, 68, 74, 76, 81], "global": [2, 4, 53, 55, 58], "i3extractor": [3, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 30], "i3featureextractor": [3, 4, 8, 30, 41], "i3genericextractor": [3, 8, 30], "i3hybridrecoextractor": [3, 8], "i3ntmuonlabelsextractor": [3, 8], "i3particleextractor": [3, 8], "i3pisaextractor": [3, 8], "i3quesoextractor": [3, 8], "i3retroextractor": [3, 8], "i3splinempeextractor": [3, 8], "i3truthextractor": [3, 4, 8], "i3tumextractor": [3, 8], "parquet_dataconvert": [3, 25], "parquet_dataset": [3, 25], "sqlite_dataconvert": [3, 29], "sqlite_dataset": [3, 29], "sqlite_dataset_perturb": [3, 29], "sqlite_util": [3, 29], "parquet_to_sqlit": [3, 34], "random": [3, 7, 27, 31, 34, 37, 79], "string_selection_resolv": [3, 34], "truth": [3, 4, 7, 10, 19, 27, 28, 31, 32, 33, 72, 73, 79], "fileset": [3, 5], "init_global_index": [3, 5], "cache_output_fil": [3, 5], "collate_fn": [3, 6, 68, 72], "do_shuffl": [3, 6], "columnmissingexcept": [3, 7], "ensembledataset": [3, 7, 79], "insqlitepipelin": [3, 28], "class": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 37, 41, 43, 45, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 69, 70, 71, 73, 75, 77, 78, 79, 80, 81, 82, 86, 89], "object": [4, 5, 7, 9, 11, 22, 24, 27, 31, 32, 41, 46, 48, 61, 62, 63, 66, 75, 86], "namespac": [4, 58], "name": [4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 26, 27, 28, 30, 31, 32, 33, 35, 41, 57, 58, 61, 62, 63, 66, 70, 73, 75, 77, 79, 81, 82, 86, 89, 91], "icecube86": [4, 47, 49], "dom_x": [4, 41, 43, 49], "dom_i": [4, 41, 43, 49], "dom_z": [4, 41, 43, 49], "dom_tim": [4, 49], "charg": [4, 41, 49, 71], "rde": [4, 43, 49], "pmt_area": [4, 43, 49], "deepcor": [4, 10, 49], "upgrad": [4, 10, 49, 91], "string": [4, 5, 7, 22, 26, 27, 30, 31, 32, 37, 46, 49, 77], "pmt_number": [4, 49], "dom_numb": [4, 49], "pmt_dir_x": [4, 49], "pmt_dir_i": [4, 49], "pmt_dir_z": [4, 49], "dom_typ": [4, 49], "prometheu": [4, 42, 47], "sensor_pos_x": [4, 50], "sensor_pos_i": [4, 50], "sensor_pos_z": [4, 50], "t": [4, 24, 33, 50, 67, 69, 71, 91], "kaggl": [4, 45, 49, 55], "x": [4, 5, 19, 26, 30, 45, 46, 49, 58, 63, 64, 67, 71, 73], "y": [4, 19, 49, 64, 67, 91], "z": [4, 5, 19, 26, 30, 49, 64, 91], "auxiliari": [4, 49], "energy_track": 4, "position_x": 4, "position_i": 4, "position_z": 4, "azimuth": [4, 62, 70], "zenith": [4, 62, 70], "pid": [4, 37, 79], "elast": 4, "sim_typ": 4, "interaction_typ": 4, "interaction_tim": [4, 62], "inelast": [4, 62], "stopped_muon": 4, "injection_energi": 4, "injection_typ": 4, "injection_interaction_typ": 4, "injection_zenith": 4, "injection_azimuth": 4, "injection_bjorkenx": 4, "injection_bjorkeni": 4, "injection_position_x": 4, "injection_position_i": 4, "injection_position_z": 4, "injection_column_depth": 4, "primary_lepton_1_typ": 4, "primary_hadron_1_typ": 4, "primary_lepton_1_position_x": 4, "primary_lepton_1_position_i": 4, "primary_lepton_1_position_z": 4, "primary_hadron_1_position_x": 4, "primary_hadron_1_position_i": 4, "primary_hadron_1_position_z": 4, "primary_lepton_1_direction_theta": 4, "primary_lepton_1_direction_phi": 4, "primary_hadron_1_direction_theta": 4, "primary_hadron_1_direction_phi": 4, "primary_lepton_1_energi": 4, "primary_hadron_1_energi": 4, "total_energi": 4, "i3_fil": [5, 9], "str": [5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 41, 43, 45, 46, 48, 53, 55, 57, 58, 59, 61, 62, 63, 66, 70, 72, 73, 75, 77, 78, 79, 80, 81, 82, 84, 86], "gcd_file": [5, 9, 41], "paramet": [5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 41, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87], "output_fil": [5, 26, 30], "global_index": 5, "avail": [5, 11, 28, 85], "pool": [5, 42, 43, 44, 53, 55], "worker": [5, 26, 28, 30, 36, 75, 86], "return": [5, 6, 7, 9, 22, 23, 24, 26, 27, 30, 31, 32, 33, 35, 36, 37, 43, 45, 46, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 66, 67, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 84, 85, 86, 87], "none": [5, 6, 7, 9, 11, 19, 23, 24, 26, 27, 28, 30, 31, 32, 33, 35, 37, 43, 45, 46, 53, 55, 57, 58, 59, 61, 62, 63, 66, 69, 71, 72, 73, 75, 77, 78, 79, 81, 84, 86], "synchron": 5, "list": [5, 6, 7, 9, 11, 19, 22, 24, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 41, 43, 45, 46, 48, 49, 50, 53, 55, 57, 58, 59, 61, 62, 63, 64, 67, 69, 71, 72, 73, 79, 81, 82, 84, 86], "process_method": 5, "cach": 5, "output": [5, 26, 30, 35, 48, 49, 52, 53, 54, 56, 58, 59, 66, 73, 80, 91], "typevar": 5, "f": [5, 46], "bound": [5, 67], "callabl": [5, 6, 7, 24, 45, 46, 61, 62, 63, 72, 73, 77, 79, 80, 81, 85], "ani": [5, 6, 7, 22, 23, 24, 26, 27, 30, 31, 41, 45, 46, 53, 57, 58, 59, 61, 63, 67, 71, 73, 75, 77, 78, 80, 81, 82, 86, 91], "outdir": [5, 26, 28, 30, 35, 66], "gcd_rescu": [5, 26, 30, 84], "nb_files_to_batch": [5, 26, 30], "sequential_batch_pattern": [5, 26, 30], "input_file_batch_pattern": [5, 26, 30], "index_column": [5, 7, 26, 27, 30, 31, 32, 33, 37, 58, 59, 66, 72, 73, 79], "icetray_verbos": [5, 26, 30], "abc": [5, 7, 9, 28, 58, 70, 73, 78], "logger": [5, 7, 9, 28, 35, 37, 57, 58, 70, 73, 74, 86, 91], "construct": [5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 27, 30, 31, 32, 35, 37, 43, 44, 45, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 69, 70, 71, 72, 73, 75, 78, 79, 80, 86], "regular": [5, 24, 26, 30], "express": [5, 26, 30, 58, 71], "accord": [5, 26, 30, 32, 43, 46, 57], "match": [5, 26, 30, 73, 84, 87], "certain": [5, 26, 30, 35, 66], "pattern": [5, 26, 30], "wildcard": [5, 26, 30], "same": [5, 24, 26, 30, 33, 43, 46, 61, 64, 69, 81, 86], "input": [5, 7, 26, 27, 28, 30, 31, 32, 41, 48, 52, 53, 54, 55, 56, 61, 63, 64, 77, 82], "replac": [5, 26, 30], "period": [5, 26, 30], "special": [5, 11, 26, 30, 41, 64], "interpret": [5, 26, 30, 61], "liter": [5, 26, 30], "charact": [5, 26, 30], "regex": [5, 26, 30], "For": [5, 24, 26, 30, 69], "instanc": [5, 7, 9, 19, 24, 26, 30, 58, 66, 70, 72, 78, 91], "A": [5, 7, 26, 28, 30, 41, 46, 64, 66, 71, 73, 91], "_": [5, 26, 30], "0": [5, 7, 26, 27, 30, 31, 37, 41, 43, 46, 52, 53, 55, 64, 66, 67, 71, 79, 91], "9": [5, 26, 30], "5": [5, 7, 26, 27, 30, 31, 37, 75, 91], "zst": [5, 26, 30], "find": [5, 26, 30, 84], "whose": [5, 26, 30, 41], "one": [5, 7, 26, 30, 33, 41, 46, 58, 79, 80, 84, 89, 91], "capit": [5, 26, 30], "letter": [5, 26, 30], "follow": [5, 26, 30, 53, 59, 71, 73, 89, 91], "underscor": [5, 26, 30], "five": [5, 26, 30], "upgrade_genie_step4_141020_a_000000": [5, 26, 30], "upgrade_genie_step4_141020_a_000001": [5, 26, 30], "upgrade_genie_step4_141020_a_000008": [5, 26, 30], "upgrade_genie_step4_141020_a_000009": [5, 26, 30], "would": [5, 26, 30, 89], "upgrade_genie_step4_141020_a_00000x": [5, 26, 30], "suffix": [5, 26, 30], "upgrade_genie_step4_141020_a_000010": [5, 26, 30], "separ": [5, 22, 26, 30, 69, 91], "upgrade_genie_step4_141020_a_00001x": [5, 26, 30], "int": [5, 6, 7, 13, 16, 26, 27, 28, 30, 31, 32, 37, 45, 46, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 69, 71, 72, 73, 75, 79, 82, 86], "properti": [5, 7, 9, 14, 24, 46, 48, 49, 56, 59, 63, 70, 78, 86], "file_suffix": [5, 26, 30], "execut": [5, 33], "method": [5, 9, 21, 22, 23, 24, 26, 30, 41, 45, 46, 62, 71, 73], "set": [5, 11, 61, 62, 63, 89], "inherit": [5, 9, 24, 48, 71, 86], "path": [5, 7, 27, 31, 32, 33, 36, 41, 58, 66, 67, 75, 77, 78, 79, 84, 91], "correspond": [5, 7, 22, 24, 27, 30, 31, 32, 36, 53, 73, 84, 91], "gcd": [5, 9, 23, 36, 41, 84], "save_data": [5, 26, 30], "save": [5, 9, 22, 26, 30, 33, 58, 66, 71, 72, 73, 77, 78, 79, 80, 91], "ordereddict": [5, 26, 30], "extract": [5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 30, 35, 36, 41, 61, 62, 63], "merge_fil": [5, 26, 30], "input_fil": [5, 26, 30], "merg": [5, 26, 30, 71, 91], "result": [5, 26, 30, 46, 69, 71, 72, 81, 91], "option": [5, 7, 19, 26, 27, 28, 30, 31, 32, 45, 46, 53, 55, 58, 61, 62, 63, 66, 67, 71, 73, 74, 75, 77, 79, 84, 91], "default": [5, 7, 11, 19, 22, 26, 27, 28, 30, 31, 32, 33, 35, 41, 45, 46, 48, 52, 53, 54, 55, 58, 61, 62, 63, 66, 67, 69, 70, 71, 73, 75, 77, 79, 84], "current": [5, 26, 30, 37, 69, 89, 91], "rais": [5, 7, 11, 26, 58, 77, 82], "notimplementederror": [5, 26], "If": [5, 7, 11, 26, 28, 30, 58, 61, 62, 63, 66, 69, 73, 89, 91], "been": [5, 26, 41, 71, 89], "backend": [5, 26, 30], "question": 5, "get_map_funct": 5, "nb_file": 5, "map": [5, 7, 10, 11, 27, 30, 31, 32, 33, 41], "pure": [5, 8, 9, 11, 24], "multiprocess": [5, 91], "tupl": [5, 7, 23, 24, 27, 31, 45, 53, 55, 61, 62, 63, 64, 66, 67, 72, 75], "remov": [6, 72, 75], "less": [6, 72], "two": [6, 53, 66, 69, 71, 72], "dom": [6, 7, 27, 31, 32, 43, 46, 72], "hit": [6, 72], "should": [6, 7, 9, 22, 27, 31, 32, 37, 45, 46, 71, 72, 80, 89, 91], "occur": [6, 72], "product": [6, 72], "selection_nam": 6, "check": [6, 23, 24, 30, 33, 75, 84, 85, 89, 91], "whether": [6, 23, 24, 30, 33, 53, 58, 71, 81, 84, 85], "shuffl": [6, 36, 72], "select": [6, 7, 16, 27, 31, 32, 37, 72, 73, 79, 89], "bool": [6, 23, 24, 30, 33, 37, 41, 43, 53, 58, 59, 66, 69, 71, 72, 73, 75, 81, 84, 85, 86], "batch_siz": [6, 28, 64, 72], "num_work": [6, 72], "persistent_work": [6, 72], "prefetch_factor": 6, "kwarg": [6, 45, 57, 58, 61, 63, 71, 73, 77, 86], "t_co": 6, "classmethod": [6, 7, 58, 71, 77, 78], "from_dataset_config": 6, "datasetconfig": [6, 7, 37, 76, 79], "dict": [6, 7, 11, 22, 24, 28, 30, 32, 48, 49, 50, 58, 59, 66, 67, 69, 71, 72, 75, 77, 79, 80, 81, 82], "except": 7, "indic": [7, 37, 46, 69, 75, 89], "miss": 7, "column": [7, 27, 31, 32, 33, 41, 57, 58, 59, 61, 62, 63, 64, 66, 73], "pulsemap": [7, 10, 27, 30, 31, 32, 41, 72, 79], "node_truth": [7, 27, 31, 32, 72, 79], "truth_tabl": [7, 27, 31, 32, 66, 72, 73, 79], "node_truth_t": [7, 27, 31, 32, 72, 79], "string_select": [7, 27, 31, 32, 72, 79], "dtype": [7, 27, 31, 32, 87], "loss_weight_t": [7, 27, 31, 32, 72, 79], "loss_weight_column": [7, 27, 31, 32, 72, 79], "loss_weight_default_valu": [7, 27, 31, 32, 79], "seed": [7, 27, 31, 37, 72, 79], "puls": [7, 10, 11, 23, 24, 27, 30, 31, 32, 33, 41, 43, 46, 64], "seri": [7, 10, 11, 23, 24, 27, 31, 32, 33, 41], "node": [7, 27, 31, 32, 43, 46, 52, 53, 55, 57, 61, 62, 63, 64], "multipl": [7, 9, 27, 31, 32, 69, 79, 86], "store": [7, 9, 27, 28, 31, 32, 33, 66, 70], "ad": [7, 10, 27, 31, 32, 53, 66], "attribut": [7, 27, 31, 32, 43, 61, 62, 63], "event_no": [7, 27, 31, 32, 33, 37, 73, 79], "uniqu": [7, 27, 31, 32, 33, 35, 79], "indici": [7, 23, 27, 31, 32, 37, 71], "tabl": [7, 9, 27, 28, 30, 31, 32, 33, 66, 73], "inform": [7, 9, 11, 19, 27, 31, 32, 67], "subset": [7, 27, 31, 32, 45, 53, 55], "given": [7, 27, 30, 31, 32, 46, 61, 62, 63, 73, 75], "queri": [7, 27, 31, 33, 37], "pass": [7, 27, 31, 45, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 71, 73, 89], "float32": [7, 27, 31, 32], "tensor": [7, 27, 31, 32, 43, 45, 46, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 71, 87], "per": [7, 11, 27, 31, 32, 33, 46, 61, 62, 63, 71, 73], "loss": [7, 27, 31, 32, 59, 61, 62, 63, 69, 71, 75], "weight": [7, 27, 31, 32, 61, 62, 63, 66, 71, 73, 80, 91], "also": [7, 27, 31, 32, 37, 79], "assign": [7, 27, 31, 32, 35, 43, 46, 89], "float": [7, 27, 31, 32, 41, 43, 52, 57, 58, 66, 67, 69, 71, 72, 79], "note": [7, 27, 31, 32, 67, 80], "valu": [7, 19, 22, 27, 30, 31, 32, 33, 46, 67, 70, 71, 75, 77], "specifi": [7, 27, 31, 32, 37, 43, 61, 62, 63, 67, 69, 91], "case": [7, 11, 27, 31, 32, 41, 46, 61, 62, 63, 91], "That": [7, 27, 31, 32, 53, 62, 70], "ignor": [7, 24, 27, 31, 32], "resolv": [7, 27, 31, 37], "10000": [7, 27, 31, 37], "20": [7, 27, 31, 37, 86], "from_config": [7, 58, 78, 79, 80], "concaten": [7, 22, 53], "query_t": [7, 27, 31], "sequential_index": [7, 27, 31], "some": [7, 27, 31], "out": [7, 53, 59, 60, 71, 86, 89, 91], "sequenti": 7, "len": 7, "self": [7, 66, 77, 82], "_may_": 7, "_indic": 7, "entir": [7, 58], "impos": 7, "befor": [7, 53, 61, 62, 63, 69], "scalar": [7, 64, 71], "length": [7, 24, 69], "element": [7, 22, 24, 59, 64, 81], "present": [7, 75, 84, 85], "add_label": 7, "fn": [7, 24, 77, 81], "kei": [7, 11, 22, 23, 24, 30, 33, 43, 46, 70, 80], "add": [7, 53, 75, 89, 91], "custom": [7, 69], "defin": [7, 37, 41, 46, 79], "concatdataset": 7, "singl": [7, 9, 46, 53, 70, 79, 80], "collect": [7, 8, 9, 21, 71, 87], "iter": 7, "i3fram": [8, 9, 11, 23, 24, 41], "frame": [8, 9, 11, 21, 24, 30, 41], "i3extractorcollect": [8, 9], "i3featureextractoricecube86": [8, 10], "i3featureextractoricecubedeepcor": [8, 10], "i3featureextractoricecubeupgrad": [8, 10], "i3pulsenoisetruthflagicecubeupgrad": [8, 10], "i3galacticplanehybridrecoextractor": [8, 12], "i3ntmuonlabelextractor": [8, 13], "i3splinempeicextractor": [8, 18], "__call__": 9, "icetrai": [9, 23, 24, 41, 85], "keep": 9, "proven": 9, "set_fil": 9, "refer": [9, 79], "being": [9, 41, 61, 62, 63], "get": [9, 23, 69, 72, 91], "treat": 9, "86": [10, 49], "nois": [10, 23, 32, 41], "flag": [10, 41], "exclude_kei": 11, "dynam": [11, 45, 53, 54, 55], "pars": [11, 67, 74, 75, 76, 77, 82], "call": [11, 24, 30, 46, 66, 73, 86], "tri": [11, 24], "automat": [11, 71, 89], "cast": [11, 24], "done": [11, 46, 86, 89], "recurs": [11, 24, 81, 84], "each": [11, 22, 24, 33, 35, 36, 43, 46, 53, 55, 57, 58, 61, 62, 63, 64, 66, 67, 69, 84], "look": [11, 91], "member": [11, 24, 79, 80, 86], "variabl": [11, 24, 53, 64, 73, 86], "signatur": [11, 24], "similar": [11, 24, 91], "handl": [11, 71, 75, 86], "hand": 11, "mc": [11, 30, 33], "tree": [11, 30], "trigger": 11, "exclud": [11, 35, 91], "valueerror": [11, 58], "hybrid": 12, "galatict": 12, "plane": [12, 71], "tum": [13, 20], "dnn": [13, 20], "padding_valu": [13, 16], "northeren": 13, "i3particl": 14, "other": [14, 33, 71, 89], "algorithm": 14, "comparison": [14, 71], "quantiti": [15, 61, 62, 63, 64], "queso": 16, "retro": [17, 28], "splinemp": 18, "border": 19, "mctree": [19, 23], "ndarrai": [19, 73], "arrai": [19, 22], "boundari": 19, "volum": 19, "coordin": [19, 64], "particl": [19, 33, 70], "start": [19, 89, 91], "stop": [19, 75], "within": [19, 43, 45, 46, 53], "hard": 19, "i3mctre": 19, "flatten_nested_dictionari": [21, 22], "serialis": [21, 22], "transpose_list_of_dict": [21, 22], "frame_is_montecarlo": [21, 23], "frame_is_nois": [21, 23], "get_om_keys_and_pulseseri": [21, 23], "is_boost_enum": [21, 24], "is_boost_class": [21, 24], "is_icecube_class": [21, 24], "is_typ": [21, 24], "is_method": [21, 24], "break_cyclic_recurs": [21, 24], "get_member_vari": [21, 24], "cast_object_to_pure_python": [21, 24], "cast_pulse_series_to_pure_python": [21, 24], "manipul": 22, "obj": [22, 24, 81], "parent_kei": 22, "flatten": 22, "nest": 22, "dictionari": [22, 23, 24, 28, 30, 32, 66, 67, 80], "non": [22, 24, 30, 33, 71], "exampl": [22, 37, 43, 46, 71, 79, 80, 91], "d": [22, 89], "b": [22, 43, 46], "c": [22, 46, 71, 91], "2": [22, 46, 53, 55, 62, 64, 66, 67, 71, 79], "a__b": 22, "applic": 22, "combin": [22, 79], "parent": 22, "__": [22, 24], "nester": 22, "json": [22, 79], "therefor": 22, "we": [22, 24, 37, 89, 91], "outer": 22, "abl": [22, 91], "de": 22, "transpos": 22, "mont": 23, "carlo": 23, "simul": [23, 41], "pulseseri": 23, "calibr": [23, 24], "gcd_dict": [23, 24], "p": [23, 30, 71], "om": [23, 24], "dataclass": 23, "i3calibr": 23, "indicesfor": 23, "boost": 24, "enum": 24, "ensur": [24, 36, 71, 86, 89, 91], "isn": 24, "return_discard": 24, "valid": [24, 37, 59, 61, 62, 63, 71, 75, 77, 82], "mangl": 24, "take": [24, 30, 46, 89], "mainli": 24, "cannot": [24, 77, 82], "trivial": [24, 63], "doe": [24, 80], "try": 24, "equival": 24, "its": 24, "like": [24, 46, 64, 71, 87, 89], "otherwis": [24, 71], "itself": [24, 61, 62, 63], "deem": 24, "wai": [24, 37, 89, 91], "represent": [24, 46], "optic": 24, "found": [24, 71], "parquetdataconvert": [25, 26], "parquetdataset": [25, 27], "pytorch": [27, 31, 32, 69, 91], "module_dict": 28, "devic": 28, "retro_table_nam": 28, "n_worker": [28, 66], "pipeline_nam": 28, "creat": [28, 30, 33, 77, 78, 82, 89, 91], "databas": [28, 30, 31, 32, 33, 35, 66, 73, 91], "initialis": [28, 80], "gnn_module_for_energy_regress": 28, "modulelist": 28, "comput": [28, 59, 61, 62, 63, 64, 71], "directori": [28, 35, 66, 84], "100": [28, 91], "size": [28, 45, 46, 53, 54, 55, 75], "alreadi": [28, 33, 91], "error": [28, 71, 86, 89], "prompt": 28, "avoid": [28, 86, 89], "overwrit": [28, 69], "sqlitedataconvert": [29, 30, 91], "construct_datafram": [29, 30], "is_pulse_map": [29, 30], "is_mc_tre": [29, 30], "sqlitedataset": [29, 31, 32], "sqlitedatasetperturb": [29, 32], "database_exist": [29, 33], "database_table_exist": [29, 33], "run_sql_cod": [29, 33], "save_to_sql": [29, 33], "attach_index": [29, 33], "create_t": [29, 33], "create_table_and_save_to_sql": [29, 33], "db": [30, 72], "max_table_s": 30, "maximum": [30, 46, 61, 62, 63, 75], "row": [30, 33], "exce": 30, "limit": [30, 71], "any_pulsemap_is_non_empti": 30, "data_dict": 30, "empti": [30, 41], "retriev": 30, "splitinicepuls": 30, "least": [30, 89, 91], "true": [30, 33, 41, 66, 69, 71, 73, 79, 80, 82], "becaus": [30, 36], "instead": [30, 71, 77, 82], "alwai": 30, "panda": [30, 37, 73], "datafram": [30, 33, 37, 58, 59, 66, 72, 73], "table_nam": [30, 33], "perturb": 32, "perturbation_dict": 32, "step": [32, 59, 69], "where": [32, 70], "randomli": [32, 37, 80], "intend": [32, 91], "test": [32, 37, 61, 62, 63, 72, 79, 85, 89], "stabil": 32, "small": [32, 71], "chang": [32, 66, 71, 89], "deviat": 32, "database_path": [33, 66, 73], "df": 33, "must": [33, 43, 69, 73, 89], "attach": 33, "default_typ": 33, "null": 33, "integer_primary_kei": 33, "NOT": [33, 71], "integ": [33, 53, 54, 71], "primari": 33, "Such": 33, "appropri": [33, 61, 62, 63], "expect": [33, 37, 41], "doesn": 33, "parquettosqliteconvert": [34, 35], "pairwise_shuffl": [34, 36], "stringselectionresolv": [34, 37], "parquet_path": 35, "mc_truth_tabl": 35, "excluded_field": 35, "id": 35, "everi": [35, 91], "field": [35, 67, 70, 77, 82], "One": [35, 67], "choos": 35, "argument": [35, 73, 75, 77, 79, 80, 82], "exclude_field": 35, "database_nam": 35, "convers": [35, 91], "rng": 36, "relat": [36, 84], "i3_list": [36, 84], "gcd_list": [36, 84], "correpond": 36, "handi": 36, "even": 36, "files_list": 36, "gcd_shuffl": 36, "i3_shuffl": 36, "use_cach": 37, "flexibl": 37, "below": [37, 67, 73, 89, 91], "show": [37, 69], "involv": 37, "cover": 37, "yml": [37, 75, 79, 80], "50000": [37, 79], "ab": [37, 71, 79], "12": [37, 79], "14": [37, 79], "16": [37, 79], "13": [37, 91], "compat": 37, "syntax": [37, 71], "mai": [37, 48, 91], "fix": 37, "graphnet_modul": [38, 39], "graphneti3modul": [39, 41], "i3inferencemodul": [39, 41], "i3pulsecleanermodul": [39, 41], "pulsemap_extractor": 41, "produc": [41, 70, 73], "write": [41, 91], "constructor": 41, "associ": [41, 62, 71], "model_nam": [41, 66], "prediction_column": [41, 58, 59, 72], "pulsmap": 41, "standardmodel": [41, 42, 59], "pickl": 41, "Will": 41, "help": [41, 75, 89], "entri": [41, 53, 67, 75], "dynedg": [41, 42, 51, 54, 55], "energy_reco": 41, "discard_empty_ev": 41, "clean": [41, 89, 91], "assum": [41, 48, 63, 64], "7": [41, 46, 66], "consid": [41, 91], "posit": [41, 46, 62], "signal": 41, "els": 41, "fals": [41, 53, 58, 66, 69, 71, 73, 79], "elimin": 41, "speed": 41, "especi": 41, "sinc": [41, 71], "further": 41, "calcul": [41, 59, 64, 70, 71], "convnet": [42, 51], "dynedge_jinst": [42, 51], "dynedge_kaggle_tito": [42, 51], "unbatch_edge_index": [42, 43], "attributecoarsen": [42, 43], "domcoarsen": [42, 43], "customdomcoarsen": [42, 43], "domandtimewindowcoarsen": [42, 43], "graphbuild": [42, 48, 49, 50, 57], "knngraphbuild": [42, 57], "radialgraphbuild": [42, 57], "euclideangraphbuild": [42, 57], "calculate_xyzt_homophili": [42, 64], "calculate_distance_matrix": [42, 64], "knn_graph_batch": [42, 64], "oper": [43, 45, 51, 53], "cluster": [43, 45, 46, 53, 55], "local": [43, 75], "edge_index": [43, 45, 64], "vector": [43, 46, 71], "longtensor": [43, 46, 64], "mathbf": [43, 46], "ldot": [43, 46], "n": [43, 46, 71], "reduc": 43, "transfer_attribut": 43, "reduce_opt": 43, "avg": 43, "avg_pool": 43, "avg_pool_x": 43, "max": [43, 45, 53, 55, 71, 75], "max_pool": [43, 46], "max_pool_x": [43, 46], "min": [43, 46, 53, 55], "min_pool": [43, 44, 46], "min_pool_x": [43, 44, 46], "sum": [43, 46, 53, 55, 59], "sum_pool": [43, 44, 46], "sum_pool_x": [43, 44, 46], "forward": [43, 45, 48, 52, 53, 54, 55, 56, 57, 58, 59, 63, 71], "simplecoarsen": 43, "addit": [43, 45, 58, 59, 71, 73], "time_window": 43, "time_kei": 43, "window": 43, "dynedgeconv": [44, 45, 53], "edgeconvtito": [44, 45], "dyntran": [44, 45, 55], "sum_pool_and_distribut": [44, 46], "group_bi": [44, 46], "group_pulses_to_dom": [44, 46], "group_pulses_to_pmt": [44, 46], "std_pool_x": [44, 46], "std_pool": [44, 46], "aggr": 45, "nb_neighbor": 45, "features_subset": [45, 53, 55], "edgeconv": 45, "lightningmodul": [45, 58, 69, 86], "edg": [45, 46, 53, 54, 55, 64], "convolut": [45, 52, 53, 54, 55], "mlp": [45, 53], "aggreg": [45, 46], "8": [45, 46, 53, 71, 89, 91], "neighbour": [45, 53, 55, 57, 64], "after": [45, 53, 69, 75], "sequenc": 45, "slice": [45, 53, 55], "sparsetensor": 45, "messagepass": 45, "tito": [45, 55], "solut": [45, 55, 89], "deep": [45, 55], "competit": [45, 49, 55], "reset_paramet": 45, "reset": 45, "learnabl": [45, 51, 52, 53, 54, 55, 56], "messag": [45, 69, 86], "x_i": 45, "x_j": 45, "layer_s": 45, "n_head": 45, "dyntrans1": 45, "head": 45, "multiheadattent": 45, "just": [46, 91], "negat": 46, "cluster_index": 46, "distribut": [46, 53, 62, 71, 73], "ident": [46, 63], "pmt": 46, "f1": 46, "f2": 46, "6": [46, 67, 89], "groupbi": 46, "3": [46, 52, 55, 62, 64, 66, 67, 71, 89, 91], "matrix": [46, 64, 71], "mathbb": 46, "r": [46, 91], "n_1": 46, "n_b": 46, "obtain": [46, 71], "wise": 46, "dens": 46, "fc": 46, "known": 46, "std": 46, "repres": [46, 77, 80], "averag": [46, 71], "torch_geometr": 46, "version": [46, 61, 62, 63, 69, 89, 91], "standardis": 47, "icecubekaggl": [47, 49], "icecubedeepcor": [47, 49], "icecubeupgrad": [47, 49], "icecubeupgrade_v2": [47, 49], "scaler": [48, 49, 50], "ins": 48, "adjac": 48, "nb_input": [48, 52, 53, 54, 55, 56, 61, 62, 63], "nb_output": [48, 49, 52, 54, 56, 61, 63], "overridden": 48, "prototyp": 50, "dynedgejinst": [51, 54], "dynedgetito": [51, 55], "author": [52, 54, 71], "martin": 52, "minh": 52, "nb_intermedi": 52, "dropout_ratio": 52, "dimens": [52, 53, 55, 71], "128": [52, 53, 75], "fraction": 52, "drop": 52, "nb_neighbour": 53, "dynedge_layer_s": 53, "post_processing_layer_s": 53, "readout_layer_s": 53, "global_pooling_schem": [53, 55], "add_global_variables_after_pool": 53, "k": [53, 55, 57, 64, 71], "nearest": [53, 55, 57, 64], "latent": [53, 55, 61], "metric": [53, 55, 69], "dimenion": [53, 55], "multi": 53, "perceptron": 53, "256": 53, "336": 53, "hidden": [53, 54, 61, 63], "skip": 53, "post": 53, "_and_": 53, "As": 53, "last": [53, 61, 63, 69], "scheme": [53, 55], "altern": [53, 71, 89], "exact": [54, 71], "2209": 54, "03042": 54, "oerso": 54, "layer_size_scal": 54, "4": [54, 55, 62, 67], "scale": [54, 61, 62, 63, 71], "ic": 55, "univers": 55, "south": 55, "pole": 55, "dyntrans_layer_s": 55, "core": 56, "class_nam": [57, 58, 80, 86], "log_fold": [57, 58, 86], "nb_nearest_neighbour": 57, "radiu": 57, "sphere": 57, "chosen": [57, 86], "centr": 57, "sigma": 57, "euclidean": [57, 89], "distanc": [57, 64], "between": [57, 59, 64, 69, 71], "see": [57, 69, 89, 91], "http": [57, 71, 89], "arxiv": [57, 71], "org": [57, 71, 91], "pdf": 57, "1809": 57, "06166": 57, "train_dataload": 58, "val_dataload": 58, "max_epoch": 58, "gpu": [58, 59, 75, 91], "ckpt_path": 58, "log_every_n_step": 58, "gradient_clip_v": 58, "distribution_strategi": [58, 59], "trainer_kwarg": 58, "pytorch_lightn": [58, 86], "trainer": [58, 69, 72], "predict_as_datafram": [58, 59], "node_level": [58, 59, 72], "additional_attribut": [58, 59, 72], "save_state_dict": 58, "state_dict": 58, "load_state_dict": 58, "karg": 58, "trust": 58, "load_modul": 58, "modelconfig": [58, 76, 80], "enough": 58, "eval": [58, 91], "lambda": 58, "definit": 58, "consequ": 58, "optimizer_class": 59, "optim": [59, 69], "adam": 59, "optimizer_kwarg": 59, "scheduler_class": 59, "scheduler_kwarg": 59, "scheduler_config": 59, "target_label": [59, 61, 62, 63], "target": [59, 61, 62, 63, 71, 82], "prediction_label": [59, 61, 62, 63], "configure_optim": 59, "shared_step": 59, "batch_idx": 59, "share": 59, "training_step": 59, "train_batch": 59, "validation_step": 59, "val_batch": 59, "compute_loss": [59, 61, 62, 63], "pred": [59, 63], "verbos": [59, 69], "activ": [59, 63, 89, 91], "mode": [59, 63], "deactiv": [59, 63], "multiclassclassificationtask": [60, 61], "binaryclassificationtask": [60, 61], "binaryclassificationtasklogit": [60, 61], "azimuthreconstructionwithkappa": [60, 62], "azimuthreconstruct": [60, 62], "directionreconstructionwithkappa": [60, 62], "zenithreconstruct": [60, 62], "zenithreconstructionwithkappa": [60, 62], "energyreconstruct": [60, 62], "energyreconstructionwithpow": [60, 62], "energyreconstructionwithuncertainti": [60, 62], "vertexreconstruct": [60, 62], "positionreconstruct": [60, 62], "timereconstruct": [60, 62], "inelasticityreconstruct": [60, 62], "identitytask": [60, 61, 63], "arg": [61, 63, 71, 75, 77, 82, 86], "classifi": 61, "untransform": 61, "logit": [61, 71], "affin": [61, 62, 63], "hidden_s": [61, 62, 63], "transform_prediction_and_target": [61, 62, 63], "transform_target": [61, 62, 63], "transform_infer": [61, 62, 63], "transform_support": [61, 62, 63], "loss_weight": [61, 62, 63], "binari": [61, 71], "feed": [61, 62, 63], "lossfunct": [61, 62, 63, 68, 71], "dure": [61, 62, 63, 69], "auto": [61, 62, 63], "matic": [61, 62, 63], "_pred": [61, 62, 63], "numer": [61, 62, 63], "stabl": [61, 62, 63, 91], "log10": [61, 62, 63, 73], "rather": [61, 62, 63, 86], "conjunct": [61, 62, 63], "invers": [61, 62, 63], "recov": [61, 62, 63], "minimum": [61, 62, 63], "restrict": [61, 62, 63, 71], "invert": [61, 62, 63], "1e6": [61, 62, 63], "default_target_label": [61, 62, 63], "default_prediction_label": [61, 62, 63], "target_pr": 61, "angl": [62, 70], "kappa": [62, 71], "var": 62, "azimuth_pr": 62, "azimuth_kappa": 62, "3d": [62, 71], "vmf": 62, "dir_x_pr": 62, "dir_y_pr": 62, "dir_z_pr": 62, "direction_kappa": 62, "zenith_pr": 62, "zenith_kappa": 62, "energy_pr": 62, "uncertainti": 62, "energy_sigma": 62, "vertex": 62, "position_x_pr": 62, "position_y_pr": 62, "position_z_pr": 62, "interaction_time_pr": 62, "interact": 62, "hadron": 62, "inelasticity_pr": 62, "wrt": 63, "train_ev": 63, "xyzt": 64, "homophili": 64, "measur": 64, "notic": [64, 71], "shape": [64, 71], "xyz_coord": 64, "pairwis": 64, "nb_dom": 64, "updat": [64, 66, 69], "config_updat": [65, 66], "weightfitt": [65, 66, 68, 73], "contourfitt": [65, 66], "read_entri": [65, 67], "plot_2d_contour": [65, 67], "plot_1d_contour": [65, 67], "contour": [66, 67], "config_path": 66, "new_config_path": 66, "dummy_sect": 66, "temp": 66, "dummi": 66, "section": 66, "header": 66, "configupdat": 66, "programat": 66, "statistical_fit": 66, "fit_weight": [66, 73], "config_outdir": 66, "weight_nam": [66, 73], "pisa_config_dict": 66, "add_to_databas": [66, 73], "flux": 66, "_database_path": 66, "statist": 66, "effect": [66, 69, 89], "account": 66, "systemat": 66, "hypersurfac": 66, "assumpt": 66, "regard": 66, "pipeline_path": 66, "post_fix": 66, "include_retro": 66, "fit_1d_contour": 66, "run_nam": 66, "config_dict": 66, "grid_siz": 66, "theta23_minmax": 66, "36": 66, "54": 66, "dm31_minmax": 66, "1d": [66, 67], "fit_2d_contour": 66, "2d": [66, 67, 71], "content": 67, "contour_data": 67, "xlim": 67, "ylim": 67, "0023799999999999997": 67, "0025499999999999997": 67, "chi2_critical_valu": 67, "width": 67, "height": 67, "path_to_pisa_fit_result": 67, "name_of_my_model_in_fit": 67, "legend": 67, "color": 67, "linestyl": 67, "style": [67, 89], "line": [67, 69, 75], "upper": 67, "axi": 67, "605": 67, "critic": [67, 86], "chi2": 67, "90": 67, "cl": 67, "right": [67, 71], "176": 67, "inch": 67, "388": 67, "706": 67, "abov": [67, 71, 73, 91], "352": 67, "piecewiselinearlr": [68, 69], "progressbar": [68, 69], "mseloss": [68, 71], "rmseloss": [68, 71], "logcoshloss": [68, 71], "crossentropyloss": [68, 71], "binarycrossentropyloss": [68, 71], "logcmk": [68, 71], "vonmisesfisherloss": [68, 71], "vonmisesfisher2dloss": [68, 71], "euclideandistanceloss": [68, 71], "vonmisesfisher3dloss": [68, 71], "make_dataload": [68, 72], "make_train_validation_dataload": [68, 72], "get_predict": [68, 72], "save_result": [68, 72], "uniform": [68, 73], "bjoernlow": [68, 73], "mileston": 69, "factor": 69, "last_epoch": 69, "_lrschedul": 69, "interpol": 69, "linearli": 69, "denot": 69, "multipli": 69, "closest": 69, "vice": 69, "versa": 69, "wrap": [69, 80], "epoch": [69, 75], "print": [69, 86], "stdout": 69, "get_lr": 69, "refresh_r": 69, "process_posit": 69, "tqdmprogressbar": 69, "progress": 69, "bar": 69, "customis": 69, "lightn": 69, "init_validation_tqdm": 69, "overrid": 69, "init_predict_tqdm": 69, "init_test_tqdm": 69, "init_train_tqdm": 69, "get_metr": 69, "on_train_epoch_start": 69, "previou": 69, "behaviour": 69, "on_train_epoch_end": 69, "don": [69, 91], "duplciat": 69, "runtim": [70, 91], "azimuth_kei": 70, "zenith_kei": 70, "access": [70, 91], "azimiuth": 70, "return_el": 71, "elementwis": 71, "term": 71, "squar": 71, "root": [71, 91], "cosh": 71, "act": 71, "cross": 71, "entropi": 71, "num_class": 71, "softmax": 71, "ed": 71, "probabl": 71, "mit": 71, "licens": 71, "copyright": 71, "2019": 71, "ryabinin": 71, "permiss": 71, "herebi": 71, "person": 71, "copi": 71, "document": 71, "deal": 71, "modifi": 71, "publish": 71, "sublicens": 71, "sell": 71, "permit": 71, "whom": 71, "furnish": 71, "so": [71, 91], "subject": 71, "condit": 71, "shall": 71, "substanti": 71, "portion": 71, "THE": 71, "AS": 71, "warranti": 71, "OF": 71, "kind": 71, "OR": 71, "impli": 71, "BUT": 71, "TO": 71, "merchant": 71, "FOR": 71, "particular": [71, 89], "AND": 71, "noninfring": 71, "IN": 71, "NO": 71, "holder": 71, "BE": 71, "liabl": 71, "claim": 71, "damag": 71, "liabil": 71, "action": 71, "contract": 71, "tort": 71, "aris": 71, "WITH": 71, "_____________________": 71, "github": [71, 91], "com": [71, 91], "mryab": 71, "vmf_loss": 71, "blob": 71, "master": 71, "py": [71, 91], "bessel": 71, "exponenti": 71, "ditto": 71, "iv": 71, "1812": 71, "04616": 71, "spite": 71, "suggest": 71, "sec": 71, "paper": 71, "m": 71, "correct": 71, "static": [71, 89], "ctx": 71, "backward": 71, "grad_output": 71, "von": 71, "mise": 71, "fisher": 71, "log_cmk_exact": 71, "c_": 71, "exactli": [71, 86], "log_cmk_approx": 71, "approx": 71, "minu": 71, "sign": 71, "log_cmk": 71, "kappa_switch": 71, "diverg": 71, "700": 71, "float64": 71, "precis": 71, "unaccur": 71, "switch": 71, "three": 71, "database_indic": 72, "test_siz": 72, "tag": [72, 89, 91], "archiv": 72, "public": 73, "uniformweightfitt": 73, "bin": 73, "privat": 73, "_fit_weight": 73, "sql": 73, "desir": [73, 84], "space": 73, "np": 73, "happen": 73, "x_low": 73, "wherea": 73, "curv": 73, "base_config": [74, 76], "dataset_config": [74, 76], "model_config": [74, 76, 77, 79, 82], "training_config": [74, 76], "argumentpars": [74, 75], "is_gcd_fil": [74, 84], "is_i3_fil": [74, 84], "has_extens": [74, 84], "find_i3_fil": [74, 84], "has_icecube_packag": [74, 85], "has_torch_packag": [74, 85], "has_pisa_packag": [74, 85], "requires_icecub": [74, 85], "repeatfilt": [74, 86], "eps_lik": [74, 87], "consist": [75, 86, 89], "cli": 75, "pop_default": 75, "usag": 75, "descript": 75, "command": [75, 91], "standard_argu": 75, "home": [75, 91], "runner": 75, "lib": [75, 91], "python3": 75, "training_example_data_sqlit": 75, "earli": 75, "patienc": 75, "narg": 75, "50": 75, "example_energy_reconstruction_model": 75, "num": 75, "fetch": 75, "with_standard_argu": 75, "overwritten": [75, 77], "baseconfig": [76, 77, 78, 79, 80, 82], "get_all_argument_valu": [76, 77], "save_dataset_config": [76, 79], "save_model_config": [76, 80], "traverse_and_appli": [76, 81], "list_all_submodul": [76, 81], "get_all_grapnet_class": [76, 81], "is_graphnet_modul": [76, 81], "is_graphnet_class": [76, 81], "get_graphnet_class": [76, 81], "trainingconfig": [76, 82], "basemodel": [77, 80], "keyword": [77, 82], "validationerror": [77, 82], "__pydantic_self__": [77, 82], "dump": [77, 79, 80], "yaml": [77, 78], "as_dict": [77, 80], "classvar": [77, 79, 80, 82], "configdict": [77, 79, 80, 82], "model_field": [77, 79, 80, 82], "fieldinfo": [77, 79, 80, 82], "re": [78, 91], "save_config": 78, "dataconfig": 79, "transpar": [79, 80, 89], "reproduc": [79, 80], "In": [79, 80, 91], "session": [79, 80], "anoth": [79, 80], "you": [79, 80, 89, 91], "still": 79, "csv": 79, "train_select": 79, "test_select": 79, "annot": [79, 80, 82], "nonetyp": 79, "init_fn": [79, 80], "__init__": [79, 80, 91], "trainabl": 80, "hyperparamet": 80, "instanti": 80, "thu": 80, "unambigu": 80, "fn_kwarg": 81, "structur": 81, "moduletyp": 81, "grapnet": 81, "lookup": 81, "early_stopping_pati": 82, "system": [84, 91], "filenam": 84, "dir": 84, "search": 84, "test_funct": 85, "filter": 86, "repeat": 86, "nb_repeats_allow": 86, "record": 86, "logrecord": 86, "clear": 86, "intuit": 86, "composit": 86, "loggeradapt": 86, "clash": 86, "setlevel": 86, "deleg": 86, "msg": 86, "warn": 86, "info": [86, 91], "debug": 86, "warning_onc": 86, "onc": 86, "handler": 86, "file_handl": 86, "filehandl": 86, "stream_handl": 86, "streamhandl": 86, "assort": 87, "ep": 87, "api": 88, "To": [89, 91], "sure": [89, 91], "smooth": 89, "guidelin": 89, "guid": 89, "encourag": 89, "contributor": 89, "discuss": 89, "bug": 89, "anyth": 89, "place": 89, "describ": 89, "yourself": 89, "ownership": 89, "prioriti": 89, "situat": 89, "lot": 89, "effort": 89, "go": 89, "turn": 89, "outsid": 89, "scope": 89, "project": 89, "better": 89, "fork": 89, "repo": 89, "dedic": 89, "branch": [89, 91], "your": [89, 91], "repositori": 89, "graphbuil": 89, "builder": 89, "own": [89, 91], "team": 89, "accept": 89, "autom": 89, "review": 89, "pep8": 89, "docstr": 89, "googl": 89, "hint": 89, "adher": 89, "pep": 89, "pylint": 89, "flake8": 89, "black": 89, "well": 89, "recommend": [89, 91], "mypi": 89, "pydocstyl": 89, "docformatt": 89, "commit": 89, "hook": 89, "instal": 89, "come": 89, "pip": [89, 91], "Then": 89, "everytim": 89, "pep257": 89, "concept": 89, "ljvmiranda921": 89, "io": 89, "notebook": 89, "2018": 89, "06": 89, "21": 89, "precommit": 89, "environ": 91, "virtual": 91, "anaconda": 91, "prove": 91, "instruct": 91, "setup": 91, "want": 91, "part": 91, "achiev": 91, "bash": 91, "shell": 91, "cvmf": 91, "opensciencegrid": 91, "py3": 91, "v4": 91, "sh": 91, "rhel_7_x86_64": 91, "metaproject": 91, "combo": 91, "env": 91, "alia": 91, "script": 91, "With": 91, "now": 91, "light": 91, "extra": 91, "geometr": 91, "won": 91, "later": 91, "torch_cpu": 91, "txt": 91, "cpu": 91, "torch_gpu": 91, "prefer": 91, "unix": 91, "git": 91, "clone": 91, "usernam": 91, "cd": 91, "conda": 91, "gcc_linux": 91, "64": 91, "gxx_linux": 91, "libgcc": 91, "cudatoolkit": 91, "11": 91, "forg": 91, "torch_maco": 91, "On": 91, "maco": 91, "box": 91, "compil": 91, "gcc": 91, "date": 91, "possibli": 91, "cuda": 91, "toolkit": 91, "recent": 91, "omit": 91, "newer": 91, "export": 91, "ld_library_path": 91, "anaconda3": 91, "miniconda3": 91, "bashrc": 91, "librari": 91, "rm": 91, "asogaard": 91, "latest": 91, "dc423315742c": 91, "01_icetrai": 91, "01_convert_i3_fil": 91, "2023": 91, "01": 91, "24": 91, "41": 91, "27": 91, "graphnet_20230124": 91, "134127": 91, "46": 91, "convert_i3_fil": 91, "ic86": 91, "thread": 91, "00": 91, "79": 91, "42": 91, "26": 91, "413": 91, "88it": 91, "specialis": 91, "ones": 91, "push": 91, "vx": 91}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [38, 0, 0, "-", "deployment"], [42, 0, 0, "-", "models"], [65, 0, 0, "-", "pisa"], [68, 0, 0, "-", "training"], [74, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "dataconverter"], [6, 0, 0, "-", "dataloader"], [7, 0, 0, "-", "dataset"], [8, 0, 0, "-", "extractors"], [25, 0, 0, "-", "parquet"], [28, 0, 0, "-", "pipeline"], [29, 0, 0, "-", "sqlite"], [34, 0, 0, "-", "utilities"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.dataconverter": [[5, 1, 1, "", "DataConverter"], [5, 1, 1, "", "FileSet"], [5, 5, 1, "", "cache_output_files"], [5, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[5, 3, 1, "", "execute"], [5, 4, 1, "", "file_suffix"], [5, 3, 1, "", "get_map_function"], [5, 3, 1, "", "merge_files"], [5, 3, 1, "", "save_data"]], "graphnet.data.dataconverter.FileSet": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_file"]], "graphnet.data.dataloader": [[6, 1, 1, "", "DataLoader"], [6, 5, 1, "", "collate_fn"], [6, 5, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[6, 3, 1, "", "from_dataset_config"]], "graphnet.data.dataset": [[7, 6, 1, "", "ColumnMissingException"], [7, 1, 1, "", "Dataset"], [7, 1, 1, "", "EnsembleDataset"]], "graphnet.data.dataset.Dataset": [[7, 3, 1, "", "add_label"], [7, 3, 1, "", "concatenate"], [7, 3, 1, "", "from_config"], [7, 4, 1, "", "path"], [7, 3, 1, "", "query_table"], [7, 4, 1, "", "truth_table"]], "graphnet.data.extractors": [[9, 0, 0, "-", "i3extractor"], [10, 0, 0, "-", "i3featureextractor"], [11, 0, 0, "-", "i3genericextractor"], [12, 0, 0, "-", "i3hybridrecoextractor"], [13, 0, 0, "-", "i3ntmuonlabelsextractor"], [14, 0, 0, "-", "i3particleextractor"], [15, 0, 0, "-", "i3pisaextractor"], [16, 0, 0, "-", "i3quesoextractor"], [17, 0, 0, "-", "i3retroextractor"], [18, 0, 0, "-", "i3splinempeextractor"], [19, 0, 0, "-", "i3truthextractor"], [20, 0, 0, "-", "i3tumextractor"], [21, 0, 0, "-", "utilities"]], "graphnet.data.extractors.i3extractor": [[9, 1, 1, "", "I3Extractor"], [9, 1, 1, "", "I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor.I3Extractor": [[9, 4, 1, "", "name"], [9, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3extractor.I3ExtractorCollection": [[9, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3featureextractor": [[10, 1, 1, "", "I3FeatureExtractor"], [10, 1, 1, "", "I3FeatureExtractorIceCube86"], [10, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [10, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [10, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3genericextractor": [[11, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[12, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3ntmuonlabelsextractor": [[13, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.i3particleextractor": [[14, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.i3pisaextractor": [[15, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.i3quesoextractor": [[16, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.i3retroextractor": [[17, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.i3splinempeextractor": [[18, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3truthextractor": [[19, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.i3tumextractor": [[20, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.utilities": [[22, 0, 0, "-", "collections"], [23, 0, 0, "-", "frames"], [24, 0, 0, "-", "types"]], "graphnet.data.extractors.utilities.collections": [[22, 5, 1, "", "flatten_nested_dictionary"], [22, 5, 1, "", "serialise"], [22, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.utilities.frames": [[23, 5, 1, "", "frame_is_montecarlo"], [23, 5, 1, "", "frame_is_noise"], [23, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.types": [[24, 5, 1, "", "break_cyclic_recursion"], [24, 5, 1, "", "cast_object_to_pure_python"], [24, 5, 1, "", "cast_pulse_series_to_pure_python"], [24, 5, 1, "", "get_member_variables"], [24, 5, 1, "", "is_boost_class"], [24, 5, 1, "", "is_boost_enum"], [24, 5, 1, "", "is_icecube_class"], [24, 5, 1, "", "is_method"], [24, 5, 1, "", "is_type"]], "graphnet.data.parquet": [[26, 0, 0, "-", "parquet_dataconverter"], [27, 0, 0, "-", "parquet_dataset"]], "graphnet.data.parquet.parquet_dataconverter": [[26, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter": [[26, 2, 1, "", "file_suffix"], [26, 3, 1, "", "merge_files"], [26, 3, 1, "", "save_data"]], "graphnet.data.parquet.parquet_dataset": [[27, 1, 1, "", "ParquetDataset"]], "graphnet.data.parquet.parquet_dataset.ParquetDataset": [[27, 3, 1, "", "query_table"]], "graphnet.data.pipeline": [[28, 1, 1, "", "InSQLitePipeline"]], "graphnet.data.sqlite": [[30, 0, 0, "-", "sqlite_dataconverter"], [31, 0, 0, "-", "sqlite_dataset"], [32, 0, 0, "-", "sqlite_dataset_perturbed"], [33, 0, 0, "-", "sqlite_utilities"]], "graphnet.data.sqlite.sqlite_dataconverter": [[30, 1, 1, "", "SQLiteDataConverter"], [30, 5, 1, "", "construct_dataframe"], [30, 5, 1, "", "is_mc_tree"], [30, 5, 1, "", "is_pulse_map"]], "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter": [[30, 3, 1, "", "any_pulsemap_is_non_empty"], [30, 2, 1, "", "file_suffix"], [30, 3, 1, "", "merge_files"], [30, 3, 1, "", "save_data"]], "graphnet.data.sqlite.sqlite_dataset": [[31, 1, 1, "", "SQLiteDataset"]], "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset": [[31, 3, 1, "", "query_table"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[32, 1, 1, "", "SQLiteDatasetPerturbed"]], "graphnet.data.sqlite.sqlite_utilities": [[33, 5, 1, "", "attach_index"], [33, 5, 1, "", "create_table"], [33, 5, 1, "", "create_table_and_save_to_sql"], [33, 5, 1, "", "database_exists"], [33, 5, 1, "", "database_table_exists"], [33, 5, 1, "", "run_sql_code"], [33, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities": [[35, 0, 0, "-", "parquet_to_sqlite"], [36, 0, 0, "-", "random"], [37, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.parquet_to_sqlite": [[35, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter": [[35, 3, 1, "", "run"]], "graphnet.data.utilities.random": [[36, 5, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.string_selection_resolver": [[37, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[37, 3, 1, "", "resolve"]], "graphnet.deployment.i3modules": [[41, 0, 0, "-", "graphnet_module"]], "graphnet.deployment.i3modules.graphnet_module": [[41, 1, 1, "", "GraphNeTI3Module"], [41, 1, 1, "", "I3InferenceModule"], [41, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.models": [[43, 0, 0, "-", "coarsening"], [44, 0, 0, "-", "components"], [47, 0, 0, "-", "detector"], [51, 0, 0, "-", "gnn"], [57, 0, 0, "-", "graph_builders"], [58, 0, 0, "-", "model"], [59, 0, 0, "-", "standard_model"], [60, 0, 0, "-", "task"], [64, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[43, 1, 1, "", "AttributeCoarsening"], [43, 1, 1, "", "Coarsening"], [43, 1, 1, "", "CustomDOMCoarsening"], [43, 1, 1, "", "DOMAndTimeWindowCoarsening"], [43, 1, 1, "", "DOMCoarsening"], [43, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[43, 3, 1, "", "forward"], [43, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[45, 0, 0, "-", "layers"], [46, 0, 0, "-", "pool"]], "graphnet.models.components.layers": [[45, 1, 1, "", "DynEdgeConv"], [45, 1, 1, "", "DynTrans"], [45, 1, 1, "", "EdgeConvTito"]], "graphnet.models.components.layers.DynEdgeConv": [[45, 3, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[45, 3, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[45, 3, 1, "", "forward"], [45, 3, 1, "", "message"], [45, 3, 1, "", "reset_parameters"]], "graphnet.models.components.pool": [[46, 5, 1, "", "group_by"], [46, 5, 1, "", "group_pulses_to_dom"], [46, 5, 1, "", "group_pulses_to_pmt"], [46, 5, 1, "", "min_pool"], [46, 5, 1, "", "min_pool_x"], [46, 5, 1, "", "std_pool"], [46, 5, 1, "", "std_pool_x"], [46, 5, 1, "", "sum_pool"], [46, 5, 1, "", "sum_pool_and_distribute"], [46, 5, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[48, 0, 0, "-", "detector"], [49, 0, 0, "-", "icecube"], [50, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[48, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[48, 4, 1, "", "features"], [48, 3, 1, "", "forward"], [48, 4, 1, "", "nb_inputs"], [48, 4, 1, "", "nb_outputs"]], "graphnet.models.detector.icecube": [[49, 1, 1, "", "IceCube86"], [49, 1, 1, "", "IceCubeDeepCore"], [49, 1, 1, "", "IceCubeKaggle"], [49, 1, 1, "", "IceCubeUpgrade"], [49, 1, 1, "", "IceCubeUpgrade_V2"]], "graphnet.models.detector.icecube.IceCube86": [[49, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[49, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[49, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[49, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeUpgrade_V2": [[49, 2, 1, "", "features"], [49, 4, 1, "", "nb_outputs"]], "graphnet.models.detector.prometheus": [[50, 1, 1, "", "Prometheus"]], "graphnet.models.detector.prometheus.Prometheus": [[50, 2, 1, "", "features"]], "graphnet.models.gnn": [[52, 0, 0, "-", "convnet"], [53, 0, 0, "-", "dynedge"], [54, 0, 0, "-", "dynedge_jinst"], [55, 0, 0, "-", "dynedge_kaggle_tito"], [56, 0, 0, "-", "gnn"]], "graphnet.models.gnn.convnet": [[52, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[52, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[53, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[53, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[54, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[54, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[55, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[55, 3, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[56, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[56, 3, 1, "", "forward"], [56, 4, 1, "", "nb_inputs"], [56, 4, 1, "", "nb_outputs"]], "graphnet.models.graph_builders": [[57, 1, 1, "", "EuclideanGraphBuilder"], [57, 1, 1, "", "GraphBuilder"], [57, 1, 1, "", "KNNGraphBuilder"], [57, 1, 1, "", "RadialGraphBuilder"]], "graphnet.models.graph_builders.EuclideanGraphBuilder": [[57, 3, 1, "", "forward"]], "graphnet.models.graph_builders.KNNGraphBuilder": [[57, 3, 1, "", "forward"]], "graphnet.models.graph_builders.RadialGraphBuilder": [[57, 3, 1, "", "forward"]], "graphnet.models.model": [[58, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[58, 3, 1, "", "fit"], [58, 3, 1, "", "forward"], [58, 3, 1, "", "from_config"], [58, 3, 1, "", "load"], [58, 3, 1, "", "load_state_dict"], [58, 3, 1, "", "predict"], [58, 3, 1, "", "predict_as_dataframe"], [58, 3, 1, "", "save"], [58, 3, 1, "", "save_state_dict"]], "graphnet.models.standard_model": [[59, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[59, 3, 1, "", "compute_loss"], [59, 3, 1, "", "configure_optimizers"], [59, 3, 1, "", "forward"], [59, 3, 1, "", "inference"], [59, 3, 1, "", "predict"], [59, 3, 1, "", "predict_as_dataframe"], [59, 4, 1, "", "prediction_labels"], [59, 3, 1, "", "shared_step"], [59, 4, 1, "", "target_labels"], [59, 3, 1, "", "train"], [59, 3, 1, "", "training_step"], [59, 3, 1, "", "validation_step"]], "graphnet.models.task": [[61, 0, 0, "-", "classification"], [62, 0, 0, "-", "reconstruction"], [63, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[61, 1, 1, "", "BinaryClassificationTask"], [61, 1, 1, "", "BinaryClassificationTaskLogits"], [61, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[61, 2, 1, "", "default_prediction_labels"], [61, 2, 1, "", "default_target_labels"], [61, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[61, 2, 1, "", "default_prediction_labels"], [61, 2, 1, "", "default_target_labels"], [61, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[62, 1, 1, "", "AzimuthReconstruction"], [62, 1, 1, "", "AzimuthReconstructionWithKappa"], [62, 1, 1, "", "DirectionReconstructionWithKappa"], [62, 1, 1, "", "EnergyReconstruction"], [62, 1, 1, "", "EnergyReconstructionWithPower"], [62, 1, 1, "", "EnergyReconstructionWithUncertainty"], [62, 1, 1, "", "InelasticityReconstruction"], [62, 1, 1, "", "PositionReconstruction"], [62, 1, 1, "", "TimeReconstruction"], [62, 1, 1, "", "VertexReconstruction"], [62, 1, 1, "", "ZenithReconstruction"], [62, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[62, 2, 1, "", "default_prediction_labels"], [62, 2, 1, "", "default_target_labels"], [62, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[62, 2, 1, "", "default_prediction_labels"], [62, 2, 1, "", "default_target_labels"], [62, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[62, 2, 1, "", "default_prediction_labels"], [62, 2, 1, "", "default_target_labels"], [62, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[62, 2, 1, "", "default_prediction_labels"], [62, 2, 1, "", "default_target_labels"], [62, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[62, 2, 1, "", "default_prediction_labels"], [62, 2, 1, "", "default_target_labels"], [62, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[62, 2, 1, "", "default_prediction_labels"], [62, 2, 1, "", "default_target_labels"], [62, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[62, 2, 1, "", "default_prediction_labels"], [62, 2, 1, "", "default_target_labels"], [62, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[62, 2, 1, "", "default_prediction_labels"], [62, 2, 1, "", "default_target_labels"], [62, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[62, 2, 1, "", "default_prediction_labels"], [62, 2, 1, "", "default_target_labels"], [62, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[62, 2, 1, "", "default_prediction_labels"], [62, 2, 1, "", "default_target_labels"], [62, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[62, 2, 1, "", "default_prediction_labels"], [62, 2, 1, "", "default_target_labels"], [62, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[62, 2, 1, "", "default_prediction_labels"], [62, 2, 1, "", "default_target_labels"], [62, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[63, 1, 1, "", "IdentityTask"], [63, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[63, 4, 1, "", "default_prediction_labels"], [63, 4, 1, "", "default_target_labels"], [63, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[63, 3, 1, "", "compute_loss"], [63, 4, 1, "", "default_prediction_labels"], [63, 4, 1, "", "default_target_labels"], [63, 3, 1, "", "forward"], [63, 3, 1, "", "inference"], [63, 4, 1, "", "nb_inputs"], [63, 3, 1, "", "train_eval"]], "graphnet.models.utils": [[64, 5, 1, "", "calculate_distance_matrix"], [64, 5, 1, "", "calculate_xyzt_homophily"], [64, 5, 1, "", "knn_graph_batch"]], "graphnet.pisa": [[66, 0, 0, "-", "fitting"], [67, 0, 0, "-", "plotting"]], "graphnet.pisa.fitting": [[66, 1, 1, "", "ContourFitter"], [66, 1, 1, "", "WeightFitter"], [66, 5, 1, "", "config_updater"]], "graphnet.pisa.fitting.ContourFitter": [[66, 3, 1, "", "fit_1d_contour"], [66, 3, 1, "", "fit_2d_contour"]], "graphnet.pisa.fitting.WeightFitter": [[66, 3, 1, "", "fit_weights"]], "graphnet.pisa.plotting": [[67, 5, 1, "", "plot_1D_contour"], [67, 5, 1, "", "plot_2D_contour"], [67, 5, 1, "", "read_entry"]], "graphnet.training": [[69, 0, 0, "-", "callbacks"], [70, 0, 0, "-", "labels"], [71, 0, 0, "-", "loss_functions"], [72, 0, 0, "-", "utils"], [73, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[69, 1, 1, "", "PiecewiseLinearLR"], [69, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[69, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[69, 3, 1, "", "get_metrics"], [69, 3, 1, "", "init_predict_tqdm"], [69, 3, 1, "", "init_test_tqdm"], [69, 3, 1, "", "init_train_tqdm"], [69, 3, 1, "", "init_validation_tqdm"], [69, 3, 1, "", "on_train_epoch_end"], [69, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[70, 1, 1, "", "Direction"], [70, 1, 1, "", "Label"]], "graphnet.training.labels.Label": [[70, 4, 1, "", "key"]], "graphnet.training.loss_functions": [[71, 1, 1, "", "BinaryCrossEntropyLoss"], [71, 1, 1, "", "CrossEntropyLoss"], [71, 1, 1, "", "EuclideanDistanceLoss"], [71, 1, 1, "", "LogCMK"], [71, 1, 1, "", "LogCoshLoss"], [71, 1, 1, "", "LossFunction"], [71, 1, 1, "", "MSELoss"], [71, 1, 1, "", "RMSELoss"], [71, 1, 1, "", "VonMisesFisher2DLoss"], [71, 1, 1, "", "VonMisesFisher3DLoss"], [71, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[71, 3, 1, "", "backward"], [71, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[71, 3, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[71, 3, 1, "", "log_cmk"], [71, 3, 1, "", "log_cmk_approx"], [71, 3, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[72, 5, 1, "", "collate_fn"], [72, 5, 1, "", "get_predictions"], [72, 5, 1, "", "make_dataloader"], [72, 5, 1, "", "make_train_validation_dataloader"], [72, 5, 1, "", "save_results"]], "graphnet.training.weight_fitting": [[73, 1, 1, "", "BjoernLow"], [73, 1, 1, "", "Uniform"], [73, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[73, 3, 1, "", "fit"]], "graphnet.utilities": [[75, 0, 0, "-", "argparse"], [76, 0, 0, "-", "config"], [83, 0, 0, "-", "decorators"], [84, 0, 0, "-", "filesys"], [85, 0, 0, "-", "imports"], [86, 0, 0, "-", "logging"], [87, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[75, 1, 1, "", "ArgumentParser"], [75, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[75, 2, 1, "", "standard_arguments"], [75, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[75, 3, 1, "", "contains"], [75, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[77, 0, 0, "-", "base_config"], [78, 0, 0, "-", "configurable"], [79, 0, 0, "-", "dataset_config"], [80, 0, 0, "-", "model_config"], [81, 0, 0, "-", "parsing"], [82, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[77, 1, 1, "", "BaseConfig"], [77, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[77, 3, 1, "", "as_dict"], [77, 3, 1, "", "dump"], [77, 3, 1, "", "load"], [77, 2, 1, "", "model_config"], [77, 2, 1, "", "model_fields"]], "graphnet.utilities.config.configurable": [[78, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[78, 4, 1, "", "config"], [78, 3, 1, "", "from_config"], [78, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[79, 1, 1, "", "DatasetConfig"], [79, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[79, 2, 1, "", "features"], [79, 2, 1, "", "index_column"], [79, 2, 1, "", "loss_weight_column"], [79, 2, 1, "", "loss_weight_default_value"], [79, 2, 1, "", "loss_weight_table"], [79, 2, 1, "", "model_config"], [79, 2, 1, "", "model_fields"], [79, 2, 1, "", "node_truth"], [79, 2, 1, "", "node_truth_table"], [79, 2, 1, "", "path"], [79, 2, 1, "", "pulsemaps"], [79, 2, 1, "", "seed"], [79, 2, 1, "", "selection"], [79, 2, 1, "", "string_selection"], [79, 2, 1, "", "truth"], [79, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[80, 1, 1, "", "ModelConfig"], [80, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[80, 2, 1, "", "arguments"], [80, 3, 1, "", "as_dict"], [80, 2, 1, "", "class_name"], [80, 2, 1, "", "model_config"], [80, 2, 1, "", "model_fields"]], "graphnet.utilities.config.parsing": [[81, 5, 1, "", "get_all_grapnet_classes"], [81, 5, 1, "", "get_graphnet_classes"], [81, 5, 1, "", "is_graphnet_class"], [81, 5, 1, "", "is_graphnet_module"], [81, 5, 1, "", "list_all_submodules"], [81, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[82, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[82, 2, 1, "", "dataloader"], [82, 2, 1, "", "early_stopping_patience"], [82, 2, 1, "", "fit"], [82, 2, 1, "", "model_config"], [82, 2, 1, "", "model_fields"], [82, 2, 1, "", "target"]], "graphnet.utilities.filesys": [[84, 5, 1, "", "find_i3_files"], [84, 5, 1, "", "has_extension"], [84, 5, 1, "", "is_gcd_file"], [84, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[85, 5, 1, "", "has_icecube_package"], [85, 5, 1, "", "has_pisa_package"], [85, 5, 1, "", "has_torch_package"], [85, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[86, 1, 1, "", "Logger"], [86, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[86, 3, 1, "", "critical"], [86, 3, 1, "", "debug"], [86, 3, 1, "", "error"], [86, 4, 1, "", "file_handlers"], [86, 4, 1, "", "handlers"], [86, 3, 1, "", "info"], [86, 3, 1, "", "setLevel"], [86, 4, 1, "", "stream_handlers"], [86, 3, 1, "", "warning"], [86, 3, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[86, 3, 1, "", "filter"], [86, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[87, 5, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": [0, 90], "impact": [0, 90], "usag": [0, 90], "acknowledg": [0, 90], "api": 1, "constant": [2, 4], "data": 3, "dataconvert": 5, "dataload": 6, "dataset": 7, "extractor": 8, "i3extractor": 9, "i3featureextractor": 10, "i3genericextractor": 11, "i3hybridrecoextractor": 12, "i3ntmuonlabelsextractor": 13, "i3particleextractor": 14, "i3pisaextractor": 15, "i3quesoextractor": 16, "i3retroextractor": 17, "i3splinempeextractor": 18, "i3truthextractor": 19, "i3tumextractor": 20, "util": [21, 34, 64, 72, 74], "collect": 22, "frame": 23, "type": 24, "parquet": 25, "parquet_dataconvert": 26, "parquet_dataset": 27, "pipelin": 28, "sqlite": 29, "sqlite_dataconvert": 30, "sqlite_dataset": 31, "sqlite_dataset_perturb": 32, "sqlite_util": 33, "parquet_to_sqlit": 35, "random": 36, "string_selection_resolv": 37, "deploy": [38, 40], "i3modul": 39, "graphnet_modul": 41, "model": [42, 58], "coarsen": 43, "compon": 44, "layer": 45, "pool": 46, "detector": [47, 48], "icecub": 49, "prometheu": 50, "gnn": [51, 56], "convnet": 52, "dynedg": 53, "dynedge_jinst": 54, "dynedge_kaggle_tito": 55, "graph_build": 57, "standard_model": 59, "task": [60, 63], "classif": 61, "reconstruct": 62, "pisa": 65, "fit": 66, "plot": 67, "train": 68, "callback": 69, "label": 70, "loss_funct": 71, "weight_fit": 73, "argpars": 75, "config": 76, "base_config": 77, "configur": 78, "dataset_config": 79, "model_config": 80, "pars": 81, "training_config": 82, "decor": 83, "filesi": 84, "import": 85, "log": 86, "math": 87, "src": 88, "contribut": 89, "github": 89, "issu": 89, "pull": 89, "request": 89, "convent": 89, "code": 89, "qualiti": 89, "instal": 91, "icetrai": 91, "stand": 91, "alon": 91, "run": 91, "docker": 91}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"About": [[0, "about"], [90, "about"]], "Impact": [[0, "impact"], [90, "impact"]], "Usage": [[0, "usage"], [90, "usage"]], "Acknowledgements": [[0, "acknowledgements"], [90, "acknowledgements"]], "API": [[1, "module-graphnet"]], "constants": [[2, "module-graphnet.constants"], [4, "module-graphnet.data.constants"]], "data": [[3, "module-graphnet.data"]], "dataconverter": [[5, "module-graphnet.data.dataconverter"]], "dataloader": [[6, "module-graphnet.data.dataloader"]], "dataset": [[7, "module-graphnet.data.dataset"]], "extractors": [[8, "module-graphnet.data.extractors"]], "i3extractor": [[9, "module-graphnet.data.extractors.i3extractor"]], "i3featureextractor": [[10, "module-graphnet.data.extractors.i3featureextractor"]], "i3genericextractor": [[11, "module-graphnet.data.extractors.i3genericextractor"]], "i3hybridrecoextractor": [[12, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "i3ntmuonlabelsextractor": [[13, "module-graphnet.data.extractors.i3ntmuonlabelsextractor"]], "i3particleextractor": [[14, "module-graphnet.data.extractors.i3particleextractor"]], "i3pisaextractor": [[15, "module-graphnet.data.extractors.i3pisaextractor"]], "i3quesoextractor": [[16, "module-graphnet.data.extractors.i3quesoextractor"]], "i3retroextractor": [[17, "module-graphnet.data.extractors.i3retroextractor"]], "i3splinempeextractor": [[18, "module-graphnet.data.extractors.i3splinempeextractor"]], "i3truthextractor": [[19, "module-graphnet.data.extractors.i3truthextractor"]], "i3tumextractor": [[20, "module-graphnet.data.extractors.i3tumextractor"]], "utilities": [[21, "module-graphnet.data.extractors.utilities"], [34, "module-graphnet.data.utilities"], [74, "module-graphnet.utilities"]], "collections": [[22, "module-graphnet.data.extractors.utilities.collections"]], "frames": [[23, "module-graphnet.data.extractors.utilities.frames"]], "types": [[24, "module-graphnet.data.extractors.utilities.types"]], "parquet": [[25, "module-graphnet.data.parquet"]], "parquet_dataconverter": [[26, "module-graphnet.data.parquet.parquet_dataconverter"]], "parquet_dataset": [[27, "module-graphnet.data.parquet.parquet_dataset"]], "pipeline": [[28, "module-graphnet.data.pipeline"]], "sqlite": [[29, "module-graphnet.data.sqlite"]], "sqlite_dataconverter": [[30, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "sqlite_dataset": [[31, "module-graphnet.data.sqlite.sqlite_dataset"]], "sqlite_dataset_perturbed": [[32, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "sqlite_utilities": [[33, "module-graphnet.data.sqlite.sqlite_utilities"]], "parquet_to_sqlite": [[35, "module-graphnet.data.utilities.parquet_to_sqlite"]], "random": [[36, "module-graphnet.data.utilities.random"]], "string_selection_resolver": [[37, "module-graphnet.data.utilities.string_selection_resolver"]], "deployment": [[38, "module-graphnet.deployment"]], "i3modules": [[39, "i3modules"]], "deployer": [[40, "deployer"]], "graphnet_module": [[41, "module-graphnet.deployment.i3modules.graphnet_module"]], "models": [[42, "module-graphnet.models"]], "coarsening": [[43, "module-graphnet.models.coarsening"]], "components": [[44, "module-graphnet.models.components"]], "layers": [[45, "module-graphnet.models.components.layers"]], "pool": [[46, "module-graphnet.models.components.pool"]], "detector": [[47, "module-graphnet.models.detector"], [48, "module-graphnet.models.detector.detector"]], "icecube": [[49, "module-graphnet.models.detector.icecube"]], "prometheus": [[50, "module-graphnet.models.detector.prometheus"]], "gnn": [[51, "module-graphnet.models.gnn"], [56, "module-graphnet.models.gnn.gnn"]], "convnet": [[52, "module-graphnet.models.gnn.convnet"]], "dynedge": [[53, "module-graphnet.models.gnn.dynedge"]], "dynedge_jinst": [[54, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedge_kaggle_tito": [[55, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "graph_builders": [[57, "module-graphnet.models.graph_builders"]], "model": [[58, "module-graphnet.models.model"]], "standard_model": [[59, "module-graphnet.models.standard_model"]], "task": [[60, "module-graphnet.models.task"], [63, "module-graphnet.models.task.task"]], "classification": [[61, "module-graphnet.models.task.classification"]], "reconstruction": [[62, "module-graphnet.models.task.reconstruction"]], "utils": [[64, "module-graphnet.models.utils"], [72, "module-graphnet.training.utils"]], "pisa": [[65, "module-graphnet.pisa"]], "fitting": [[66, "module-graphnet.pisa.fitting"]], "plotting": [[67, "module-graphnet.pisa.plotting"]], "training": [[68, "module-graphnet.training"]], "callbacks": [[69, "module-graphnet.training.callbacks"]], "labels": [[70, "module-graphnet.training.labels"]], "loss_functions": [[71, "module-graphnet.training.loss_functions"]], "weight_fitting": [[73, "module-graphnet.training.weight_fitting"]], "argparse": [[75, "module-graphnet.utilities.argparse"]], "config": [[76, "module-graphnet.utilities.config"]], "base_config": [[77, "module-graphnet.utilities.config.base_config"]], "configurable": [[78, "module-graphnet.utilities.config.configurable"]], "dataset_config": [[79, "module-graphnet.utilities.config.dataset_config"]], "model_config": [[80, "module-graphnet.utilities.config.model_config"]], "parsing": [[81, "module-graphnet.utilities.config.parsing"]], "training_config": [[82, "module-graphnet.utilities.config.training_config"]], "decorators": [[83, "module-graphnet.utilities.decorators"]], "filesys": [[84, "module-graphnet.utilities.filesys"]], "imports": [[85, "module-graphnet.utilities.imports"]], "logging": [[86, "module-graphnet.utilities.logging"]], "maths": [[87, "module-graphnet.utilities.maths"]], "src": [[88, "src"]], "Contribute": [[89, "contribute"]], "GitHub issues": [[89, "github-issues"]], "Pull requests": [[89, "pull-requests"]], "Conventions": [[89, "conventions"]], "Code quality": [[89, "code-quality"]], "Install": [[91, "install"]], "Installing with IceTray": [[91, "installing-with-icetray"]], "Installing stand-alone": [[91, "installing-stand-alone"]], "Running in Docker": [[91, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"]], "module": [[1, "module-graphnet"], [2, "module-graphnet.constants"], [3, "module-graphnet.data"], [4, "module-graphnet.data.constants"], [5, "module-graphnet.data.dataconverter"], [6, "module-graphnet.data.dataloader"], [7, "module-graphnet.data.dataset"], [8, "module-graphnet.data.extractors"], [9, "module-graphnet.data.extractors.i3extractor"], [10, "module-graphnet.data.extractors.i3featureextractor"], [11, "module-graphnet.data.extractors.i3genericextractor"], [12, "module-graphnet.data.extractors.i3hybridrecoextractor"], [13, "module-graphnet.data.extractors.i3ntmuonlabelsextractor"], [14, "module-graphnet.data.extractors.i3particleextractor"], [15, "module-graphnet.data.extractors.i3pisaextractor"], [16, "module-graphnet.data.extractors.i3quesoextractor"], [17, "module-graphnet.data.extractors.i3retroextractor"], [18, "module-graphnet.data.extractors.i3splinempeextractor"], [19, "module-graphnet.data.extractors.i3truthextractor"], [20, "module-graphnet.data.extractors.i3tumextractor"], [21, "module-graphnet.data.extractors.utilities"], [22, "module-graphnet.data.extractors.utilities.collections"], [23, "module-graphnet.data.extractors.utilities.frames"], [24, "module-graphnet.data.extractors.utilities.types"], [25, "module-graphnet.data.parquet"], [26, "module-graphnet.data.parquet.parquet_dataconverter"], [27, "module-graphnet.data.parquet.parquet_dataset"], [28, "module-graphnet.data.pipeline"], [29, "module-graphnet.data.sqlite"], [30, "module-graphnet.data.sqlite.sqlite_dataconverter"], [31, "module-graphnet.data.sqlite.sqlite_dataset"], [32, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"], [33, "module-graphnet.data.sqlite.sqlite_utilities"], [34, "module-graphnet.data.utilities"], [35, "module-graphnet.data.utilities.parquet_to_sqlite"], [36, "module-graphnet.data.utilities.random"], [37, "module-graphnet.data.utilities.string_selection_resolver"], [38, "module-graphnet.deployment"], [41, "module-graphnet.deployment.i3modules.graphnet_module"], [42, "module-graphnet.models"], [43, "module-graphnet.models.coarsening"], [44, "module-graphnet.models.components"], [45, "module-graphnet.models.components.layers"], [46, "module-graphnet.models.components.pool"], [47, "module-graphnet.models.detector"], [48, "module-graphnet.models.detector.detector"], [49, "module-graphnet.models.detector.icecube"], [50, "module-graphnet.models.detector.prometheus"], [51, "module-graphnet.models.gnn"], [52, "module-graphnet.models.gnn.convnet"], [53, "module-graphnet.models.gnn.dynedge"], [54, "module-graphnet.models.gnn.dynedge_jinst"], [55, "module-graphnet.models.gnn.dynedge_kaggle_tito"], [56, "module-graphnet.models.gnn.gnn"], [57, "module-graphnet.models.graph_builders"], [58, "module-graphnet.models.model"], [59, "module-graphnet.models.standard_model"], [60, "module-graphnet.models.task"], [61, "module-graphnet.models.task.classification"], [62, "module-graphnet.models.task.reconstruction"], [63, "module-graphnet.models.task.task"], [64, "module-graphnet.models.utils"], [65, "module-graphnet.pisa"], [66, "module-graphnet.pisa.fitting"], [67, "module-graphnet.pisa.plotting"], [68, "module-graphnet.training"], [69, "module-graphnet.training.callbacks"], [70, "module-graphnet.training.labels"], [71, "module-graphnet.training.loss_functions"], [72, "module-graphnet.training.utils"], [73, "module-graphnet.training.weight_fitting"], [74, "module-graphnet.utilities"], [75, "module-graphnet.utilities.argparse"], [76, "module-graphnet.utilities.config"], [77, "module-graphnet.utilities.config.base_config"], [78, "module-graphnet.utilities.config.configurable"], [79, "module-graphnet.utilities.config.dataset_config"], [80, "module-graphnet.utilities.config.model_config"], [81, "module-graphnet.utilities.config.parsing"], [82, "module-graphnet.utilities.config.training_config"], [83, "module-graphnet.utilities.decorators"], [84, "module-graphnet.utilities.filesys"], [85, "module-graphnet.utilities.imports"], [86, "module-graphnet.utilities.logging"], [87, "module-graphnet.utilities.maths"]], "graphnet.constants": [[2, "module-graphnet.constants"]], "graphnet.data": [[3, "module-graphnet.data"]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE"]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES"]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86"]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE"]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE"]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS"]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS"]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE"]], "graphnet.data.constants": [[4, "module-graphnet.data.constants"]], "dataconverter (class in graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.DataConverter"]], "fileset (class in graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.FileSet"]], "cache_output_files() (in module graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.cache_output_files"]], "execute() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.execute"]], "file_suffix (graphnet.data.dataconverter.dataconverter property)": [[5, "graphnet.data.dataconverter.DataConverter.file_suffix"]], "gcd_file (graphnet.data.dataconverter.fileset attribute)": [[5, "graphnet.data.dataconverter.FileSet.gcd_file"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data.dataconverter": [[5, "module-graphnet.data.dataconverter"]], "i3_file (graphnet.data.dataconverter.fileset attribute)": [[5, "graphnet.data.dataconverter.FileSet.i3_file"]], "init_global_index() (in module graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.merge_files"]], "save_data() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.save_data"]], "dataloader (class in graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.DataLoader"]], "collate_fn() (in module graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.collate_fn"]], "do_shuffle() (in module graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.do_shuffle"]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[6, "graphnet.data.dataloader.DataLoader.from_dataset_config"]], "graphnet.data.dataloader": [[6, "module-graphnet.data.dataloader"]], "columnmissingexception": [[7, "graphnet.data.dataset.ColumnMissingException"]], "dataset (class in graphnet.data.dataset)": [[7, "graphnet.data.dataset.Dataset"]], "ensembledataset (class in graphnet.data.dataset)": [[7, "graphnet.data.dataset.EnsembleDataset"]], "add_label() (graphnet.data.dataset.dataset method)": [[7, "graphnet.data.dataset.Dataset.add_label"]], "concatenate() (graphnet.data.dataset.dataset class method)": [[7, "graphnet.data.dataset.Dataset.concatenate"]], "from_config() (graphnet.data.dataset.dataset class method)": [[7, "graphnet.data.dataset.Dataset.from_config"]], "graphnet.data.dataset": [[7, "module-graphnet.data.dataset"]], "path (graphnet.data.dataset.dataset property)": [[7, "graphnet.data.dataset.Dataset.path"]], "query_table() (graphnet.data.dataset.dataset method)": [[7, "graphnet.data.dataset.Dataset.query_table"]], "truth_table (graphnet.data.dataset.dataset property)": [[7, "graphnet.data.dataset.Dataset.truth_table"]], "graphnet.data.extractors": [[8, "module-graphnet.data.extractors"]], "i3extractor (class in graphnet.data.extractors.i3extractor)": [[9, "graphnet.data.extractors.i3extractor.I3Extractor"]], "i3extractorcollection (class in graphnet.data.extractors.i3extractor)": [[9, "graphnet.data.extractors.i3extractor.I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor": [[9, "module-graphnet.data.extractors.i3extractor"]], "name (graphnet.data.extractors.i3extractor.i3extractor property)": [[9, "graphnet.data.extractors.i3extractor.I3Extractor.name"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractor method)": [[9, "graphnet.data.extractors.i3extractor.I3Extractor.set_files"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[9, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.set_files"]], "i3featureextractor (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3featureextractor": [[10, "module-graphnet.data.extractors.i3featureextractor"]], "i3genericextractor (class in graphnet.data.extractors.i3genericextractor)": [[11, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor"]], "graphnet.data.extractors.i3genericextractor": [[11, "module-graphnet.data.extractors.i3genericextractor"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.i3hybridrecoextractor)": [[12, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[12, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.i3ntmuonlabelsextractor)": [[13, "graphnet.data.extractors.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor"]], "graphnet.data.extractors.i3ntmuonlabelsextractor": [[13, "module-graphnet.data.extractors.i3ntmuonlabelsextractor"]], "i3particleextractor (class in graphnet.data.extractors.i3particleextractor)": [[14, "graphnet.data.extractors.i3particleextractor.I3ParticleExtractor"]], "graphnet.data.extractors.i3particleextractor": [[14, "module-graphnet.data.extractors.i3particleextractor"]], "i3pisaextractor (class in graphnet.data.extractors.i3pisaextractor)": [[15, "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor"]], "graphnet.data.extractors.i3pisaextractor": [[15, "module-graphnet.data.extractors.i3pisaextractor"]], "i3quesoextractor (class in graphnet.data.extractors.i3quesoextractor)": [[16, "graphnet.data.extractors.i3quesoextractor.I3QUESOExtractor"]], "graphnet.data.extractors.i3quesoextractor": [[16, "module-graphnet.data.extractors.i3quesoextractor"]], "i3retroextractor (class in graphnet.data.extractors.i3retroextractor)": [[17, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor"]], "graphnet.data.extractors.i3retroextractor": [[17, "module-graphnet.data.extractors.i3retroextractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.i3splinempeextractor)": [[18, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3splinempeextractor": [[18, "module-graphnet.data.extractors.i3splinempeextractor"]], "i3truthextractor (class in graphnet.data.extractors.i3truthextractor)": [[19, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor"]], "graphnet.data.extractors.i3truthextractor": [[19, "module-graphnet.data.extractors.i3truthextractor"]], "i3tumextractor (class in graphnet.data.extractors.i3tumextractor)": [[20, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor"]], "graphnet.data.extractors.i3tumextractor": [[20, "module-graphnet.data.extractors.i3tumextractor"]], "graphnet.data.extractors.utilities": [[21, "module-graphnet.data.extractors.utilities"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.utilities.collections)": [[22, "graphnet.data.extractors.utilities.collections.flatten_nested_dictionary"]], "graphnet.data.extractors.utilities.collections": [[22, "module-graphnet.data.extractors.utilities.collections"]], "serialise() (in module graphnet.data.extractors.utilities.collections)": [[22, "graphnet.data.extractors.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.utilities.collections)": [[22, "graphnet.data.extractors.utilities.collections.transpose_list_of_dicts"]], "frame_is_montecarlo() (in module graphnet.data.extractors.utilities.frames)": [[23, "graphnet.data.extractors.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.utilities.frames)": [[23, "graphnet.data.extractors.utilities.frames.frame_is_noise"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.utilities.frames)": [[23, "graphnet.data.extractors.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.frames": [[23, "module-graphnet.data.extractors.utilities.frames"]], "break_cyclic_recursion() (in module graphnet.data.extractors.utilities.types)": [[24, "graphnet.data.extractors.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[24, "graphnet.data.extractors.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[24, "graphnet.data.extractors.utilities.types.cast_pulse_series_to_pure_python"]], "get_member_variables() (in module graphnet.data.extractors.utilities.types)": [[24, "graphnet.data.extractors.utilities.types.get_member_variables"]], "graphnet.data.extractors.utilities.types": [[24, "module-graphnet.data.extractors.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.utilities.types)": [[24, "graphnet.data.extractors.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.utilities.types)": [[24, "graphnet.data.extractors.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.utilities.types)": [[24, "graphnet.data.extractors.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.utilities.types)": [[24, "graphnet.data.extractors.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.utilities.types)": [[24, "graphnet.data.extractors.utilities.types.is_type"]], "graphnet.data.parquet": [[25, "module-graphnet.data.parquet"]], "parquetdataconverter (class in graphnet.data.parquet.parquet_dataconverter)": [[26, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter"]], "file_suffix (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter attribute)": [[26, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.file_suffix"]], "graphnet.data.parquet.parquet_dataconverter": [[26, "module-graphnet.data.parquet.parquet_dataconverter"]], "merge_files() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[26, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.merge_files"]], "save_data() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[26, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.save_data"]], "parquetdataset (class in graphnet.data.parquet.parquet_dataset)": [[27, "graphnet.data.parquet.parquet_dataset.ParquetDataset"]], "graphnet.data.parquet.parquet_dataset": [[27, "module-graphnet.data.parquet.parquet_dataset"]], "query_table() (graphnet.data.parquet.parquet_dataset.parquetdataset method)": [[27, "graphnet.data.parquet.parquet_dataset.ParquetDataset.query_table"]], "insqlitepipeline (class in graphnet.data.pipeline)": [[28, "graphnet.data.pipeline.InSQLitePipeline"]], "graphnet.data.pipeline": [[28, "module-graphnet.data.pipeline"]], "graphnet.data.sqlite": [[29, "module-graphnet.data.sqlite"]], "sqlitedataconverter (class in graphnet.data.sqlite.sqlite_dataconverter)": [[30, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter"]], "any_pulsemap_is_non_empty() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[30, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.any_pulsemap_is_non_empty"]], "construct_dataframe() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[30, "graphnet.data.sqlite.sqlite_dataconverter.construct_dataframe"]], "file_suffix (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter attribute)": [[30, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.file_suffix"]], "graphnet.data.sqlite.sqlite_dataconverter": [[30, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "is_mc_tree() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[30, "graphnet.data.sqlite.sqlite_dataconverter.is_mc_tree"]], "is_pulse_map() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[30, "graphnet.data.sqlite.sqlite_dataconverter.is_pulse_map"]], "merge_files() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[30, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.merge_files"]], "save_data() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[30, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.save_data"]], "sqlitedataset (class in graphnet.data.sqlite.sqlite_dataset)": [[31, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset"]], "graphnet.data.sqlite.sqlite_dataset": [[31, "module-graphnet.data.sqlite.sqlite_dataset"]], "query_table() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[31, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset.query_table"]], "sqlitedatasetperturbed (class in graphnet.data.sqlite.sqlite_dataset_perturbed)": [[32, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[32, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "attach_index() (in module graphnet.data.sqlite.sqlite_utilities)": [[33, "graphnet.data.sqlite.sqlite_utilities.attach_index"]], "create_table() (in module graphnet.data.sqlite.sqlite_utilities)": [[33, "graphnet.data.sqlite.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[33, "graphnet.data.sqlite.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[33, "graphnet.data.sqlite.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[33, "graphnet.data.sqlite.sqlite_utilities.database_table_exists"]], "graphnet.data.sqlite.sqlite_utilities": [[33, "module-graphnet.data.sqlite.sqlite_utilities"]], "run_sql_code() (in module graphnet.data.sqlite.sqlite_utilities)": [[33, "graphnet.data.sqlite.sqlite_utilities.run_sql_code"]], "save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[33, "graphnet.data.sqlite.sqlite_utilities.save_to_sql"]], "graphnet.data.utilities": [[34, "module-graphnet.data.utilities"]], "parquettosqliteconverter (class in graphnet.data.utilities.parquet_to_sqlite)": [[35, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite": [[35, "module-graphnet.data.utilities.parquet_to_sqlite"]], "run() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[35, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.run"]], "graphnet.data.utilities.random": [[36, "module-graphnet.data.utilities.random"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[36, "graphnet.data.utilities.random.pairwise_shuffle"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[37, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver": [[37, "module-graphnet.data.utilities.string_selection_resolver"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[37, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "graphnet.deployment": [[38, "module-graphnet.deployment"]], "graphneti3module (class in graphnet.deployment.i3modules.graphnet_module)": [[41, "graphnet.deployment.i3modules.graphnet_module.GraphNeTI3Module"]], "i3inferencemodule (class in graphnet.deployment.i3modules.graphnet_module)": [[41, "graphnet.deployment.i3modules.graphnet_module.I3InferenceModule"]], "i3pulsecleanermodule (class in graphnet.deployment.i3modules.graphnet_module)": [[41, "graphnet.deployment.i3modules.graphnet_module.I3PulseCleanerModule"]], "graphnet.deployment.i3modules.graphnet_module": [[41, "module-graphnet.deployment.i3modules.graphnet_module"]], "graphnet.models": [[42, "module-graphnet.models"]], "attributecoarsening (class in graphnet.models.coarsening)": [[43, "graphnet.models.coarsening.AttributeCoarsening"]], "coarsening (class in graphnet.models.coarsening)": [[43, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[43, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[43, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[43, "graphnet.models.coarsening.DOMCoarsening"]], "forward() (graphnet.models.coarsening.coarsening method)": [[43, "graphnet.models.coarsening.Coarsening.forward"]], "graphnet.models.coarsening": [[43, "module-graphnet.models.coarsening"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[43, "graphnet.models.coarsening.Coarsening.reduce_options"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[43, "graphnet.models.coarsening.unbatch_edge_index"]], "graphnet.models.components": [[44, "module-graphnet.models.components"]], "dynedgeconv (class in graphnet.models.components.layers)": [[45, "graphnet.models.components.layers.DynEdgeConv"]], "dyntrans (class in graphnet.models.components.layers)": [[45, "graphnet.models.components.layers.DynTrans"]], "edgeconvtito (class in graphnet.models.components.layers)": [[45, "graphnet.models.components.layers.EdgeConvTito"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[45, "graphnet.models.components.layers.DynEdgeConv.forward"]], "forward() (graphnet.models.components.layers.dyntrans method)": [[45, "graphnet.models.components.layers.DynTrans.forward"]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[45, "graphnet.models.components.layers.EdgeConvTito.forward"]], "graphnet.models.components.layers": [[45, "module-graphnet.models.components.layers"]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[45, "graphnet.models.components.layers.EdgeConvTito.message"]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[45, "graphnet.models.components.layers.EdgeConvTito.reset_parameters"]], "graphnet.models.components.pool": [[46, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[46, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[46, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[46, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[46, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[46, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[46, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[46, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[46, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[46, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[46, "graphnet.models.components.pool.sum_pool_x"]], "graphnet.models.detector": [[47, "module-graphnet.models.detector"]], "detector (class in graphnet.models.detector.detector)": [[48, "graphnet.models.detector.detector.Detector"]], "features (graphnet.models.detector.detector.detector property)": [[48, "graphnet.models.detector.detector.Detector.features"]], "forward() (graphnet.models.detector.detector.detector method)": [[48, "graphnet.models.detector.detector.Detector.forward"]], "graphnet.models.detector.detector": [[48, "module-graphnet.models.detector.detector"]], "nb_inputs (graphnet.models.detector.detector.detector property)": [[48, "graphnet.models.detector.detector.Detector.nb_inputs"]], "nb_outputs (graphnet.models.detector.detector.detector property)": [[48, "graphnet.models.detector.detector.Detector.nb_outputs"]], "icecube86 (class in graphnet.models.detector.icecube)": [[49, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[49, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[49, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[49, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "icecubeupgrade_v2 (class in graphnet.models.detector.icecube)": [[49, "graphnet.models.detector.icecube.IceCubeUpgrade_V2"]], "features (graphnet.models.detector.icecube.icecube86 attribute)": [[49, "graphnet.models.detector.icecube.IceCube86.features"]], "features (graphnet.models.detector.icecube.icecubedeepcore attribute)": [[49, "graphnet.models.detector.icecube.IceCubeDeepCore.features"]], "features (graphnet.models.detector.icecube.icecubekaggle attribute)": [[49, "graphnet.models.detector.icecube.IceCubeKaggle.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[49, "graphnet.models.detector.icecube.IceCubeUpgrade.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade_v2 attribute)": [[49, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.features"]], "graphnet.models.detector.icecube": [[49, "module-graphnet.models.detector.icecube"]], "nb_outputs (graphnet.models.detector.icecube.icecubeupgrade_v2 property)": [[49, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.nb_outputs"]], "prometheus (class in graphnet.models.detector.prometheus)": [[50, "graphnet.models.detector.prometheus.Prometheus"]], "features (graphnet.models.detector.prometheus.prometheus attribute)": [[50, "graphnet.models.detector.prometheus.Prometheus.features"]], "graphnet.models.detector.prometheus": [[50, "module-graphnet.models.detector.prometheus"]], "graphnet.models.gnn": [[51, "module-graphnet.models.gnn"]], "convnet (class in graphnet.models.gnn.convnet)": [[52, "graphnet.models.gnn.convnet.ConvNet"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[52, "graphnet.models.gnn.convnet.ConvNet.forward"]], "graphnet.models.gnn.convnet": [[52, "module-graphnet.models.gnn.convnet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[53, "graphnet.models.gnn.dynedge.DynEdge"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[53, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "graphnet.models.gnn.dynedge": [[53, "module-graphnet.models.gnn.dynedge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[54, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[54, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "graphnet.models.gnn.dynedge_jinst": [[54, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[55, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO"]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[55, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[55, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "gnn (class in graphnet.models.gnn.gnn)": [[56, "graphnet.models.gnn.gnn.GNN"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[56, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn.gnn": [[56, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[56, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[56, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "euclideangraphbuilder (class in graphnet.models.graph_builders)": [[57, "graphnet.models.graph_builders.EuclideanGraphBuilder"]], "graphbuilder (class in graphnet.models.graph_builders)": [[57, "graphnet.models.graph_builders.GraphBuilder"]], "knngraphbuilder (class in graphnet.models.graph_builders)": [[57, "graphnet.models.graph_builders.KNNGraphBuilder"]], "radialgraphbuilder (class in graphnet.models.graph_builders)": [[57, "graphnet.models.graph_builders.RadialGraphBuilder"]], "forward() (graphnet.models.graph_builders.euclideangraphbuilder method)": [[57, "graphnet.models.graph_builders.EuclideanGraphBuilder.forward"]], "forward() (graphnet.models.graph_builders.knngraphbuilder method)": [[57, "graphnet.models.graph_builders.KNNGraphBuilder.forward"]], "forward() (graphnet.models.graph_builders.radialgraphbuilder method)": [[57, "graphnet.models.graph_builders.RadialGraphBuilder.forward"]], "graphnet.models.graph_builders": [[57, "module-graphnet.models.graph_builders"]], "model (class in graphnet.models.model)": [[58, "graphnet.models.model.Model"]], "fit() (graphnet.models.model.model method)": [[58, "graphnet.models.model.Model.fit"]], "forward() (graphnet.models.model.model method)": [[58, "graphnet.models.model.Model.forward"]], "from_config() (graphnet.models.model.model class method)": [[58, "graphnet.models.model.Model.from_config"]], "graphnet.models.model": [[58, "module-graphnet.models.model"]], "load() (graphnet.models.model.model class method)": [[58, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[58, "graphnet.models.model.Model.load_state_dict"]], "predict() (graphnet.models.model.model method)": [[58, "graphnet.models.model.Model.predict"]], "predict_as_dataframe() (graphnet.models.model.model method)": [[58, "graphnet.models.model.Model.predict_as_dataframe"]], "save() (graphnet.models.model.model method)": [[58, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[58, "graphnet.models.model.Model.save_state_dict"]], "standardmodel (class in graphnet.models.standard_model)": [[59, "graphnet.models.standard_model.StandardModel"]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[59, "graphnet.models.standard_model.StandardModel.compute_loss"]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[59, "graphnet.models.standard_model.StandardModel.configure_optimizers"]], "forward() (graphnet.models.standard_model.standardmodel method)": [[59, "graphnet.models.standard_model.StandardModel.forward"]], "graphnet.models.standard_model": [[59, "module-graphnet.models.standard_model"]], "inference() (graphnet.models.standard_model.standardmodel method)": [[59, "graphnet.models.standard_model.StandardModel.inference"]], "predict() (graphnet.models.standard_model.standardmodel method)": [[59, "graphnet.models.standard_model.StandardModel.predict"]], "predict_as_dataframe() (graphnet.models.standard_model.standardmodel method)": [[59, "graphnet.models.standard_model.StandardModel.predict_as_dataframe"]], "prediction_labels (graphnet.models.standard_model.standardmodel property)": [[59, "graphnet.models.standard_model.StandardModel.prediction_labels"]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[59, "graphnet.models.standard_model.StandardModel.shared_step"]], "target_labels (graphnet.models.standard_model.standardmodel property)": [[59, "graphnet.models.standard_model.StandardModel.target_labels"]], "train() (graphnet.models.standard_model.standardmodel method)": [[59, "graphnet.models.standard_model.StandardModel.train"]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[59, "graphnet.models.standard_model.StandardModel.training_step"]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[59, "graphnet.models.standard_model.StandardModel.validation_step"]], "graphnet.models.task": [[60, "module-graphnet.models.task"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[61, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[61, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[61, "graphnet.models.task.classification.MulticlassClassificationTask"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[61, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[61, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[61, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[61, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels"]], "graphnet.models.task.classification": [[61, "module-graphnet.models.task.classification"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[61, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[61, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[62, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[62, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[62, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[62, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[62, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[62, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[62, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[62, "graphnet.models.task.reconstruction.PositionReconstruction"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[62, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[62, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[62, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[62, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[62, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[62, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[62, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[62, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[62, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[62, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[62, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[62, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[62, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[62, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[62, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[62, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[62, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[62, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[62, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[62, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[62, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[62, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[62, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[62, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[62, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[62, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[62, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[62, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels"]], "graphnet.models.task.reconstruction": [[62, "module-graphnet.models.task.reconstruction"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[62, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[62, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[62, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[62, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[62, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[62, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[62, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[62, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[62, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[62, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[62, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[62, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "identitytask (class in graphnet.models.task.task)": [[63, "graphnet.models.task.task.IdentityTask"]], "task (class in graphnet.models.task.task)": [[63, "graphnet.models.task.task.Task"]], "compute_loss() (graphnet.models.task.task.task method)": [[63, "graphnet.models.task.task.Task.compute_loss"]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[63, "graphnet.models.task.task.IdentityTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.task.task property)": [[63, "graphnet.models.task.task.Task.default_prediction_labels"]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[63, "graphnet.models.task.task.IdentityTask.default_target_labels"]], "default_target_labels (graphnet.models.task.task.task property)": [[63, "graphnet.models.task.task.Task.default_target_labels"]], "forward() (graphnet.models.task.task.task method)": [[63, "graphnet.models.task.task.Task.forward"]], "graphnet.models.task.task": [[63, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[63, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[63, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[63, "graphnet.models.task.task.Task.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[63, "graphnet.models.task.task.Task.train_eval"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[64, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[64, "graphnet.models.utils.calculate_xyzt_homophily"]], "graphnet.models.utils": [[64, "module-graphnet.models.utils"]], "knn_graph_batch() (in module graphnet.models.utils)": [[64, "graphnet.models.utils.knn_graph_batch"]], "graphnet.pisa": [[65, "module-graphnet.pisa"]], "contourfitter (class in graphnet.pisa.fitting)": [[66, "graphnet.pisa.fitting.ContourFitter"]], "weightfitter (class in graphnet.pisa.fitting)": [[66, "graphnet.pisa.fitting.WeightFitter"]], "config_updater() (in module graphnet.pisa.fitting)": [[66, "graphnet.pisa.fitting.config_updater"]], "fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[66, "graphnet.pisa.fitting.ContourFitter.fit_1d_contour"]], "fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[66, "graphnet.pisa.fitting.ContourFitter.fit_2d_contour"]], "fit_weights() (graphnet.pisa.fitting.weightfitter method)": [[66, "graphnet.pisa.fitting.WeightFitter.fit_weights"]], "graphnet.pisa.fitting": [[66, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[67, "module-graphnet.pisa.plotting"]], "plot_1d_contour() (in module graphnet.pisa.plotting)": [[67, "graphnet.pisa.plotting.plot_1D_contour"]], "plot_2d_contour() (in module graphnet.pisa.plotting)": [[67, "graphnet.pisa.plotting.plot_2D_contour"]], "read_entry() (in module graphnet.pisa.plotting)": [[67, "graphnet.pisa.plotting.read_entry"]], "graphnet.training": [[68, "module-graphnet.training"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[69, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[69, "graphnet.training.callbacks.ProgressBar"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[69, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[69, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "graphnet.training.callbacks": [[69, "module-graphnet.training.callbacks"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[69, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[69, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[69, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[69, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[69, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[69, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "direction (class in graphnet.training.labels)": [[70, "graphnet.training.labels.Direction"]], "label (class in graphnet.training.labels)": [[70, "graphnet.training.labels.Label"]], "graphnet.training.labels": [[70, "module-graphnet.training.labels"]], "key (graphnet.training.labels.label property)": [[70, "graphnet.training.labels.Label.key"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[71, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[71, "graphnet.training.loss_functions.CrossEntropyLoss"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[71, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "logcmk (class in graphnet.training.loss_functions)": [[71, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[71, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[71, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[71, "graphnet.training.loss_functions.MSELoss"]], "rmseloss (class in graphnet.training.loss_functions)": [[71, "graphnet.training.loss_functions.RMSELoss"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[71, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[71, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[71, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[71, "graphnet.training.loss_functions.LogCMK.backward"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[71, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[71, "graphnet.training.loss_functions.LossFunction.forward"]], "graphnet.training.loss_functions": [[71, "module-graphnet.training.loss_functions"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[71, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[71, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[71, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "collate_fn() (in module graphnet.training.utils)": [[72, "graphnet.training.utils.collate_fn"]], "get_predictions() (in module graphnet.training.utils)": [[72, "graphnet.training.utils.get_predictions"]], "graphnet.training.utils": [[72, "module-graphnet.training.utils"]], "make_dataloader() (in module graphnet.training.utils)": [[72, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[72, "graphnet.training.utils.make_train_validation_dataloader"]], "save_results() (in module graphnet.training.utils)": [[72, "graphnet.training.utils.save_results"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[73, "graphnet.training.weight_fitting.BjoernLow"]], "uniform (class in graphnet.training.weight_fitting)": [[73, "graphnet.training.weight_fitting.Uniform"]], "weightfitter (class in graphnet.training.weight_fitting)": [[73, "graphnet.training.weight_fitting.WeightFitter"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[73, "graphnet.training.weight_fitting.WeightFitter.fit"]], "graphnet.training.weight_fitting": [[73, "module-graphnet.training.weight_fitting"]], "graphnet.utilities": [[74, "module-graphnet.utilities"]], "argumentparser (class in graphnet.utilities.argparse)": [[75, "graphnet.utilities.argparse.ArgumentParser"]], "options (class in graphnet.utilities.argparse)": [[75, "graphnet.utilities.argparse.Options"]], "contains() (graphnet.utilities.argparse.options method)": [[75, "graphnet.utilities.argparse.Options.contains"]], "graphnet.utilities.argparse": [[75, "module-graphnet.utilities.argparse"]], "pop_default() (graphnet.utilities.argparse.options method)": [[75, "graphnet.utilities.argparse.Options.pop_default"]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[75, "graphnet.utilities.argparse.ArgumentParser.standard_arguments"]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[75, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments"]], "graphnet.utilities.config": [[76, "module-graphnet.utilities.config"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[77, "graphnet.utilities.config.base_config.BaseConfig"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[77, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[77, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[77, "graphnet.utilities.config.base_config.get_all_argument_values"]], "graphnet.utilities.config.base_config": [[77, "module-graphnet.utilities.config.base_config"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[77, "graphnet.utilities.config.base_config.BaseConfig.load"]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[77, "graphnet.utilities.config.base_config.BaseConfig.model_config"]], "model_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[77, "graphnet.utilities.config.base_config.BaseConfig.model_fields"]], "configurable (class in graphnet.utilities.config.configurable)": [[78, "graphnet.utilities.config.configurable.Configurable"]], "config (graphnet.utilities.config.configurable.configurable property)": [[78, "graphnet.utilities.config.configurable.Configurable.config"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[78, "graphnet.utilities.config.configurable.Configurable.from_config"]], "graphnet.utilities.config.configurable": [[78, "module-graphnet.utilities.config.configurable"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[78, "graphnet.utilities.config.configurable.Configurable.save_config"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[79, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[79, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "graphnet.utilities.config.dataset_config": [[79, "module-graphnet.utilities.config.dataset_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[79, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[79, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[79, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[79, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[79, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config"]], "model_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[79, "graphnet.utilities.config.dataset_config.DatasetConfig.model_fields"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[79, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[79, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[79, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[79, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[79, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[79, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[79, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[79, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[79, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[79, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[80, "graphnet.utilities.config.model_config.ModelConfig"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[80, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[80, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[80, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "graphnet.utilities.config.model_config": [[80, "module-graphnet.utilities.config.model_config"]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[80, "graphnet.utilities.config.model_config.ModelConfig.model_config"]], "model_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[80, "graphnet.utilities.config.model_config.ModelConfig.model_fields"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[80, "graphnet.utilities.config.model_config.save_model_config"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[81, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[81, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config.parsing": [[81, "module-graphnet.utilities.config.parsing"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[81, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[81, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[81, "graphnet.utilities.config.parsing.list_all_submodules"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[81, "graphnet.utilities.config.parsing.traverse_and_apply"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[82, "graphnet.utilities.config.training_config.TrainingConfig"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[82, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[82, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[82, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "graphnet.utilities.config.training_config": [[82, "module-graphnet.utilities.config.training_config"]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[82, "graphnet.utilities.config.training_config.TrainingConfig.model_config"]], "model_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[82, "graphnet.utilities.config.training_config.TrainingConfig.model_fields"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[82, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "graphnet.utilities.decorators": [[83, "module-graphnet.utilities.decorators"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[84, "graphnet.utilities.filesys.find_i3_files"]], "graphnet.utilities.filesys": [[84, "module-graphnet.utilities.filesys"]], "has_extension() (in module graphnet.utilities.filesys)": [[84, "graphnet.utilities.filesys.has_extension"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[84, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[84, "graphnet.utilities.filesys.is_i3_file"]], "graphnet.utilities.imports": [[85, "module-graphnet.utilities.imports"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[85, "graphnet.utilities.imports.has_icecube_package"]], "has_pisa_package() (in module graphnet.utilities.imports)": [[85, "graphnet.utilities.imports.has_pisa_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[85, "graphnet.utilities.imports.has_torch_package"]], "requires_icecube() (in module graphnet.utilities.imports)": [[85, "graphnet.utilities.imports.requires_icecube"]], "logger (class in graphnet.utilities.logging)": [[86, "graphnet.utilities.logging.Logger"]], "repeatfilter (class in graphnet.utilities.logging)": [[86, "graphnet.utilities.logging.RepeatFilter"]], "critical() (graphnet.utilities.logging.logger method)": [[86, "graphnet.utilities.logging.Logger.critical"]], "debug() (graphnet.utilities.logging.logger method)": [[86, "graphnet.utilities.logging.Logger.debug"]], "error() (graphnet.utilities.logging.logger method)": [[86, "graphnet.utilities.logging.Logger.error"]], "file_handlers (graphnet.utilities.logging.logger property)": [[86, "graphnet.utilities.logging.Logger.file_handlers"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[86, "graphnet.utilities.logging.RepeatFilter.filter"]], "graphnet.utilities.logging": [[86, "module-graphnet.utilities.logging"]], "handlers (graphnet.utilities.logging.logger property)": [[86, "graphnet.utilities.logging.Logger.handlers"]], "info() (graphnet.utilities.logging.logger method)": [[86, "graphnet.utilities.logging.Logger.info"]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[86, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed"]], "setlevel() (graphnet.utilities.logging.logger method)": [[86, "graphnet.utilities.logging.Logger.setLevel"]], "stream_handlers (graphnet.utilities.logging.logger property)": [[86, "graphnet.utilities.logging.Logger.stream_handlers"]], "warning() (graphnet.utilities.logging.logger method)": [[86, "graphnet.utilities.logging.Logger.warning"]], "warning_once() (graphnet.utilities.logging.logger method)": [[86, "graphnet.utilities.logging.Logger.warning_once"]], "eps_like() (in module graphnet.utilities.maths)": [[87, "graphnet.utilities.maths.eps_like"]], "graphnet.utilities.maths": [[87, "module-graphnet.utilities.maths"]]}})