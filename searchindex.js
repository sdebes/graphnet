Search.setIndex({"docnames": ["about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.i3extractor", "api/graphnet.data.extractors.i3featureextractor", "api/graphnet.data.extractors.i3genericextractor", "api/graphnet.data.extractors.i3hybridrecoextractor", "api/graphnet.data.extractors.i3particleextractor", "api/graphnet.data.extractors.i3pisaextractor", "api/graphnet.data.extractors.i3retroextractor", "api/graphnet.data.extractors.i3splinempeextractor", "api/graphnet.data.extractors.i3truthextractor", "api/graphnet.data.extractors.i3tumextractor", "api/graphnet.data.extractors.utilities", "api/graphnet.data.extractors.utilities.collections", "api/graphnet.data.extractors.utilities.frames", "api/graphnet.data.extractors.utilities.types", "api/graphnet.data.parquet", "api/graphnet.data.parquet.parquet_dataconverter", "api/graphnet.data.parquet.parquet_dataset", "api/graphnet.data.pipeline", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.sqlite_dataconverter", "api/graphnet.data.sqlite.sqlite_dataset", "api/graphnet.data.sqlite.sqlite_dataset_perturbed", "api/graphnet.data.sqlite.sqlite_selection", "api/graphnet.data.sqlite.sqlite_utilities", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.deployment", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deployer", "api/graphnet.deployment.i3modules.graphnet_module", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.prometheus", "api/graphnet.models.gnn", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.gnn", "api/graphnet.models.graph_builders", "api/graphnet.models.model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.utils", "api/graphnet.pisa", "api/graphnet.pisa.fitting", "api/graphnet.pisa.plotting", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute", "index", "install"], "filenames": ["about.md", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.i3extractor.rst", "api/graphnet.data.extractors.i3featureextractor.rst", "api/graphnet.data.extractors.i3genericextractor.rst", "api/graphnet.data.extractors.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.i3particleextractor.rst", "api/graphnet.data.extractors.i3pisaextractor.rst", "api/graphnet.data.extractors.i3retroextractor.rst", "api/graphnet.data.extractors.i3splinempeextractor.rst", "api/graphnet.data.extractors.i3truthextractor.rst", "api/graphnet.data.extractors.i3tumextractor.rst", "api/graphnet.data.extractors.utilities.rst", "api/graphnet.data.extractors.utilities.collections.rst", "api/graphnet.data.extractors.utilities.frames.rst", "api/graphnet.data.extractors.utilities.types.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.parquet_dataconverter.rst", "api/graphnet.data.parquet.parquet_dataset.rst", "api/graphnet.data.pipeline.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.sqlite_dataconverter.rst", "api/graphnet.data.sqlite.sqlite_dataset.rst", "api/graphnet.data.sqlite.sqlite_dataset_perturbed.rst", "api/graphnet.data.sqlite.sqlite_selection.rst", "api/graphnet.data.sqlite.sqlite_utilities.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deployer.rst", "api/graphnet.deployment.i3modules.graphnet_module.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.graph_builders.rst", "api/graphnet.models.model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.utils.rst", "api/graphnet.pisa.rst", "api/graphnet.pisa.fitting.rst", "api/graphnet.pisa.plotting.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute.md", "index.rst", "install.md"], "titles": ["About", "API", "constants", "data", "constants", "dataconverter", "dataloader", "dataset", "extractors", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3particleextractor", "i3pisaextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "types", "parquet", "parquet_dataconverter", "parquet_dataset", "pipeline", "sqlite", "sqlite_dataconverter", "sqlite_dataset", "sqlite_dataset_perturbed", "sqlite_selection", "sqlite_utilities", "utilities", "parquet_to_sqlite", "random", "string_selection_resolver", "deployment", "i3modules", "deployer", "graphnet_module", "models", "coarsening", "components", "layers", "pool", "detector", "detector", "icecube", "prometheus", "gnn", "convnet", "dynedge", "dynedge_jinst", "gnn", "graph_builders", "model", "standard_model", "task", "classification", "reconstruction", "task", "utils", "pisa", "fitting", "plotting", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "filesys", "imports", "logging", "maths", "src", "Contribute", "About", "Install"], "terms": {"graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89], "i": [0, 1, 7, 9, 11, 20, 21, 22, 25, 28, 29, 30, 32, 35, 36, 40, 42, 45, 51, 52, 59, 60, 61, 62, 65, 67, 68, 69, 71, 73, 78, 79, 82, 83, 87, 88, 89], "an": [0, 5, 22, 24, 26, 28, 36, 69, 82, 84, 87, 88, 89], "open": [0, 87, 88], "sourc": [0, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 40, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88], "python": [0, 1, 5, 8, 9, 11, 20, 22, 87, 88, 89], "framework": [0, 88], "aim": [0, 1, 87, 88], "provid": [0, 1, 7, 25, 29, 30, 40, 41, 69, 87, 88, 89], "high": [0, 88], "qualiti": [0, 88], "user": [0, 41, 67, 88, 89], "friendli": [0, 88], "end": [0, 1, 5, 24, 28, 88], "function": [0, 5, 6, 7, 22, 31, 32, 35, 40, 42, 45, 56, 59, 60, 61, 62, 64, 65, 69, 70, 72, 77, 78, 79, 82, 83, 85, 88], "perform": [0, 42, 44, 45, 50, 52, 57, 59, 60, 61, 88], "reconstruct": [0, 1, 10, 12, 15, 16, 18, 26, 37, 41, 58, 61, 88], "task": [0, 1, 41, 57, 59, 60, 69, 87, 88], "neutrino": [0, 1, 31, 64, 88], "telescop": [0, 1, 88], "us": [0, 1, 2, 4, 5, 6, 7, 9, 13, 17, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 44, 45, 47, 52, 53, 56, 58, 59, 60, 61, 62, 64, 67, 69, 71, 72, 73, 74, 77, 78, 79, 83, 84, 87, 88, 89], "graph": [0, 1, 6, 7, 25, 29, 30, 40, 44, 45, 47, 55, 62, 68, 70, 87, 88], "neural": [0, 1, 88], "network": [0, 1, 51, 88], "gnn": [0, 1, 26, 41, 51, 52, 53, 57, 88, 89], "make": [0, 5, 71, 77, 78, 87, 88, 89], "fast": [0, 88, 89], "easi": [0, 88], "train": [0, 1, 30, 31, 36, 37, 40, 57, 67, 68, 69, 70, 71, 73, 77, 78, 80, 86, 88, 89], "complex": [0, 41, 88], "model": [0, 1, 30, 37, 40, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 66, 67, 69, 70, 73, 75, 78, 80, 86, 88, 89], "can": [0, 1, 7, 9, 11, 13, 25, 29, 30, 34, 45, 64, 65, 71, 75, 77, 78, 87, 88, 89], "event": [0, 1, 7, 25, 29, 30, 31, 32, 34, 36, 45, 59, 60, 61, 62, 64, 69, 71, 77, 88], "state": [0, 88], "art": [0, 88], "arbitrari": [0, 88], "detector": [0, 1, 17, 41, 48, 49, 57, 88], "configur": [0, 1, 7, 41, 55, 56, 57, 64, 72, 74, 77, 78, 80, 84, 88], "infer": [0, 1, 26, 37, 40, 57, 61, 88, 89], "time": [0, 4, 32, 42, 45, 48, 60, 84, 88, 89], "ar": [0, 1, 4, 5, 7, 11, 22, 24, 25, 28, 29, 30, 34, 36, 45, 52, 59, 64, 69, 71, 78, 87, 88, 89], "order": [0, 20, 42, 62, 88], "magnitud": [0, 88], "faster": [0, 88], "than": [0, 6, 59, 60, 61, 70, 84, 88], "tradit": [0, 88], "techniqu": [0, 88], "common": [0, 1, 69, 81, 83, 88], "ml": [0, 1, 88], "develop": [0, 1, 87, 88, 89], "physicist": [0, 1, 88], "wish": [0, 87, 88], "tool": [0, 1, 88], "research": [0, 88], "By": [0, 34, 59, 60, 61, 88], "unit": [0, 5, 83, 87, 88], "both": [0, 11, 59, 60, 61, 65, 88], "group": [0, 5, 24, 28, 45, 88], "increas": [0, 67, 88], "longev": [0, 88], "usabl": [0, 88], "individu": [0, 5, 7, 25, 29, 30, 45, 52, 62, 88], "code": [0, 17, 32, 77, 78, 88], "contribut": [0, 88, 89], "from": [0, 1, 6, 7, 8, 9, 11, 13, 20, 21, 22, 25, 26, 28, 29, 30, 31, 34, 40, 45, 55, 56, 59, 60, 61, 62, 65, 67, 68, 69, 75, 76, 78, 80, 84, 87, 88, 89], "build": [0, 1, 41, 47, 55, 56, 75, 78, 88], "gener": [0, 5, 7, 11, 25, 29, 31, 40, 59, 69, 88], "reusabl": [0, 88], "softwar": [0, 69, 88], "packag": [0, 1, 35, 79, 82, 83, 87, 88, 89], "base": [0, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 26, 28, 29, 30, 34, 36, 40, 42, 44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 67, 68, 69, 71, 73, 75, 76, 77, 78, 80, 83, 84, 88], "engin": [0, 88], "best": [0, 87, 88], "practic": [0, 87, 88], "lower": [0, 65, 88], "technic": [0, 88], "threshold": [0, 40, 55, 88], "most": [0, 1, 36, 88, 89], "scientif": [0, 1, 88], "problem": [0, 87, 88], "The": [0, 5, 7, 20, 22, 25, 26, 29, 32, 40, 42, 44, 45, 52, 59, 60, 61, 62, 64, 65, 67, 68, 69, 84, 88], "improv": [0, 1, 73, 88], "classif": [0, 1, 41, 58, 61, 69, 88], "yield": [0, 52, 64, 69, 88], "veri": [0, 36, 88], "accur": [0, 88], "e": [0, 1, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 36, 40, 42, 44, 45, 47, 48, 49, 51, 54, 55, 56, 57, 59, 60, 61, 62, 67, 68, 69, 71, 75, 87, 88, 89], "g": [0, 1, 5, 7, 17, 20, 22, 24, 25, 26, 28, 29, 30, 32, 36, 40, 45, 59, 60, 61, 62, 71, 87, 88, 89], "low": [0, 88], "energi": [0, 4, 26, 59, 60, 61, 71, 88], "observ": [0, 88], "icecub": [0, 1, 10, 21, 22, 41, 46, 83, 88, 89], "here": [0, 87, 88, 89], "implement": [0, 1, 5, 9, 23, 24, 27, 28, 44, 51, 52, 53, 69, 87, 88], "wa": [0, 88], "appli": [0, 7, 9, 25, 29, 30, 45, 51, 52, 53, 54, 57, 79, 88], "oscil": [0, 63, 88], "lead": [0, 88], "signific": [0, 88], "angular": [0, 88], "rang": [0, 59, 60, 61, 88], "relev": [0, 1, 22, 35, 82, 87, 88], "studi": [0, 88], "furthermor": [0, 88], "shown": [0, 88], "could": [0, 87, 88], "muon": [0, 31, 88], "v": [0, 60, 88], "therebi": [0, 1, 77, 78, 88], "effici": [0, 88], "puriti": [0, 88], "sampl": [0, 36, 88], "analysi": [0, 26, 88, 89], "similarli": [0, 22, 88], "ha": [0, 5, 22, 24, 28, 32, 40, 51, 69, 82, 88, 89], "great": [0, 88], "point": [0, 16, 68, 69, 88], "analys": [0, 37, 63, 88], "final": [0, 45, 67, 77, 88], "millisecond": [0, 88], "allow": [0, 37, 41, 45, 67, 88, 89], "whole": [0, 88], "new": [0, 1, 44, 75, 80, 87, 88], "type": [0, 5, 6, 7, 8, 9, 19, 20, 21, 24, 25, 28, 29, 30, 31, 32, 34, 35, 36, 42, 44, 45, 47, 51, 52, 53, 54, 55, 56, 57, 61, 62, 64, 65, 67, 69, 70, 71, 73, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88], "cosmic": [0, 88], "alert": [0, 88], "which": [0, 7, 9, 10, 17, 21, 25, 26, 29, 30, 31, 36, 40, 42, 45, 52, 56, 59, 64, 69, 73, 88, 89], "were": [0, 88], "previous": [0, 88], "unfeas": [0, 88], "possibl": [0, 20, 87, 88], "identifi": [0, 5, 7, 17, 25, 29, 30, 78, 88], "10": [0, 26, 73, 88], "tev": [0, 88], "monitor": [0, 88], "rate": [0, 67, 88], "direct": [0, 59, 60, 61, 66, 68, 88], "real": [0, 88], "thi": [0, 3, 5, 7, 9, 11, 22, 24, 25, 28, 29, 30, 32, 35, 40, 41, 45, 47, 52, 57, 59, 60, 61, 62, 64, 65, 67, 69, 71, 75, 78, 87, 88, 89], "enabl": [0, 3, 84, 88], "first": [0, 67, 87, 88], "ever": [0, 88], "despit": [0, 88], "larg": [0, 69, 88], "background": [0, 88], "origin": [0, 64, 88], "compris": [0, 88], "number": [0, 5, 7, 24, 25, 26, 28, 29, 31, 36, 44, 45, 47, 48, 51, 52, 53, 54, 59, 60, 61, 67, 73, 88], "modul": [0, 3, 22, 26, 37, 40, 41, 44, 46, 50, 56, 58, 63, 66, 72, 74, 77, 78, 79, 80, 83, 88], "necessari": [0, 20, 87, 88], "workflow": [0, 88], "ingest": [0, 1, 3, 46, 88], "raw": [0, 88], "data": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 68, 70, 73, 75, 77, 80, 83, 86, 88, 89], "domain": [0, 1, 3, 37, 88], "specif": [0, 1, 3, 5, 7, 10, 22, 23, 24, 25, 27, 28, 29, 31, 32, 37, 42, 45, 46, 47, 48, 49, 50, 54, 57, 58, 59, 60, 61, 69, 87, 88, 89], "format": [0, 1, 3, 5, 7, 20, 24, 28, 65, 77, 87, 88, 89], "deploi": [0, 1, 37, 40, 88], "chain": [0, 1, 37, 41, 57, 88, 89], "illustr": [0, 87, 88], "figur": [0, 65, 88], "level": [0, 7, 17, 25, 29, 30, 32, 42, 45, 84, 88, 89], "overview": [0, 88], "typic": [0, 20, 88], "convert": [0, 1, 3, 5, 20, 24, 28, 34, 88, 89], "industri": [0, 3, 88], "standard": [0, 3, 4, 5, 24, 28, 30, 36, 57, 73, 87, 88], "intermedi": [0, 1, 3, 5, 7, 24, 28, 51, 88, 89], "file": [0, 1, 3, 5, 7, 9, 20, 24, 25, 28, 29, 30, 34, 35, 40, 56, 64, 67, 69, 73, 74, 75, 76, 77, 78, 82, 84, 88, 89], "read": [0, 3, 7, 20, 25, 29, 30, 47, 52, 57, 58, 88, 89], "simpl": [0, 41, 88], "physic": [0, 1, 9, 21, 22, 31, 37, 40, 41, 58, 59, 60, 61, 88], "orient": [0, 41, 88], "compon": [0, 1, 41, 44, 45, 57, 88], "manag": [0, 9, 66, 88], "experi": [0, 1, 66, 88], "log": [0, 1, 60, 66, 67, 69, 72, 88, 89], "deploy": [0, 1, 38, 40, 86, 88], "modular": [0, 41, 88], "subclass": [0, 41, 88], "torch": [0, 7, 25, 29, 30, 41, 44, 56, 57, 83, 88, 89], "nn": [0, 41, 44, 88], "mean": [0, 5, 7, 24, 25, 28, 29, 30, 41, 52, 69, 78, 88], "onli": [0, 1, 7, 25, 29, 30, 41, 45, 59, 60, 61, 64, 71, 78, 83, 88, 89], "need": [0, 20, 41, 56, 69, 88, 89], "import": [0, 1, 32, 41, 72, 88], "few": [0, 41, 87, 88], "exist": [0, 7, 25, 26, 28, 29, 30, 32, 41, 77, 88], "purpos": [0, 41, 69, 88], "built": [0, 41, 88], "them": [0, 1, 20, 41, 52, 59, 60, 61, 64, 88, 89], "togeth": [0, 41, 57, 88], "form": [0, 41, 59, 75, 80, 88], "complet": [0, 41, 57, 88], "extend": [0, 1, 88], "suit": [0, 88], "through": [0, 69, 88], "layer": [0, 41, 43, 45, 51, 52, 53, 59, 60, 61, 88], "connect": [0, 55, 69, 88], "etc": [0, 69, 88], "optimis": [0, 1, 88], "differ": [0, 7, 9, 25, 29, 30, 57, 87, 88, 89], "track": [0, 9, 60, 87, 88], "These": [0, 87, 88], "prepar": [0, 69, 88], "satisfi": [0, 88], "o": [0, 59, 60, 61, 88], "load": [0, 6, 35, 56, 75, 77, 88], "requir": [0, 14, 32, 59, 69, 88, 89], "when": [0, 5, 7, 20, 24, 25, 28, 29, 30, 32, 44, 52, 87, 88, 89], "batch": [0, 6, 26, 42, 44, 45, 57, 62, 70, 73, 88], "do": [0, 69, 77, 78, 87, 88, 89], "predict": [0, 13, 16, 18, 26, 40, 51, 56, 57, 59, 60, 61, 69, 70, 88], "either": [0, 7, 25, 29, 69, 88, 89], "contain": [0, 5, 7, 20, 21, 24, 25, 26, 28, 29, 30, 31, 40, 52, 56, 59, 60, 61, 69, 71, 73, 88, 89], "imag": [0, 1, 87, 88, 89], "portabl": [0, 88], "depend": [0, 88, 89], "free": [0, 69, 88], "split": [0, 42, 88], "up": [0, 5, 24, 28, 87, 88, 89], "interfac": [0, 63, 88, 89], "block": [0, 1, 88], "pre": [0, 30, 47, 87, 88], "directli": [0, 9, 84, 88], "while": [0, 11, 67, 88], "continu": [0, 69, 88], "expand": [0, 88], "": [0, 5, 6, 7, 9, 20, 25, 28, 29, 30, 34, 51, 52, 57, 59, 60, 61, 62, 67, 71, 73, 77, 78, 85, 88, 89], "capabl": [0, 88], "andrea": [0, 88], "s\u00f8gaard": [0, 88], "receiv": [0, 88], "fund": [0, 88], "european": [0, 88], "union": [0, 6, 7, 11, 20, 22, 25, 29, 30, 34, 40, 42, 44, 45, 52, 56, 57, 59, 60, 61, 69, 70, 73, 76, 77, 80, 82, 88], "horizon": [0, 88], "2020": [0, 88], "innov": [0, 88], "programm": [0, 88], "under": [0, 30, 88], "mari": [0, 88], "sk\u0142odowska": [0, 88], "curi": [0, 88], "grant": [0, 69, 88], "agreement": [0, 87, 88], "No": [0, 88], "890778": [0, 88], "work": [0, 4, 21, 87, 88, 89], "rasmu": [0, 53, 88], "\u00f8rs\u00f8e": [0, 88], "partli": [0, 88], "punch4nfdi": [0, 88], "consortium": [0, 88], "support": [0, 22, 87, 88, 89], "dfg": [0, 88], "nfdi": [0, 88], "39": [0, 88, 89], "1": [0, 5, 7, 20, 24, 28, 36, 42, 45, 52, 59, 60, 61, 62, 67, 69, 71, 77, 88, 89], "germani": [0, 88], "conveni": [1, 87, 89], "collabor": 1, "solv": [1, 87], "It": [1, 20, 32, 40, 87], "leverag": 1, "advanc": [1, 45], "machin": [1, 89], "learn": [1, 67, 89], "without": [1, 64, 69, 89], "have": [1, 5, 11, 24, 28, 32, 36, 45, 59, 60, 61, 87, 89], "expert": 1, "themselv": [1, 78], "acceler": 1, "area": 1, "phyic": 1, "design": 1, "principl": 1, "all": [1, 5, 7, 9, 11, 24, 25, 28, 29, 30, 32, 40, 44, 45, 47, 52, 54, 56, 61, 69, 75, 76, 77, 78, 79, 80, 84, 87, 89], "streamlin": 1, "process": [1, 5, 9, 30, 31, 47, 52, 87, 89], "transform": [1, 45, 59, 60, 61, 71], "extens": [1, 82], "basic": 1, "across": [1, 2, 7, 22, 25, 29, 30, 33, 45, 57, 69, 72, 73, 74, 84], "variou": 1, "easili": 1, "architectur": [1, 51, 52, 53, 57], "main": [1, 50, 57, 87, 89], "featur": [1, 3, 4, 5, 7, 10, 25, 26, 29, 30, 40, 44, 45, 47, 48, 49, 51, 52, 53, 54, 59, 62, 70, 77, 87], "i3": [1, 5, 9, 21, 22, 24, 28, 35, 40, 82, 89], "more": [1, 7, 32, 35, 77, 78, 84], "index": [1, 5, 7, 22, 25, 29, 32, 45, 67], "sqlite": [1, 3, 26, 28, 29, 30, 31, 32, 34, 89], "suitabl": 1, "plug": 1, "plai": 1, "abstract": [1, 5, 7, 47, 54, 56, 61, 76], "awai": 1, "detail": [1, 89], "expos": 1, "physicst": 1, "what": [1, 87], "i3modul": [1, 37, 40], "includ": [1, 30, 56, 64, 69, 75, 87], "docker": 1, "run": [1, 34], "containeris": 1, "fashion": 1, "subpackag": [1, 3, 8, 37, 41, 72], "extractor": [1, 3, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 40], "parquet": [1, 3, 24, 25, 34, 89], "util": [1, 3, 8, 20, 21, 22, 31, 32, 34, 35, 36, 41, 66, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86], "constant": [1, 3, 86], "dataconvert": [1, 3, 24, 28], "dataload": [1, 3, 26, 56, 57, 70, 80], "dataset": [1, 3, 6, 25, 29, 30, 36, 73, 77], "pipelin": [1, 3], "coarsen": [1, 41, 45, 57], "graph_build": [1, 41, 47, 48, 49], "standard_model": [1, 41], "pisa": [1, 14, 26, 64, 65, 83, 86, 89], "fit": [1, 56, 63, 65, 69, 71, 80], "plot": [1, 63], "callback": [1, 56, 66], "label": [1, 7, 51, 61, 65, 66, 70], "loss_funct": [1, 59, 60, 61, 66], "weight_fit": [1, 66], "config": [1, 6, 36, 64, 69, 72, 73, 75, 76, 77, 78, 79, 80], "argpars": [1, 72], "decor": [1, 5, 72, 83], "filesi": [1, 72], "math": [1, 72], "submodul": [1, 3, 8, 19, 23, 27, 33, 38, 41, 43, 46, 50, 58, 63, 66, 72, 74, 79], "global": [2, 4, 52, 56], "i3extractor": [3, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 28], "i3featureextractor": [3, 4, 8, 28, 40], "i3genericextractor": [3, 8, 28], "i3hybridrecoextractor": [3, 8], "i3particleextractor": [3, 8], "i3pisaextractor": [3, 8], "i3retroextractor": [3, 8], "i3splinempeextractor": [3, 8], "i3truthextractor": [3, 4, 8], "i3tumextractor": [3, 8], "parquet_dataconvert": [3, 23], "parquet_dataset": [3, 23], "sqlite_dataconvert": [3, 27], "sqlite_dataset": [3, 27], "sqlite_dataset_perturb": [3, 27], "sqlite_select": [3, 27], "sqlite_util": [3, 27], "parquet_to_sqlit": [3, 33], "random": [3, 7, 25, 29, 31, 33, 36, 77], "string_selection_resolv": [3, 33], "truth": [3, 4, 7, 10, 17, 25, 26, 29, 30, 32, 70, 71, 77], "fileset": [3, 5], "init_global_index": [3, 5], "cache_output_fil": [3, 5], "collate_fn": [3, 6, 66, 70], "do_shuffl": [3, 6], "columnmissingexcept": [3, 7], "ensembledataset": [3, 7], "insqlitepipelin": [3, 26], "class": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 36, 40, 42, 44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 67, 68, 69, 71, 73, 75, 76, 77, 78, 79, 80, 84, 87], "object": [4, 5, 7, 9, 11, 20, 22, 25, 29, 30, 40, 45, 47, 59, 60, 61, 64, 73, 84], "namespac": [4, 56], "name": [4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 26, 28, 29, 30, 32, 34, 40, 59, 60, 61, 64, 68, 71, 73, 77, 79, 87, 89], "icecube86": [4, 46, 48], "dom_x": [4, 40, 42, 48], "dom_i": [4, 40, 42, 48], "dom_z": [4, 40, 42, 48], "dom_tim": [4, 48], "charg": [4, 40, 48, 69], "rde": [4, 42, 48], "pmt_area": [4, 42, 48], "deepcor": [4, 10, 48], "upgrad": [4, 10, 48, 89], "string": [4, 5, 7, 20, 24, 25, 28, 29, 30, 36, 45, 48, 75], "pmt_number": [4, 48], "dom_numb": [4, 48], "pmt_dir_x": [4, 48], "pmt_dir_i": [4, 48], "pmt_dir_z": [4, 48], "dom_typ": [4, 48], "prometheu": [4, 41, 46], "sensor_pos_x": [4, 49], "sensor_pos_i": [4, 49], "sensor_pos_z": [4, 49], "t": [4, 22, 32, 49, 65, 67, 69, 89], "kaggl": [4, 48], "x": [4, 5, 17, 24, 28, 44, 45, 48, 56, 61, 62, 65, 69, 71], "y": [4, 17, 48, 62, 65, 89], "z": [4, 5, 17, 24, 28, 48, 62, 89], "auxiliari": [4, 48], "energy_track": 4, "position_x": 4, "position_i": 4, "position_z": 4, "azimuth": [4, 60], "zenith": [4, 60], "pid": [4, 36, 77], "elast": 4, "sim_typ": 4, "interaction_typ": 4, "interaction_tim": 4, "inelast": [4, 60], "stopped_muon": 4, "injection_energi": 4, "injection_typ": 4, "injection_interaction_typ": 4, "injection_zenith": 4, "injection_azimuth": 4, "injection_bjorkenx": 4, "injection_bjorkeni": 4, "injection_position_x": 4, "injection_position_i": 4, "injection_position_z": 4, "injection_column_depth": 4, "primary_lepton_1_typ": 4, "primary_hadron_1_typ": 4, "primary_lepton_1_position_x": 4, "primary_lepton_1_position_i": 4, "primary_lepton_1_position_z": 4, "primary_hadron_1_position_x": 4, "primary_hadron_1_position_i": 4, "primary_hadron_1_position_z": 4, "primary_lepton_1_direction_theta": 4, "primary_lepton_1_direction_phi": 4, "primary_hadron_1_direction_theta": 4, "primary_hadron_1_direction_phi": 4, "primary_lepton_1_energi": 4, "primary_hadron_1_energi": 4, "total_energi": 4, "i3_fil": [5, 9], "str": [5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 40, 42, 44, 45, 47, 52, 56, 57, 59, 60, 61, 64, 68, 70, 71, 73, 75, 76, 77, 78, 79, 80, 82, 84], "gcd_file": [5, 9, 40], "paramet": [5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 40, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85], "output_fil": [5, 24, 28], "global_index": 5, "avail": [5, 11, 26, 83], "pool": [5, 41, 42, 43, 52], "worker": [5, 24, 26, 28, 35, 73], "return": [5, 6, 7, 9, 20, 21, 22, 24, 25, 28, 29, 30, 31, 32, 34, 35, 36, 42, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 64, 65, 67, 69, 70, 71, 73, 75, 76, 77, 78, 79, 82, 83, 84, 85], "none": [5, 7, 9, 11, 17, 22, 24, 25, 26, 28, 29, 30, 32, 34, 44, 45, 52, 56, 57, 59, 60, 61, 64, 67, 70, 71, 73, 76, 77, 82, 84], "synchron": 5, "list": [5, 6, 7, 9, 11, 17, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 40, 42, 45, 47, 48, 49, 52, 55, 56, 57, 59, 60, 61, 62, 65, 67, 69, 70, 71, 77, 79, 80, 82], "process_method": 5, "cach": 5, "output": [5, 24, 28, 34, 47, 48, 51, 52, 53, 54, 56, 64, 71, 78, 84, 89], "typevar": 5, "f": [5, 45], "bound": [5, 65], "callabl": [5, 6, 7, 22, 44, 45, 59, 60, 61, 70, 71, 75, 77, 78, 79, 83], "ani": [5, 6, 7, 20, 21, 22, 24, 25, 28, 29, 44, 45, 52, 56, 57, 59, 61, 65, 69, 71, 73, 75, 76, 78, 79, 80, 84, 89], "outdir": [5, 24, 26, 28, 34, 64], "gcd_rescu": [5, 24, 28, 82], "nb_files_to_batch": [5, 24, 28], "sequential_batch_pattern": [5, 24, 28], "input_file_batch_pattern": [5, 24, 28], "index_column": [5, 7, 24, 25, 28, 29, 30, 32, 36, 56, 64, 70, 71, 77], "icetray_verbos": [5, 24, 28], "abc": [5, 7, 9, 26, 56, 68, 71, 76], "loggermixin": [5, 7, 9, 34, 36, 56, 68, 71, 72, 76, 84], "construct": [5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 28, 29, 30, 34, 36, 42, 43, 44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 67, 68, 69, 70, 71, 73, 76, 77, 78, 84], "regular": [5, 22, 24, 28], "express": [5, 24, 28, 56, 69], "accord": [5, 24, 28, 30, 42, 45, 55], "match": [5, 24, 28, 71, 82, 85], "certain": [5, 24, 28, 34, 64], "pattern": [5, 24, 28], "wildcard": [5, 24, 28], "same": [5, 22, 24, 28, 32, 42, 45, 59, 62, 67, 79], "input": [5, 7, 24, 25, 26, 28, 29, 30, 40, 47, 51, 52, 53, 54, 59, 61, 62, 75, 80], "replac": [5, 24, 28], "period": [5, 24, 28], "special": [5, 11, 24, 28, 40, 62], "interpret": [5, 24, 28, 59], "liter": [5, 24, 28], "charact": [5, 24, 28], "regex": [5, 24, 28], "For": [5, 22, 24, 28, 67], "instanc": [5, 7, 9, 17, 22, 24, 28, 56, 64, 68, 70, 76, 84, 89], "A": [5, 7, 24, 26, 28, 40, 45, 62, 64, 69, 71, 89], "_": [5, 24, 28], "0": [5, 7, 24, 25, 28, 29, 31, 36, 40, 42, 45, 51, 52, 62, 64, 65, 69, 77, 89], "9": [5, 24, 28], "5": [5, 7, 24, 25, 28, 29, 36, 73, 89], "zst": [5, 24, 28], "find": [5, 24, 28, 82], "whose": [5, 24, 28], "one": [5, 7, 24, 28, 32, 40, 45, 56, 77, 78, 82, 87, 89], "capit": [5, 24, 28], "letter": [5, 24, 28], "follow": [5, 24, 28, 52, 57, 69, 71, 87, 89], "underscor": [5, 24, 28], "five": [5, 24, 28], "upgrade_genie_step4_141020_a_000000": [5, 24, 28], "upgrade_genie_step4_141020_a_000001": [5, 24, 28], "upgrade_genie_step4_141020_a_000008": [5, 24, 28], "upgrade_genie_step4_141020_a_000009": [5, 24, 28], "would": [5, 24, 28, 87], "upgrade_genie_step4_141020_a_00000x": [5, 24, 28], "suffix": [5, 24, 28], "upgrade_genie_step4_141020_a_000010": [5, 24, 28], "separ": [5, 20, 24, 28, 67, 89], "upgrade_genie_step4_141020_a_00001x": [5, 24, 28], "option": [5, 6, 7, 17, 21, 24, 25, 26, 28, 29, 30, 31, 34, 36, 42, 44, 45, 52, 56, 57, 59, 60, 61, 64, 65, 69, 70, 71, 72, 73, 75, 77, 79, 82, 84, 89], "int": [5, 6, 7, 24, 25, 26, 28, 29, 30, 31, 36, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 67, 69, 70, 71, 73, 77, 80, 84], "properti": [5, 7, 9, 13, 22, 45, 47, 48, 54, 61, 76], "file_suffix": [5, 24, 28], "execut": [5, 32], "method": [5, 9, 19, 20, 21, 22, 24, 28, 40, 44, 45, 60, 69, 71], "set": [5, 11, 84, 87], "inherit": [5, 9, 22, 47, 69, 84], "path": [5, 7, 25, 29, 30, 31, 32, 35, 40, 56, 64, 65, 73, 75, 76, 77, 82, 89], "correspond": [5, 7, 20, 22, 25, 28, 29, 30, 35, 52, 71, 82, 89], "gcd": [5, 9, 21, 35, 40, 82], "save_data": [5, 24, 28], "save": [5, 9, 20, 24, 28, 32, 56, 64, 69, 70, 71, 75, 76, 77, 78, 84, 89], "ordereddict": [5, 24, 28], "extract": [5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 28, 34, 35, 40, 59, 60, 61], "merge_fil": [5, 24, 28], "input_fil": [5, 24, 28], "merg": [5, 24, 28, 69, 89], "result": [5, 24, 28, 45, 67, 69, 70, 79, 89], "default": [5, 7, 11, 17, 20, 24, 25, 26, 28, 29, 30, 31, 32, 34, 40, 44, 45, 47, 51, 52, 53, 56, 59, 60, 61, 64, 65, 67, 69, 71, 73, 75, 82], "current": [5, 24, 28, 36, 67, 87, 89], "rais": [5, 7, 11, 24, 56, 75, 80], "notimplementederror": [5, 24], "If": [5, 7, 11, 24, 26, 28, 56, 64, 67, 71, 87, 89], "been": [5, 24, 40, 69, 87], "backend": [5, 24, 28], "question": 5, "get_map_funct": 5, "nb_file": 5, "map": [5, 7, 10, 11, 25, 28, 29, 30, 32, 40], "pure": [5, 8, 9, 11, 22], "multiprocess": [5, 89], "tupl": [5, 7, 21, 22, 25, 29, 31, 52, 59, 60, 61, 62, 64, 65, 70, 73, 84], "remov": [6, 70, 73], "less": [6, 70], "two": [6, 52, 64, 67, 69, 70], "dom": [6, 7, 25, 29, 30, 42, 45, 70], "hit": [6, 70], "should": [6, 7, 9, 20, 25, 29, 30, 36, 44, 45, 69, 70, 78, 87, 89], "occur": [6, 70], "product": [6, 70], "selection_nam": 6, "check": [6, 21, 22, 28, 32, 73, 82, 83, 87, 89], "whether": [6, 21, 22, 28, 32, 52, 56, 69, 79, 82, 83], "shuffl": [6, 35, 70], "select": [6, 7, 25, 29, 30, 31, 36, 70, 71, 77, 87], "bool": [6, 21, 22, 28, 32, 36, 42, 52, 56, 57, 64, 67, 69, 70, 71, 73, 79, 82, 83, 84], "batch_siz": [6, 26, 62, 70], "num_work": [6, 70], "persistent_work": [6, 70], "kwarg": [6, 44, 59, 61, 69, 71, 75, 84], "t_co": 6, "classmethod": [6, 7, 56, 69, 75, 76], "from_dataset_config": 6, "datasetconfig": [6, 7, 36, 74, 77], "dict": [6, 7, 11, 20, 22, 26, 28, 30, 47, 48, 49, 56, 57, 64, 65, 67, 69, 70, 73, 75, 77, 78, 79, 80], "except": 7, "indic": [7, 31, 36, 45, 67, 73, 87], "miss": 7, "column": [7, 25, 29, 30, 32, 40, 55, 56, 62, 64, 71], "pulsemap": [7, 10, 25, 28, 29, 30, 40, 70, 77], "node_truth": [7, 25, 29, 30, 70, 77], "truth_tabl": [7, 25, 29, 30, 64, 70, 71, 77], "node_truth_t": [7, 25, 29, 30, 70, 77], "string_select": [7, 25, 29, 30, 70, 77], "dtype": [7, 25, 29, 30, 85], "loss_weight_t": [7, 25, 29, 30, 70, 77], "loss_weight_column": [7, 25, 29, 30, 70, 77], "loss_weight_default_valu": [7, 25, 29, 30, 77], "seed": [7, 25, 29, 31, 36, 70, 77], "puls": [7, 10, 11, 21, 22, 25, 28, 29, 30, 32, 40, 42, 45, 62], "seri": [7, 10, 11, 21, 22, 25, 29, 30, 32], "node": [7, 25, 29, 30, 42, 45, 51, 52, 55, 59, 60, 61, 62], "multipl": [7, 9, 25, 29, 30, 67, 77], "store": [7, 9, 25, 26, 29, 30, 32, 64, 68], "ad": [7, 10, 25, 29, 30, 52, 64], "attribut": [7, 25, 29, 30, 42, 59, 60, 61], "event_no": [7, 25, 29, 30, 32, 36, 71, 77], "uniqu": [7, 25, 29, 30, 32, 34, 77], "indici": [7, 21, 25, 29, 30, 36, 69], "tabl": [7, 9, 25, 26, 29, 30, 32, 64, 71], "inform": [7, 9, 11, 17, 25, 29, 30, 65], "subset": [7, 25, 29, 30, 44, 52], "given": [7, 25, 29, 30, 45, 71], "queri": [7, 25, 29, 32, 36], "pass": [7, 25, 29, 44, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 69, 71, 87], "float32": [7, 25, 29, 30], "tensor": [7, 25, 29, 30, 42, 44, 45, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 69, 85], "per": [7, 11, 25, 29, 30, 32, 45, 59, 60, 61, 69, 71], "loss": [7, 25, 29, 30, 57, 59, 60, 61, 67, 69, 73], "weight": [7, 25, 29, 30, 59, 60, 61, 64, 69, 71, 78, 89], "also": [7, 25, 29, 30, 36, 77, 84], "assign": [7, 25, 29, 30, 34, 42, 45, 87], "float": [7, 25, 29, 30, 31, 40, 42, 51, 55, 56, 64, 65, 67, 69, 70, 77], "note": [7, 25, 29, 30, 65, 78], "valu": [7, 17, 20, 25, 28, 29, 30, 32, 45, 65, 69, 73, 75], "specifi": [7, 25, 29, 30, 31, 36, 42, 59, 60, 61, 65, 67, 84, 89], "case": [7, 11, 25, 29, 30, 40, 45, 59, 60, 61, 89], "That": [7, 25, 29, 30, 52, 60, 68], "ignor": [7, 22, 25, 29, 30], "resolv": [7, 25, 29, 36], "10000": [7, 25, 29, 36], "20": [7, 25, 29, 36], "from_config": [7, 56, 76, 77, 78], "concatdataset": [7, 77], "concaten": [7, 20, 52], "query_t": [7, 25, 29], "sequential_index": [7, 25, 29], "some": [7, 25, 29], "out": [7, 52, 57, 58, 69, 84, 87, 89], "sequenti": 7, "len": 7, "self": [7, 64], "_may_": 7, "_indic": 7, "entir": [7, 56], "impos": 7, "befor": [7, 52, 59, 60, 61, 67], "scalar": [7, 62, 69], "length": [7, 22, 67], "element": [7, 20, 22, 57, 62, 79], "present": [7, 73, 82, 83], "add_label": 7, "kei": [7, 11, 20, 21, 22, 28, 32, 42, 45, 68, 78], "fn": [7, 22, 75, 79], "add": [7, 52, 73, 87, 89], "custom": [7, 67], "defin": [7, 36, 40, 45, 77], "singl": [7, 9, 45, 52, 68, 77, 78], "collect": [7, 8, 9, 19, 69, 85], "iter": 7, "i3fram": [8, 9, 11, 21, 22, 40], "frame": [8, 9, 11, 19, 22, 28, 40], "i3extractorcollect": [8, 9], "i3featureextractoricecube86": [8, 10], "i3featureextractoricecubedeepcor": [8, 10], "i3featureextractoricecubeupgrad": [8, 10], "i3pulsenoisetruthflagicecubeupgrad": [8, 10], "i3galacticplanehybridrecoextractor": [8, 12], "i3splinempeicextractor": [8, 16], "__call__": 9, "icetrai": [9, 21, 22, 40, 83], "keep": 9, "proven": 9, "set_fil": 9, "refer": [9, 77], "being": [9, 40, 59, 60, 61], "get": [9, 21, 31, 67, 70, 84, 89], "treat": 9, "86": [10, 48], "nois": [10, 21, 30, 31, 40], "flag": 10, "exclude_kei": 11, "dynam": [11, 44, 52, 53], "pars": [11, 65, 72, 73, 74, 75, 80], "call": [11, 22, 28, 45, 64, 71, 84], "tri": [11, 22], "automat": [11, 69, 87], "cast": [11, 22], "done": [11, 45, 87], "recurs": [11, 22, 79, 82], "each": [11, 20, 22, 32, 34, 35, 42, 45, 52, 55, 56, 59, 62, 64, 65, 67, 82], "look": [11, 89], "member": [11, 22, 77, 78, 84], "variabl": [11, 22, 52, 62, 71], "signatur": [11, 22], "similar": [11, 22, 89], "handl": [11, 69, 73], "hand": 11, "mc": [11, 28, 32], "tree": [11, 28], "trigger": 11, "exclud": [11, 34, 89], "valueerror": [11, 56], "hybrid": 12, "galatict": 12, "plane": [12, 69], "i3particl": 13, "other": [13, 32, 69, 87], "algorithm": 13, "comparison": [13, 69], "quantiti": [14, 59, 60, 61, 62], "retro": [15, 26], "splinemp": 16, "border": 17, "mctree": [17, 21], "ndarrai": [17, 71], "arrai": [17, 20], "boundari": 17, "volum": 17, "coordin": [17, 62], "particl": [17, 32, 68], "start": [17, 87, 89], "stop": [17, 73], "within": [17, 42, 44, 45, 52], "hard": 17, "i3mctre": 17, "tum": 18, "dnn": 18, "flatten_nested_dictionari": [19, 20], "serialis": [19, 20], "transpose_list_of_dict": [19, 20], "frame_is_montecarlo": [19, 21], "frame_is_nois": [19, 21], "get_om_keys_and_pulseseri": [19, 21], "is_boost_enum": [19, 22], "is_boost_class": [19, 22], "is_icecube_class": [19, 22], "is_typ": [19, 22], "is_method": [19, 22], "break_cyclic_recurs": [19, 22], "get_member_vari": [19, 22], "cast_object_to_pure_python": [19, 22], "cast_pulse_series_to_pure_python": [19, 22], "manipul": 20, "obj": [20, 22, 79], "parent_kei": 20, "flatten": 20, "nest": 20, "dictionari": [20, 21, 22, 26, 28, 30, 64, 65, 78], "non": [20, 22, 28, 31, 32, 69, 84], "exampl": [20, 36, 42, 45, 69, 77, 78, 89], "d": [20, 87], "b": [20, 42, 45], "c": [20, 45, 69, 89], "2": [20, 45, 52, 60, 62, 64, 65, 69, 77], "a__b": 20, "applic": 20, "combin": [20, 77], "parent": 20, "__": [20, 22], "nester": 20, "json": [20, 77], "therefor": 20, "we": [20, 22, 36, 87, 89], "outer": 20, "abl": [20, 89], "de": 20, "transpos": 20, "mont": 21, "carlo": 21, "simul": 21, "pulseseri": 21, "calibr": [21, 22], "gcd_dict": [21, 22], "p": [21, 28, 69], "om": [21, 22], "dataclass": 21, "i3calibr": 21, "indicesfor": 21, "boost": 22, "enum": 22, "ensur": [22, 35, 69, 87, 89], "isn": 22, "return_discard": 22, "valid": [22, 36, 57, 59, 60, 61, 69, 73, 75, 80], "mangl": 22, "take": [22, 28, 45, 87], "mainli": 22, "cannot": [22, 75, 80], "trivial": [22, 61], "doe": [22, 78], "try": 22, "equival": 22, "its": 22, "like": [22, 45, 62, 69, 85, 87], "otherwis": [22, 69], "itself": [22, 59, 60, 61], "deem": 22, "wai": [22, 36, 87, 89], "represent": [22, 45], "optic": 22, "found": [22, 69], "parquetdataconvert": [23, 24], "parquetdataset": [23, 25], "pytorch": [25, 29, 30, 67, 89], "module_dict": 26, "devic": 26, "retro_table_nam": 26, "n_worker": [26, 64], "pipeline_nam": 26, "creat": [26, 32, 75, 76, 80, 87, 89], "databas": [26, 28, 29, 30, 31, 32, 34, 64, 71, 89], "initialis": [26, 78], "gnn_module_for_energy_regress": 26, "modulelist": 26, "comput": [26, 57, 59, 60, 61, 62, 69], "directori": [26, 34, 64, 82], "100": [26, 89], "size": [26, 45, 52, 53, 73], "alreadi": [26, 32, 89], "error": [26, 69, 84, 87], "prompt": 26, "avoid": [26, 87], "overwrit": [26, 67], "sqlitedataconvert": [27, 28, 89], "construct_datafram": [27, 28], "is_pulse_map": [27, 28], "is_mc_tre": [27, 28], "sqlitedataset": [27, 29, 30], "sqlitedatasetperturb": [27, 30], "get_desired_event_numb": [27, 31], "get_equal_proportion_neutrino_indic": [27, 31], "get_even_signal_background_indici": [27, 31], "get_even_track_cascade_indici": [27, 31], "get_even_dbang_select": [27, 31], "database_exist": [27, 32], "database_table_exist": [27, 32], "run_sql_cod": [27, 32], "save_to_sql": [27, 32], "attach_index": [27, 32], "create_t": [27, 32], "create_table_and_save_to_sql": [27, 32], "db": [28, 31, 70], "any_pulsemap_is_non_empti": 28, "data_dict": 28, "empti": 28, "retriev": 28, "splitinicepuls": 28, "least": [28, 87, 89], "true": [28, 32, 64, 67, 69, 71], "becaus": [28, 35], "instead": [28, 69], "alwai": 28, "panda": [28, 36, 71], "datafram": [28, 32, 36, 56, 64, 70, 71], "table_nam": [28, 32], "perturb": 30, "perturbation_dict": 30, "step": [30, 57, 67], "where": [30, 68], "randomli": [30, 36, 78], "intend": [30, 89], "test": [30, 31, 36, 59, 60, 61, 70, 77, 83, 87], "stabil": 30, "small": [30, 69], "chang": [30, 64, 69, 87], "deviat": 30, "desired_s": 31, "fraction_nois": 31, "fraction_muon": 31, "fraction_nu_": 31, "fraction_nu_mu": 31, "fraction_nu_tau": 31, "fraction": [31, 51], "nu_e": 31, "nu_mu": 31, "nu_tau": 31, "reed": 31, "equal": 31, "flavour": 31, "proport": 31, "42": [31, 89], "resp": 31, "cc": 31, "nc": 31, "mu": 31, "min_max_decay_length": 31, "dbang": 31, "database_path": [32, 64, 71], "df": 32, "must": [32, 42, 67, 71, 87], "attach": 32, "default_typ": 32, "null": 32, "integer_primary_kei": 32, "NOT": [32, 69], "integ": [32, 52, 53, 69], "primari": 32, "Such": 32, "row": 32, "appropri": [32, 59, 60, 61], "expect": [32, 36, 40], "doesn": 32, "parquettosqliteconvert": [33, 34], "pairwise_shuffl": [33, 35], "stringselectionresolv": [33, 36], "parquet_path": 34, "mc_truth_tabl": 34, "excluded_field": 34, "id": 34, "everi": [34, 89], "field": [34, 65, 68], "One": [34, 65], "choos": 34, "argument": [34, 71, 73, 75, 77, 78, 80], "exclude_field": 34, "database_nam": 34, "convers": [34, 89], "rng": 35, "relat": [35, 82], "i3_list": [35, 82], "gcd_list": [35, 82], "correpond": 35, "handi": 35, "even": 35, "files_list": 35, "gcd_shuffl": 35, "i3_shuffl": 35, "use_cach": 36, "flexibl": 36, "below": [36, 65, 71, 87, 89], "show": [36, 67], "involv": 36, "cover": 36, "yml": [36, 73, 77, 78], "50000": [36, 77], "ab": [36, 69, 77], "12": [36, 77], "14": [36, 77], "16": [36, 77], "13": [36, 89], "compat": 36, "syntax": [36, 69], "mai": [36, 47, 89], "fix": 36, "graphnet_modul": [37, 38], "graphneti3modul": [38, 40], "i3inferencemodul": [38, 40], "i3pulsecleanermodul": [38, 40], "pulsemap_extractor": 40, "produc": [40, 68, 71], "write": [40, 89], "constructor": 40, "associ": [40, 60, 69], "model_nam": [40, 64], "prediction_column": [40, 56, 70], "pulsmap": 40, "standardmodel": [40, 41, 57], "pickl": 40, "Will": 40, "help": [40, 73, 87], "entri": [40, 52, 65, 73], "dynedg": [40, 41, 50, 53], "energy_reco": 40, "clean": [40, 87, 89], "assum": [40, 47, 61, 62], "7": [40, 45, 64], "consid": [40, 89], "posit": [40, 45, 60], "signal": 40, "els": 40, "convnet": [41, 50], "dynedge_jinst": [41, 50], "unbatch_edge_index": [41, 42], "attributecoarsen": [41, 42], "domcoarsen": [41, 42], "customdomcoarsen": [41, 42], "domandtimewindowcoarsen": [41, 42], "graphbuild": [41, 47, 48, 49, 55], "knngraphbuild": [41, 55], "radialgraphbuild": [41, 55], "euclideangraphbuild": [41, 55], "calculate_xyzt_homophili": [41, 62], "calculate_distance_matrix": [41, 62], "knn_graph_batch": [41, 62], "oper": [42, 44, 50, 52], "cluster": [42, 44, 45, 52], "local": [42, 73], "edge_index": [42, 44, 62], "vector": [42, 45, 69], "longtensor": [42, 45, 62], "mathbf": [42, 45], "ldot": [42, 45], "n": [42, 45, 69], "reduc": 42, "transfer_attribut": 42, "reduce_opt": 42, "avg": 42, "avg_pool": 42, "avg_pool_x": 42, "max": [42, 44, 52, 69, 73], "max_pool": [42, 45], "max_pool_x": [42, 45], "min": [42, 45, 52], "min_pool": [42, 43, 45], "min_pool_x": [42, 43, 45], "sum": [42, 45, 52, 57], "sum_pool": [42, 43, 45], "sum_pool_x": [42, 43, 45], "forward": [42, 44, 47, 51, 52, 53, 54, 55, 56, 57, 61, 69], "simplecoarsen": 42, "addit": [42, 44, 56, 69, 71], "time_window": 42, "time_kei": 42, "window": 42, "dynedgeconv": [43, 44, 52], "sum_pool_and_distribut": [43, 45], "group_bi": [43, 45], "group_pulses_to_dom": [43, 45], "group_pulses_to_pmt": [43, 45], "std_pool_x": [43, 45], "std_pool": [43, 45], "aggr": 44, "nb_neighbor": 44, "features_subset": [44, 52], "edgeconv": 44, "lightningmodul": [44, 56, 67], "edg": [44, 45, 52, 53, 62], "convolut": [44, 51, 52, 53], "mlp": [44, 52], "aggreg": [44, 45], "8": [44, 45, 52, 69, 87, 89], "neighbour": [44, 52, 55, 62], "after": [44, 52, 67, 73], "sequenc": 44, "slice": [44, 52], "sparsetensor": 44, "just": [45, 89], "negat": 45, "cluster_index": 45, "distribut": [45, 52, 60, 69, 71], "ident": [45, 61], "pmt": 45, "f1": 45, "f2": 45, "6": [45, 65, 87], "groupbi": 45, "3": [45, 51, 60, 62, 64, 65, 69, 87, 89], "matrix": [45, 62, 69], "mathbb": 45, "r": [45, 89], "n_1": 45, "n_b": 45, "maximum": [45, 59, 60, 61, 73], "obtain": [45, 69], "wise": 45, "dens": 45, "fc": 45, "known": 45, "std": 45, "repres": [45, 75, 78], "averag": [45, 69], "torch_geometr": 45, "version": [45, 59, 60, 61, 67, 87, 89], "standardis": 46, "icecubekaggl": [46, 48], "icecubedeepcor": [46, 48], "icecubeupgrad": [46, 48], "icecubeupgrade_v2": [46, 48], "scaler": [47, 48, 49], "ins": 47, "adjac": 47, "nb_input": [47, 51, 52, 53, 54, 59, 60, 61], "nb_output": [47, 48, 51, 53, 54, 59, 61], "overridden": 47, "competit": 48, "prototyp": 49, "learnabl": [50, 51, 52, 53, 54], "dynedgejinst": [50, 53], "author": [51, 53, 69], "martin": 51, "minh": 51, "nb_intermedi": 51, "dropout_ratio": 51, "dimens": [51, 52, 69], "128": [51, 52, 73], "drop": 51, "nb_neighbour": 52, "dynedge_layer_s": 52, "post_processing_layer_s": 52, "readout_layer_s": 52, "global_pooling_schem": 52, "add_global_variables_after_pool": 52, "k": [52, 55, 62, 69], "nearest": [52, 55, 62], "latent": [52, 59], "metric": [52, 67], "dimenion": 52, "multi": 52, "perceptron": 52, "256": 52, "336": 52, "hidden": [52, 53, 59, 61], "skip": 52, "post": 52, "_and_": 52, "As": 52, "last": [52, 59, 61, 67], "scheme": 52, "fals": [52, 56, 64, 67, 69, 71], "altern": [52, 69, 87], "exact": [53, 69], "2209": 53, "03042": 53, "oerso": 53, "layer_size_scal": 53, "4": [53, 60, 65], "scale": [53, 59, 60, 61, 69], "core": 54, "nb_nearest_neighbour": 55, "radiu": 55, "sphere": 55, "chosen": 55, "centr": 55, "sigma": 55, "euclidean": [55, 87], "distanc": [55, 62], "between": [55, 57, 62, 67, 69], "see": [55, 67, 87, 89], "http": [55, 69, 87], "arxiv": [55, 69], "org": [55, 69, 89], "pdf": 55, "1809": 55, "06166": 55, "train_dataload": 56, "val_dataload": 56, "max_epoch": 56, "gpu": [56, 57, 73, 89], "ckpt_path": 56, "logger": [56, 84], "log_every_n_step": 56, "gradient_clip_v": 56, "distribution_strategi": [56, 57], "trainer_kwarg": 56, "pytorch_lightn": 56, "trainer": [56, 67, 70], "predict_as_datafram": 56, "node_level": [56, 70], "additional_attribut": [56, 70], "save_state_dict": 56, "state_dict": 56, "load_state_dict": 56, "trust": 56, "load_modul": 56, "modelconfig": [56, 74, 78], "enough": 56, "eval": [56, 89], "lambda": 56, "definit": 56, "consequ": 56, "optimizer_class": 57, "optim": [57, 67], "adam": 57, "optimizer_kwarg": 57, "scheduler_class": 57, "scheduler_kwarg": 57, "scheduler_config": 57, "configure_optim": 57, "shared_step": 57, "batch_idx": 57, "share": 57, "calcul": [57, 62, 69], "training_step": 57, "train_batch": 57, "validation_step": 57, "val_batch": 57, "compute_loss": [57, 59, 60, 61], "pred": [57, 61], "verbos": [57, 67], "activ": [57, 61, 87, 89], "mode": [57, 61], "deactiv": [57, 61], "multiclassclassificationtask": [58, 59], "binaryclassificationtask": [58, 59], "binaryclassificationtasklogit": [58, 59], "azimuthreconstructionwithkappa": [58, 60], "azimuthreconstruct": [58, 60], "directionreconstructionwithkappa": [58, 60], "zenithreconstruct": [58, 60], "zenithreconstructionwithkappa": [58, 60], "energyreconstruct": [58, 60], "energyreconstructionwithpow": [58, 60], "energyreconstructionwithuncertainti": [58, 60], "vertexreconstruct": [58, 60], "positionreconstruct": [58, 60], "timereconstruct": [58, 60], "inelasticityreconstruct": [58, 60], "identitytask": [58, 59, 61], "arg": [59, 61, 69, 73, 75, 84], "classifi": 59, "untransform": 59, "logit": [59, 69], "affin": [59, 60, 61], "hidden_s": [59, 60, 61], "target_label": [59, 60, 61], "transform_prediction_and_target": [59, 60, 61], "transform_target": [59, 60, 61], "transform_infer": [59, 60, 61], "transform_support": [59, 60, 61], "loss_weight": [59, 60, 61], "binari": [59, 69], "feed": [59, 60, 61], "target": [59, 60, 61, 69, 80], "lossfunct": [59, 60, 61, 66, 69], "numer": [59, 60, 61], "stabl": [59, 60, 61, 89], "log10": [59, 60, 61, 71], "rather": [59, 60, 61], "conjunct": [59, 60, 61], "invers": [59, 60, 61], "recov": [59, 60, 61], "minimum": [59, 60, 61], "restrict": [59, 60, 61, 69], "invert": [59, 60, 61], "1e6": [59, 60, 61], "angl": 60, "kappa": [60, 69], "var": 60, "3d": [60, 69], "vmf": 60, "uncertainti": 60, "vertex": 60, "interact": 60, "hadron": 60, "wrt": 61, "train_ev": 61, "xyzt": 62, "homophili": 62, "measur": 62, "notic": [62, 69], "shape": [62, 69], "xyz_coord": 62, "pairwis": 62, "nb_dom": 62, "updat": [62, 64, 67], "config_updat": [63, 64], "weightfitt": [63, 64, 66, 71], "contourfitt": [63, 64], "read_entri": [63, 65], "plot_2d_contour": [63, 65], "plot_1d_contour": [63, 65], "contour": [64, 65], "config_path": 64, "new_config_path": 64, "dummy_sect": 64, "temp": 64, "dummi": 64, "section": 64, "header": 64, "configupdat": 64, "programat": 64, "statistical_fit": 64, "fit_weight": [64, 71], "config_outdir": 64, "weight_nam": [64, 71], "pisa_config_dict": 64, "add_to_databas": [64, 71], "flux": 64, "_database_path": 64, "statist": 64, "effect": [64, 67, 87], "account": 64, "systemat": 64, "hypersurfac": 64, "assumpt": 64, "regard": 64, "pipeline_path": 64, "post_fix": 64, "include_retro": 64, "fit_1d_contour": 64, "run_nam": 64, "config_dict": 64, "grid_siz": 64, "theta23_minmax": 64, "36": 64, "54": 64, "dm31_minmax": 64, "1d": [64, 65], "fit_2d_contour": 64, "2d": [64, 65, 69], "content": 65, "contour_data": 65, "xlim": 65, "ylim": 65, "0023799999999999997": 65, "0025499999999999997": 65, "chi2_critical_valu": 65, "width": 65, "height": 65, "path_to_pisa_fit_result": 65, "name_of_my_model_in_fit": 65, "legend": 65, "color": 65, "linestyl": 65, "style": [65, 87], "line": [65, 67, 73], "upper": 65, "axi": 65, "605": 65, "critic": [65, 84], "chi2": 65, "90": 65, "cl": 65, "right": [65, 69], "176": 65, "inch": 65, "388": 65, "706": 65, "abov": [65, 69, 71, 89], "352": 65, "piecewiselinearlr": [66, 67], "progressbar": [66, 67], "mseloss": [66, 69], "rmseloss": [66, 69], "logcoshloss": [66, 69], "crossentropyloss": [66, 69], "binarycrossentropyloss": [66, 69], "logcmk": [66, 69], "vonmisesfisherloss": [66, 69], "vonmisesfisher2dloss": [66, 69], "euclideandistanceloss": [66, 69], "vonmisesfisher3dloss": [66, 69], "make_dataload": [66, 70], "make_train_validation_dataload": [66, 70], "get_predict": [66, 70], "save_result": [66, 70], "uniform": [66, 71], "bjoernlow": [66, 71], "dure": 67, "mileston": 67, "factor": 67, "last_epoch": 67, "_lrschedul": 67, "interpol": 67, "linearli": 67, "denot": 67, "multipli": 67, "closest": 67, "vice": 67, "versa": 67, "wrap": [67, 78], "epoch": [67, 73], "print": [67, 84], "messag": [67, 84], "stdout": 67, "get_lr": 67, "refresh_r": 67, "process_posit": 67, "tqdmprogressbar": 67, "progress": 67, "bar": 67, "customis": 67, "lightn": 67, "init_validation_tqdm": 67, "overrid": 67, "init_predict_tqdm": 67, "init_test_tqdm": 67, "init_train_tqdm": 67, "get_metr": 67, "on_train_epoch_start": 67, "previou": 67, "behaviour": 67, "on_train_epoch_end": 67, "don": [67, 89], "duplciat": 67, "runtim": [68, 89], "azimuth_kei": 68, "zenith_kei": 68, "return_el": 69, "elementwis": 69, "term": 69, "squar": 69, "root": [69, 89], "cosh": 69, "act": 69, "cross": 69, "entropi": 69, "num_class": 69, "softmax": 69, "ed": 69, "probabl": 69, "mit": 69, "licens": 69, "copyright": 69, "2019": 69, "ryabinin": 69, "permiss": 69, "herebi": 69, "person": 69, "copi": 69, "document": 69, "deal": 69, "limit": 69, "modifi": 69, "publish": 69, "sublicens": 69, "sell": 69, "permit": 69, "whom": 69, "furnish": 69, "so": [69, 89], "subject": 69, "condit": 69, "shall": 69, "substanti": 69, "portion": 69, "THE": 69, "AS": 69, "warranti": 69, "OF": 69, "kind": 69, "OR": 69, "impli": 69, "BUT": 69, "TO": 69, "merchant": 69, "FOR": 69, "particular": [69, 87], "AND": 69, "noninfring": 69, "IN": 69, "NO": 69, "holder": 69, "BE": 69, "liabl": 69, "claim": 69, "damag": 69, "liabil": 69, "action": 69, "contract": 69, "tort": 69, "aris": 69, "WITH": 69, "_____________________": 69, "github": [69, 89], "com": [69, 89], "mryab": 69, "vmf_loss": 69, "blob": 69, "master": 69, "py": [69, 89], "bessel": 69, "exponenti": 69, "ditto": 69, "iv": 69, "1812": 69, "04616": 69, "spite": 69, "suggest": 69, "sec": 69, "paper": 69, "m": 69, "correct": 69, "static": [69, 87], "ctx": 69, "backward": 69, "grad_output": 69, "von": 69, "mise": 69, "fisher": 69, "log_cmk_exact": 69, "c_": 69, "exactli": [69, 84], "log_cmk_approx": 69, "approx": 69, "minu": 69, "sign": 69, "log_cmk": 69, "kappa_switch": 69, "sinc": 69, "diverg": 69, "700": 69, "float64": 69, "precis": 69, "unaccur": 69, "switch": 69, "three": 69, "database_indic": 70, "test_siz": 70, "tag": [70, 87, 89], "archiv": 70, "public": 71, "uniformweightfitt": 71, "bin": 71, "privat": 71, "_fit_weight": 71, "sql": 71, "desir": [71, 82], "space": 71, "np": 71, "happen": 71, "x_low": 71, "wherea": 71, "curv": 71, "base_config": [72, 74], "dataset_config": [72, 74], "model_config": [72, 74], "training_config": [72, 74], "argumentpars": [72, 73], "is_gcd_fil": [72, 82], "is_i3_fil": [72, 82], "has_extens": [72, 82], "find_i3_fil": [72, 82], "has_icecube_packag": [72, 83], "has_torch_packag": [72, 83], "has_pisa_packag": [72, 83], "requires_icecub": [72, 83], "set_logging_level": [72, 84], "get_formatt": [72, 84], "warn_onc": [72, 84], "repeatfilt": [72, 84], "get_logg": [72, 84, 89], "eps_lik": [72, 85], "consist": [73, 84, 87], "cli": 73, "pop_default": 73, "usag": 73, "descript": 73, "command": [73, 89], "standard_argu": 73, "home": [73, 89], "runner": 73, "lib": [73, 89], "python3": 73, "training_example_data_sqlit": 73, "earli": 73, "patienc": 73, "narg": 73, "50": 73, "example_energy_reconstruction_model": 73, "num": 73, "fetch": 73, "with_standard_argu": 73, "baseconfig": [74, 75, 76, 77, 78, 80], "get_all_argument_valu": [74, 75], "save_dataset_config": [74, 77], "save_model_config": [74, 78], "traverse_and_appli": [74, 79], "list_all_submodul": [74, 79], "get_all_grapnet_class": [74, 79], "is_graphnet_modul": [74, 79], "is_graphnet_class": [74, 79], "get_graphnet_class": [74, 79], "trainingconfig": [74, 80], "basemodel": [75, 78], "keyword": [75, 80], "validationerror": [75, 80], "dump": [75, 77, 78], "yaml": [75, 76], "as_dict": [75, 78], "overwritten": 75, "re": [76, 89], "save_config": 76, "dataconfig": 77, "transpar": [77, 78, 87], "reproduc": [77, 78], "In": [77, 78, 89], "session": [77, 78], "anoth": [77, 78], "you": [77, 78, 87, 89], "still": 77, "csv": 77, "train_select": 77, "test_select": 77, "init_fn": [77, 78], "__init__": [77, 78], "class_nam": 78, "trainabl": 78, "hyperparamet": 78, "instanti": 78, "thu": 78, "unambigu": 78, "fn_kwarg": 79, "structur": 79, "moduletyp": 79, "grapnet": 79, "lookup": 79, "early_stopping_pati": 80, "system": [82, 89], "filenam": 82, "dir": 82, "search": 82, "test_funct": 83, "colour": 84, "formatt": 84, "coloredformatt": 84, "warn": 84, "onc": 84, "filter": 84, "repeat": 84, "record": 84, "nb_repeats_allow": 84, "logrecord": 84, "log_fold": 84, "place": [84, 87], "termin": 84, "debug": 84, "loggeradapt": 84, "msg": 84, "deleg": 84, "info": [84, 89], "assort": 85, "ep": 85, "api": 86, "To": [87, 89], "sure": [87, 89], "smooth": 87, "guidelin": 87, "guid": 87, "encourag": 87, "contributor": 87, "discuss": 87, "bug": 87, "anyth": 87, "describ": 87, "yourself": 87, "ownership": 87, "prioriti": 87, "situat": 87, "lot": 87, "effort": 87, "go": 87, "turn": 87, "outsid": 87, "scope": 87, "project": 87, "solut": 87, "better": 87, "fork": 87, "repo": 87, "dedic": 87, "branch": [87, 89], "your": [87, 89], "repositori": 87, "graphbuil": 87, "builder": 87, "own": [87, 89], "team": 87, "accept": 87, "autom": 87, "review": 87, "pep8": 87, "docstr": 87, "googl": 87, "hint": 87, "adher": 87, "pep": 87, "pylint": 87, "flake8": 87, "black": 87, "well": 87, "recommend": [87, 89], "mypi": 87, "pydocstyl": 87, "docformatt": 87, "commit": 87, "hook": 87, "instal": 87, "come": 87, "pip": [87, 89], "Then": 87, "everytim": 87, "pep257": 87, "concept": 87, "ljvmiranda921": 87, "io": 87, "notebook": 87, "2018": 87, "06": 87, "21": 87, "precommit": 87, "environ": 89, "virtual": 89, "anaconda": 89, "prove": 89, "instruct": 89, "setup": 89, "want": 89, "part": 89, "achiev": 89, "bash": 89, "shell": 89, "cvmf": 89, "opensciencegrid": 89, "py3": 89, "v4": 89, "sh": 89, "rhel_7_x86_64": 89, "metaproject": 89, "combo": 89, "env": 89, "alia": 89, "script": 89, "With": 89, "now": 89, "light": 89, "extra": 89, "geometr": 89, "won": 89, "later": 89, "torch_cpu": 89, "txt": 89, "cpu": 89, "torch_gpu": 89, "prefer": 89, "unix": 89, "git": 89, "clone": 89, "usernam": 89, "cd": 89, "conda": 89, "gcc_linux": 89, "64": 89, "gxx_linux": 89, "libgcc": 89, "cudatoolkit": 89, "11": 89, "forg": 89, "torch_maco": 89, "On": 89, "maco": 89, "box": 89, "compil": 89, "gcc": 89, "date": 89, "possibli": 89, "cuda": 89, "toolkit": 89, "recent": 89, "omit": 89, "newer": 89, "export": 89, "ld_library_path": 89, "anaconda3": 89, "miniconda3": 89, "bashrc": 89, "librari": 89, "access": 89, "rm": 89, "asogaard": 89, "latest": 89, "dc423315742c": 89, "01_icetrai": 89, "01_convert_i3_fil": 89, "2023": 89, "01": 89, "24": 89, "41": 89, "27": 89, "graphnet_20230124": 89, "134127": 89, "46": 89, "convert_i3_fil": 89, "ic86": 89, "thread": 89, "00": 89, "79": 89, "26": 89, "413": 89, "88it": 89, "specialis": 89, "ones": 89, "push": 89, "vx": 89}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [37, 0, 0, "-", "deployment"], [41, 0, 0, "-", "models"], [63, 0, 0, "-", "pisa"], [66, 0, 0, "-", "training"], [72, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "dataconverter"], [6, 0, 0, "-", "dataloader"], [7, 0, 0, "-", "dataset"], [8, 0, 0, "-", "extractors"], [23, 0, 0, "-", "parquet"], [26, 0, 0, "-", "pipeline"], [27, 0, 0, "-", "sqlite"], [33, 0, 0, "-", "utilities"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.dataconverter": [[5, 1, 1, "", "DataConverter"], [5, 1, 1, "", "FileSet"], [5, 5, 1, "", "cache_output_files"], [5, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[5, 3, 1, "", "execute"], [5, 4, 1, "", "file_suffix"], [5, 3, 1, "", "get_map_function"], [5, 3, 1, "", "merge_files"], [5, 3, 1, "", "save_data"]], "graphnet.data.dataconverter.FileSet": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_file"]], "graphnet.data.dataloader": [[6, 1, 1, "", "DataLoader"], [6, 5, 1, "", "collate_fn"], [6, 5, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[6, 3, 1, "", "from_dataset_config"]], "graphnet.data.dataset": [[7, 6, 1, "", "ColumnMissingException"], [7, 1, 1, "", "Dataset"], [7, 1, 1, "", "EnsembleDataset"]], "graphnet.data.dataset.Dataset": [[7, 3, 1, "", "add_label"], [7, 3, 1, "", "concatenate"], [7, 3, 1, "", "from_config"], [7, 4, 1, "", "path"], [7, 3, 1, "", "query_table"], [7, 4, 1, "", "truth_table"]], "graphnet.data.extractors": [[9, 0, 0, "-", "i3extractor"], [10, 0, 0, "-", "i3featureextractor"], [11, 0, 0, "-", "i3genericextractor"], [12, 0, 0, "-", "i3hybridrecoextractor"], [13, 0, 0, "-", "i3particleextractor"], [14, 0, 0, "-", "i3pisaextractor"], [15, 0, 0, "-", "i3retroextractor"], [16, 0, 0, "-", "i3splinempeextractor"], [17, 0, 0, "-", "i3truthextractor"], [18, 0, 0, "-", "i3tumextractor"], [19, 0, 0, "-", "utilities"]], "graphnet.data.extractors.i3extractor": [[9, 1, 1, "", "I3Extractor"], [9, 1, 1, "", "I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor.I3Extractor": [[9, 4, 1, "", "name"], [9, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3extractor.I3ExtractorCollection": [[9, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3featureextractor": [[10, 1, 1, "", "I3FeatureExtractor"], [10, 1, 1, "", "I3FeatureExtractorIceCube86"], [10, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [10, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [10, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3genericextractor": [[11, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[12, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3particleextractor": [[13, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.i3pisaextractor": [[14, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.i3retroextractor": [[15, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.i3splinempeextractor": [[16, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3truthextractor": [[17, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.i3tumextractor": [[18, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.utilities": [[20, 0, 0, "-", "collections"], [21, 0, 0, "-", "frames"], [22, 0, 0, "-", "types"]], "graphnet.data.extractors.utilities.collections": [[20, 5, 1, "", "flatten_nested_dictionary"], [20, 5, 1, "", "serialise"], [20, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.utilities.frames": [[21, 5, 1, "", "frame_is_montecarlo"], [21, 5, 1, "", "frame_is_noise"], [21, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.types": [[22, 5, 1, "", "break_cyclic_recursion"], [22, 5, 1, "", "cast_object_to_pure_python"], [22, 5, 1, "", "cast_pulse_series_to_pure_python"], [22, 5, 1, "", "get_member_variables"], [22, 5, 1, "", "is_boost_class"], [22, 5, 1, "", "is_boost_enum"], [22, 5, 1, "", "is_icecube_class"], [22, 5, 1, "", "is_method"], [22, 5, 1, "", "is_type"]], "graphnet.data.parquet": [[24, 0, 0, "-", "parquet_dataconverter"], [25, 0, 0, "-", "parquet_dataset"]], "graphnet.data.parquet.parquet_dataconverter": [[24, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter": [[24, 2, 1, "", "file_suffix"], [24, 3, 1, "", "merge_files"], [24, 3, 1, "", "save_data"]], "graphnet.data.parquet.parquet_dataset": [[25, 1, 1, "", "ParquetDataset"]], "graphnet.data.parquet.parquet_dataset.ParquetDataset": [[25, 3, 1, "", "query_table"]], "graphnet.data.pipeline": [[26, 1, 1, "", "InSQLitePipeline"]], "graphnet.data.sqlite": [[28, 0, 0, "-", "sqlite_dataconverter"], [29, 0, 0, "-", "sqlite_dataset"], [30, 0, 0, "-", "sqlite_dataset_perturbed"], [31, 0, 0, "-", "sqlite_selection"], [32, 0, 0, "-", "sqlite_utilities"]], "graphnet.data.sqlite.sqlite_dataconverter": [[28, 1, 1, "", "SQLiteDataConverter"], [28, 5, 1, "", "construct_dataframe"], [28, 5, 1, "", "is_mc_tree"], [28, 5, 1, "", "is_pulse_map"]], "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter": [[28, 3, 1, "", "any_pulsemap_is_non_empty"], [28, 2, 1, "", "file_suffix"], [28, 3, 1, "", "merge_files"], [28, 3, 1, "", "save_data"]], "graphnet.data.sqlite.sqlite_dataset": [[29, 1, 1, "", "SQLiteDataset"]], "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset": [[29, 3, 1, "", "query_table"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[30, 1, 1, "", "SQLiteDatasetPerturbed"]], "graphnet.data.sqlite.sqlite_selection": [[31, 5, 1, "", "get_desired_event_numbers"], [31, 5, 1, "", "get_equal_proportion_neutrino_indices"], [31, 5, 1, "", "get_even_dbang_selection"], [31, 5, 1, "", "get_even_signal_background_indicies"], [31, 5, 1, "", "get_even_track_cascade_indicies"]], "graphnet.data.sqlite.sqlite_utilities": [[32, 5, 1, "", "attach_index"], [32, 5, 1, "", "create_table"], [32, 5, 1, "", "create_table_and_save_to_sql"], [32, 5, 1, "", "database_exists"], [32, 5, 1, "", "database_table_exists"], [32, 5, 1, "", "run_sql_code"], [32, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities": [[34, 0, 0, "-", "parquet_to_sqlite"], [35, 0, 0, "-", "random"], [36, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.parquet_to_sqlite": [[34, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter": [[34, 3, 1, "", "run"]], "graphnet.data.utilities.random": [[35, 5, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.string_selection_resolver": [[36, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[36, 3, 1, "", "resolve"]], "graphnet.deployment.i3modules": [[40, 0, 0, "-", "graphnet_module"]], "graphnet.deployment.i3modules.graphnet_module": [[40, 1, 1, "", "GraphNeTI3Module"], [40, 1, 1, "", "I3InferenceModule"], [40, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.models": [[42, 0, 0, "-", "coarsening"], [43, 0, 0, "-", "components"], [46, 0, 0, "-", "detector"], [50, 0, 0, "-", "gnn"], [55, 0, 0, "-", "graph_builders"], [56, 0, 0, "-", "model"], [57, 0, 0, "-", "standard_model"], [58, 0, 0, "-", "task"], [62, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[42, 1, 1, "", "AttributeCoarsening"], [42, 1, 1, "", "Coarsening"], [42, 1, 1, "", "CustomDOMCoarsening"], [42, 1, 1, "", "DOMAndTimeWindowCoarsening"], [42, 1, 1, "", "DOMCoarsening"], [42, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[42, 3, 1, "", "forward"], [42, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[44, 0, 0, "-", "layers"], [45, 0, 0, "-", "pool"]], "graphnet.models.components.layers": [[44, 1, 1, "", "DynEdgeConv"]], "graphnet.models.components.layers.DynEdgeConv": [[44, 3, 1, "", "forward"]], "graphnet.models.components.pool": [[45, 5, 1, "", "group_by"], [45, 5, 1, "", "group_pulses_to_dom"], [45, 5, 1, "", "group_pulses_to_pmt"], [45, 5, 1, "", "min_pool"], [45, 5, 1, "", "min_pool_x"], [45, 5, 1, "", "std_pool"], [45, 5, 1, "", "std_pool_x"], [45, 5, 1, "", "sum_pool"], [45, 5, 1, "", "sum_pool_and_distribute"], [45, 5, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[47, 0, 0, "-", "detector"], [48, 0, 0, "-", "icecube"], [49, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[47, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[47, 4, 1, "", "features"], [47, 3, 1, "", "forward"], [47, 4, 1, "", "nb_inputs"], [47, 4, 1, "", "nb_outputs"]], "graphnet.models.detector.icecube": [[48, 1, 1, "", "IceCube86"], [48, 1, 1, "", "IceCubeDeepCore"], [48, 1, 1, "", "IceCubeKaggle"], [48, 1, 1, "", "IceCubeUpgrade"], [48, 1, 1, "", "IceCubeUpgrade_V2"]], "graphnet.models.detector.icecube.IceCube86": [[48, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[48, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[48, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[48, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeUpgrade_V2": [[48, 2, 1, "", "features"], [48, 4, 1, "", "nb_outputs"]], "graphnet.models.detector.prometheus": [[49, 1, 1, "", "Prometheus"]], "graphnet.models.detector.prometheus.Prometheus": [[49, 2, 1, "", "features"]], "graphnet.models.gnn": [[51, 0, 0, "-", "convnet"], [52, 0, 0, "-", "dynedge"], [53, 0, 0, "-", "dynedge_jinst"], [54, 0, 0, "-", "gnn"]], "graphnet.models.gnn.convnet": [[51, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[51, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[52, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[52, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[53, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[53, 3, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[54, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[54, 3, 1, "", "forward"], [54, 4, 1, "", "nb_inputs"], [54, 4, 1, "", "nb_outputs"]], "graphnet.models.graph_builders": [[55, 1, 1, "", "EuclideanGraphBuilder"], [55, 1, 1, "", "GraphBuilder"], [55, 1, 1, "", "KNNGraphBuilder"], [55, 1, 1, "", "RadialGraphBuilder"]], "graphnet.models.graph_builders.EuclideanGraphBuilder": [[55, 3, 1, "", "forward"]], "graphnet.models.graph_builders.KNNGraphBuilder": [[55, 3, 1, "", "forward"]], "graphnet.models.graph_builders.RadialGraphBuilder": [[55, 3, 1, "", "forward"]], "graphnet.models.model": [[56, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[56, 3, 1, "", "fit"], [56, 3, 1, "", "forward"], [56, 3, 1, "", "from_config"], [56, 3, 1, "", "load"], [56, 3, 1, "", "load_state_dict"], [56, 3, 1, "", "predict"], [56, 3, 1, "", "predict_as_dataframe"], [56, 3, 1, "", "save"], [56, 3, 1, "", "save_state_dict"]], "graphnet.models.standard_model": [[57, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[57, 3, 1, "", "compute_loss"], [57, 3, 1, "", "configure_optimizers"], [57, 3, 1, "", "forward"], [57, 3, 1, "", "inference"], [57, 3, 1, "", "predict"], [57, 3, 1, "", "shared_step"], [57, 3, 1, "", "train"], [57, 3, 1, "", "training_step"], [57, 3, 1, "", "validation_step"]], "graphnet.models.task": [[59, 0, 0, "-", "classification"], [60, 0, 0, "-", "reconstruction"], [61, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[59, 1, 1, "", "BinaryClassificationTask"], [59, 1, 1, "", "BinaryClassificationTaskLogits"], [59, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[59, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[59, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[60, 1, 1, "", "AzimuthReconstruction"], [60, 1, 1, "", "AzimuthReconstructionWithKappa"], [60, 1, 1, "", "DirectionReconstructionWithKappa"], [60, 1, 1, "", "EnergyReconstruction"], [60, 1, 1, "", "EnergyReconstructionWithPower"], [60, 1, 1, "", "EnergyReconstructionWithUncertainty"], [60, 1, 1, "", "InelasticityReconstruction"], [60, 1, 1, "", "PositionReconstruction"], [60, 1, 1, "", "TimeReconstruction"], [60, 1, 1, "", "VertexReconstruction"], [60, 1, 1, "", "ZenithReconstruction"], [60, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[60, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[60, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[60, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[60, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[60, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[60, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[60, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[60, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[60, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[60, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[60, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[60, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[61, 1, 1, "", "IdentityTask"], [61, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[61, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[61, 3, 1, "", "compute_loss"], [61, 3, 1, "", "forward"], [61, 3, 1, "", "inference"], [61, 4, 1, "", "nb_inputs"], [61, 3, 1, "", "train_eval"]], "graphnet.models.utils": [[62, 5, 1, "", "calculate_distance_matrix"], [62, 5, 1, "", "calculate_xyzt_homophily"], [62, 5, 1, "", "knn_graph_batch"]], "graphnet.pisa": [[64, 0, 0, "-", "fitting"], [65, 0, 0, "-", "plotting"]], "graphnet.pisa.fitting": [[64, 1, 1, "", "ContourFitter"], [64, 1, 1, "", "WeightFitter"], [64, 5, 1, "", "config_updater"]], "graphnet.pisa.fitting.ContourFitter": [[64, 3, 1, "", "fit_1d_contour"], [64, 3, 1, "", "fit_2d_contour"]], "graphnet.pisa.fitting.WeightFitter": [[64, 3, 1, "", "fit_weights"]], "graphnet.pisa.plotting": [[65, 5, 1, "", "plot_1D_contour"], [65, 5, 1, "", "plot_2D_contour"], [65, 5, 1, "", "read_entry"]], "graphnet.training": [[67, 0, 0, "-", "callbacks"], [68, 0, 0, "-", "labels"], [69, 0, 0, "-", "loss_functions"], [70, 0, 0, "-", "utils"], [71, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[67, 1, 1, "", "PiecewiseLinearLR"], [67, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[67, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[67, 3, 1, "", "get_metrics"], [67, 3, 1, "", "init_predict_tqdm"], [67, 3, 1, "", "init_test_tqdm"], [67, 3, 1, "", "init_train_tqdm"], [67, 3, 1, "", "init_validation_tqdm"], [67, 3, 1, "", "on_train_epoch_end"], [67, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[68, 1, 1, "", "Direction"], [68, 1, 1, "", "Label"]], "graphnet.training.loss_functions": [[69, 1, 1, "", "BinaryCrossEntropyLoss"], [69, 1, 1, "", "CrossEntropyLoss"], [69, 1, 1, "", "EuclideanDistanceLoss"], [69, 1, 1, "", "LogCMK"], [69, 1, 1, "", "LogCoshLoss"], [69, 1, 1, "", "LossFunction"], [69, 1, 1, "", "MSELoss"], [69, 1, 1, "", "RMSELoss"], [69, 1, 1, "", "VonMisesFisher2DLoss"], [69, 1, 1, "", "VonMisesFisher3DLoss"], [69, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[69, 3, 1, "", "backward"], [69, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[69, 3, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[69, 3, 1, "", "log_cmk"], [69, 3, 1, "", "log_cmk_approx"], [69, 3, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[70, 5, 1, "", "collate_fn"], [70, 5, 1, "", "get_predictions"], [70, 5, 1, "", "make_dataloader"], [70, 5, 1, "", "make_train_validation_dataloader"], [70, 5, 1, "", "save_results"]], "graphnet.training.weight_fitting": [[71, 1, 1, "", "BjoernLow"], [71, 1, 1, "", "Uniform"], [71, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[71, 3, 1, "", "fit"]], "graphnet.utilities": [[73, 0, 0, "-", "argparse"], [74, 0, 0, "-", "config"], [81, 0, 0, "-", "decorators"], [82, 0, 0, "-", "filesys"], [83, 0, 0, "-", "imports"], [84, 0, 0, "-", "logging"], [85, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[73, 1, 1, "", "ArgumentParser"], [73, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[73, 2, 1, "", "standard_arguments"], [73, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[73, 3, 1, "", "contains"], [73, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[75, 0, 0, "-", "base_config"], [76, 0, 0, "-", "configurable"], [77, 0, 0, "-", "dataset_config"], [78, 0, 0, "-", "model_config"], [79, 0, 0, "-", "parsing"], [80, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[75, 1, 1, "", "BaseConfig"], [75, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[75, 3, 1, "", "as_dict"], [75, 3, 1, "", "dump"], [75, 3, 1, "", "load"]], "graphnet.utilities.config.configurable": [[76, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[76, 4, 1, "", "config"], [76, 3, 1, "", "from_config"], [76, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[77, 1, 1, "", "DatasetConfig"], [77, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[77, 2, 1, "", "features"], [77, 2, 1, "", "index_column"], [77, 2, 1, "", "loss_weight_column"], [77, 2, 1, "", "loss_weight_default_value"], [77, 2, 1, "", "loss_weight_table"], [77, 2, 1, "", "node_truth"], [77, 2, 1, "", "node_truth_table"], [77, 2, 1, "", "path"], [77, 2, 1, "", "pulsemaps"], [77, 2, 1, "", "seed"], [77, 2, 1, "", "selection"], [77, 2, 1, "", "string_selection"], [77, 2, 1, "", "truth"], [77, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[78, 1, 1, "", "ModelConfig"], [78, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[78, 2, 1, "", "arguments"], [78, 3, 1, "", "as_dict"], [78, 2, 1, "", "class_name"]], "graphnet.utilities.config.parsing": [[79, 5, 1, "", "get_all_grapnet_classes"], [79, 5, 1, "", "get_graphnet_classes"], [79, 5, 1, "", "is_graphnet_class"], [79, 5, 1, "", "is_graphnet_module"], [79, 5, 1, "", "list_all_submodules"], [79, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[80, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[80, 2, 1, "", "dataloader"], [80, 2, 1, "", "early_stopping_patience"], [80, 2, 1, "", "fit"], [80, 2, 1, "", "target"]], "graphnet.utilities.filesys": [[82, 5, 1, "", "find_i3_files"], [82, 5, 1, "", "has_extension"], [82, 5, 1, "", "is_gcd_file"], [82, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[83, 5, 1, "", "has_icecube_package"], [83, 5, 1, "", "has_pisa_package"], [83, 5, 1, "", "has_torch_package"], [83, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[84, 1, 1, "", "LoggerMixin"], [84, 1, 1, "", "RepeatFilter"], [84, 5, 1, "", "get_formatters"], [84, 5, 1, "", "get_logger"], [84, 5, 1, "", "set_logging_level"], [84, 5, 1, "", "warn_once"]], "graphnet.utilities.logging.LoggerMixin": [[84, 3, 1, "", "critical"], [84, 3, 1, "", "debug"], [84, 3, 1, "", "error"], [84, 3, 1, "", "info"], [84, 3, 1, "", "warning"]], "graphnet.utilities.logging.RepeatFilter": [[84, 3, 1, "", "filter"]], "graphnet.utilities.maths": [[85, 5, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": [0, 88], "impact": [0, 88], "usag": [0, 88], "acknowledg": [0, 88], "api": 1, "constant": [2, 4], "data": 3, "dataconvert": 5, "dataload": 6, "dataset": 7, "extractor": 8, "i3extractor": 9, "i3featureextractor": 10, "i3genericextractor": 11, "i3hybridrecoextractor": 12, "i3particleextractor": 13, "i3pisaextractor": 14, "i3retroextractor": 15, "i3splinempeextractor": 16, "i3truthextractor": 17, "i3tumextractor": 18, "util": [19, 33, 62, 70, 72], "collect": 20, "frame": 21, "type": 22, "parquet": 23, "parquet_dataconvert": 24, "parquet_dataset": 25, "pipelin": 26, "sqlite": 27, "sqlite_dataconvert": 28, "sqlite_dataset": 29, "sqlite_dataset_perturb": 30, "sqlite_select": 31, "sqlite_util": 32, "parquet_to_sqlit": 34, "random": 35, "string_selection_resolv": 36, "deploy": [37, 39], "i3modul": 38, "graphnet_modul": 40, "model": [41, 56], "coarsen": 42, "compon": 43, "layer": 44, "pool": 45, "detector": [46, 47], "icecub": 48, "prometheu": 49, "gnn": [50, 54], "convnet": 51, "dynedg": 52, "dynedge_jinst": 53, "graph_build": 55, "standard_model": 57, "task": [58, 61], "classif": 59, "reconstruct": 60, "pisa": 63, "fit": 64, "plot": 65, "train": 66, "callback": 67, "label": 68, "loss_funct": 69, "weight_fit": 71, "argpars": 73, "config": 74, "base_config": 75, "configur": 76, "dataset_config": 77, "model_config": 78, "pars": 79, "training_config": 80, "decor": 81, "filesi": 82, "import": 83, "log": 84, "math": 85, "src": 86, "contribut": 87, "github": 87, "issu": 87, "pull": 87, "request": 87, "convent": 87, "code": 87, "qualiti": 87, "instal": 89, "icetrai": 89, "stand": 89, "alon": 89, "run": 89, "docker": 89}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"About": [[0, "about"], [88, "about"]], "Impact": [[0, "impact"], [88, "impact"]], "Usage": [[0, "usage"], [88, "usage"]], "Acknowledgements": [[0, "acknowledgements"], [88, "acknowledgements"]], "API": [[1, "module-graphnet"]], "constants": [[2, "module-graphnet.constants"], [4, "module-graphnet.data.constants"]], "data": [[3, "module-graphnet.data"]], "dataconverter": [[5, "module-graphnet.data.dataconverter"]], "dataloader": [[6, "module-graphnet.data.dataloader"]], "dataset": [[7, "module-graphnet.data.dataset"]], "extractors": [[8, "module-graphnet.data.extractors"]], "i3extractor": [[9, "module-graphnet.data.extractors.i3extractor"]], "i3featureextractor": [[10, "module-graphnet.data.extractors.i3featureextractor"]], "i3genericextractor": [[11, "module-graphnet.data.extractors.i3genericextractor"]], "i3hybridrecoextractor": [[12, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "i3particleextractor": [[13, "module-graphnet.data.extractors.i3particleextractor"]], "i3pisaextractor": [[14, "module-graphnet.data.extractors.i3pisaextractor"]], "i3retroextractor": [[15, "module-graphnet.data.extractors.i3retroextractor"]], "i3splinempeextractor": [[16, "module-graphnet.data.extractors.i3splinempeextractor"]], "i3truthextractor": [[17, "module-graphnet.data.extractors.i3truthextractor"]], "i3tumextractor": [[18, "module-graphnet.data.extractors.i3tumextractor"]], "utilities": [[19, "module-graphnet.data.extractors.utilities"], [33, "module-graphnet.data.utilities"], [72, "module-graphnet.utilities"]], "collections": [[20, "module-graphnet.data.extractors.utilities.collections"]], "frames": [[21, "module-graphnet.data.extractors.utilities.frames"]], "types": [[22, "module-graphnet.data.extractors.utilities.types"]], "parquet": [[23, "module-graphnet.data.parquet"]], "parquet_dataconverter": [[24, "module-graphnet.data.parquet.parquet_dataconverter"]], "parquet_dataset": [[25, "module-graphnet.data.parquet.parquet_dataset"]], "pipeline": [[26, "module-graphnet.data.pipeline"]], "sqlite": [[27, "module-graphnet.data.sqlite"]], "sqlite_dataconverter": [[28, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "sqlite_dataset": [[29, "module-graphnet.data.sqlite.sqlite_dataset"]], "sqlite_dataset_perturbed": [[30, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "sqlite_selection": [[31, "module-graphnet.data.sqlite.sqlite_selection"]], "sqlite_utilities": [[32, "module-graphnet.data.sqlite.sqlite_utilities"]], "parquet_to_sqlite": [[34, "module-graphnet.data.utilities.parquet_to_sqlite"]], "random": [[35, "module-graphnet.data.utilities.random"]], "string_selection_resolver": [[36, "module-graphnet.data.utilities.string_selection_resolver"]], "deployment": [[37, "module-graphnet.deployment"]], "i3modules": [[38, "i3modules"]], "deployer": [[39, "deployer"]], "graphnet_module": [[40, "module-graphnet.deployment.i3modules.graphnet_module"]], "models": [[41, "module-graphnet.models"]], "coarsening": [[42, "module-graphnet.models.coarsening"]], "components": [[43, "module-graphnet.models.components"]], "layers": [[44, "module-graphnet.models.components.layers"]], "pool": [[45, "module-graphnet.models.components.pool"]], "detector": [[46, "module-graphnet.models.detector"], [47, "module-graphnet.models.detector.detector"]], "icecube": [[48, "module-graphnet.models.detector.icecube"]], "prometheus": [[49, "module-graphnet.models.detector.prometheus"]], "gnn": [[50, "module-graphnet.models.gnn"], [54, "module-graphnet.models.gnn.gnn"]], "convnet": [[51, "module-graphnet.models.gnn.convnet"]], "dynedge": [[52, "module-graphnet.models.gnn.dynedge"]], "dynedge_jinst": [[53, "module-graphnet.models.gnn.dynedge_jinst"]], "graph_builders": [[55, "module-graphnet.models.graph_builders"]], "model": [[56, "module-graphnet.models.model"]], "standard_model": [[57, "module-graphnet.models.standard_model"]], "task": [[58, "module-graphnet.models.task"], [61, "module-graphnet.models.task.task"]], "classification": [[59, "module-graphnet.models.task.classification"]], "reconstruction": [[60, "module-graphnet.models.task.reconstruction"]], "utils": [[62, "module-graphnet.models.utils"], [70, "module-graphnet.training.utils"]], "pisa": [[63, "module-graphnet.pisa"]], "fitting": [[64, "module-graphnet.pisa.fitting"]], "plotting": [[65, "module-graphnet.pisa.plotting"]], "training": [[66, "module-graphnet.training"]], "callbacks": [[67, "module-graphnet.training.callbacks"]], "labels": [[68, "module-graphnet.training.labels"]], "loss_functions": [[69, "module-graphnet.training.loss_functions"]], "weight_fitting": [[71, "module-graphnet.training.weight_fitting"]], "argparse": [[73, "module-graphnet.utilities.argparse"]], "config": [[74, "module-graphnet.utilities.config"]], "base_config": [[75, "module-graphnet.utilities.config.base_config"]], "configurable": [[76, "module-graphnet.utilities.config.configurable"]], "dataset_config": [[77, "module-graphnet.utilities.config.dataset_config"]], "model_config": [[78, "module-graphnet.utilities.config.model_config"]], "parsing": [[79, "module-graphnet.utilities.config.parsing"]], "training_config": [[80, "module-graphnet.utilities.config.training_config"]], "decorators": [[81, "module-graphnet.utilities.decorators"]], "filesys": [[82, "module-graphnet.utilities.filesys"]], "imports": [[83, "module-graphnet.utilities.imports"]], "logging": [[84, "module-graphnet.utilities.logging"]], "maths": [[85, "module-graphnet.utilities.maths"]], "src": [[86, "src"]], "Contribute": [[87, "contribute"]], "GitHub issues": [[87, "github-issues"]], "Pull requests": [[87, "pull-requests"]], "Conventions": [[87, "conventions"]], "Code quality": [[87, "code-quality"]], "Install": [[89, "install"]], "Installing with IceTray": [[89, "installing-with-icetray"]], "Installing stand-alone": [[89, "installing-stand-alone"]], "Running in Docker": [[89, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"]], "module": [[1, "module-graphnet"], [2, "module-graphnet.constants"], [3, "module-graphnet.data"], [4, "module-graphnet.data.constants"], [5, "module-graphnet.data.dataconverter"], [6, "module-graphnet.data.dataloader"], [7, "module-graphnet.data.dataset"], [8, "module-graphnet.data.extractors"], [9, "module-graphnet.data.extractors.i3extractor"], [10, "module-graphnet.data.extractors.i3featureextractor"], [11, "module-graphnet.data.extractors.i3genericextractor"], [12, "module-graphnet.data.extractors.i3hybridrecoextractor"], [13, "module-graphnet.data.extractors.i3particleextractor"], [14, "module-graphnet.data.extractors.i3pisaextractor"], [15, "module-graphnet.data.extractors.i3retroextractor"], [16, "module-graphnet.data.extractors.i3splinempeextractor"], [17, "module-graphnet.data.extractors.i3truthextractor"], [18, "module-graphnet.data.extractors.i3tumextractor"], [19, "module-graphnet.data.extractors.utilities"], [20, "module-graphnet.data.extractors.utilities.collections"], [21, "module-graphnet.data.extractors.utilities.frames"], [22, "module-graphnet.data.extractors.utilities.types"], [23, "module-graphnet.data.parquet"], [24, "module-graphnet.data.parquet.parquet_dataconverter"], [25, "module-graphnet.data.parquet.parquet_dataset"], [26, "module-graphnet.data.pipeline"], [27, "module-graphnet.data.sqlite"], [28, "module-graphnet.data.sqlite.sqlite_dataconverter"], [29, "module-graphnet.data.sqlite.sqlite_dataset"], [30, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"], [31, "module-graphnet.data.sqlite.sqlite_selection"], [32, "module-graphnet.data.sqlite.sqlite_utilities"], [33, "module-graphnet.data.utilities"], [34, "module-graphnet.data.utilities.parquet_to_sqlite"], [35, "module-graphnet.data.utilities.random"], [36, "module-graphnet.data.utilities.string_selection_resolver"], [37, "module-graphnet.deployment"], [40, "module-graphnet.deployment.i3modules.graphnet_module"], [41, "module-graphnet.models"], [42, "module-graphnet.models.coarsening"], [43, "module-graphnet.models.components"], [44, "module-graphnet.models.components.layers"], [45, "module-graphnet.models.components.pool"], [46, "module-graphnet.models.detector"], [47, "module-graphnet.models.detector.detector"], [48, "module-graphnet.models.detector.icecube"], [49, "module-graphnet.models.detector.prometheus"], [50, "module-graphnet.models.gnn"], [51, "module-graphnet.models.gnn.convnet"], [52, "module-graphnet.models.gnn.dynedge"], [53, "module-graphnet.models.gnn.dynedge_jinst"], [54, "module-graphnet.models.gnn.gnn"], [55, "module-graphnet.models.graph_builders"], [56, "module-graphnet.models.model"], [57, "module-graphnet.models.standard_model"], [58, "module-graphnet.models.task"], [59, "module-graphnet.models.task.classification"], [60, "module-graphnet.models.task.reconstruction"], [61, "module-graphnet.models.task.task"], [62, "module-graphnet.models.utils"], [63, "module-graphnet.pisa"], [64, "module-graphnet.pisa.fitting"], [65, "module-graphnet.pisa.plotting"], [66, "module-graphnet.training"], [67, "module-graphnet.training.callbacks"], [68, "module-graphnet.training.labels"], [69, "module-graphnet.training.loss_functions"], [70, "module-graphnet.training.utils"], [71, "module-graphnet.training.weight_fitting"], [72, "module-graphnet.utilities"], [73, "module-graphnet.utilities.argparse"], [74, "module-graphnet.utilities.config"], [75, "module-graphnet.utilities.config.base_config"], [76, "module-graphnet.utilities.config.configurable"], [77, "module-graphnet.utilities.config.dataset_config"], [78, "module-graphnet.utilities.config.model_config"], [79, "module-graphnet.utilities.config.parsing"], [80, "module-graphnet.utilities.config.training_config"], [81, "module-graphnet.utilities.decorators"], [82, "module-graphnet.utilities.filesys"], [83, "module-graphnet.utilities.imports"], [84, "module-graphnet.utilities.logging"], [85, "module-graphnet.utilities.maths"]], "graphnet.constants": [[2, "module-graphnet.constants"]], "graphnet.data": [[3, "module-graphnet.data"]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE"]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES"]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86"]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE"]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE"]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS"]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS"]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE"]], "graphnet.data.constants": [[4, "module-graphnet.data.constants"]], "dataconverter (class in graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.DataConverter"]], "fileset (class in graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.FileSet"]], "cache_output_files() (in module graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.cache_output_files"]], "execute() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.execute"]], "file_suffix (graphnet.data.dataconverter.dataconverter property)": [[5, "graphnet.data.dataconverter.DataConverter.file_suffix"]], "gcd_file (graphnet.data.dataconverter.fileset attribute)": [[5, "graphnet.data.dataconverter.FileSet.gcd_file"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data.dataconverter": [[5, "module-graphnet.data.dataconverter"]], "i3_file (graphnet.data.dataconverter.fileset attribute)": [[5, "graphnet.data.dataconverter.FileSet.i3_file"]], "init_global_index() (in module graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.merge_files"]], "save_data() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.save_data"]], "dataloader (class in graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.DataLoader"]], "collate_fn() (in module graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.collate_fn"]], "do_shuffle() (in module graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.do_shuffle"]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[6, "graphnet.data.dataloader.DataLoader.from_dataset_config"]], "graphnet.data.dataloader": [[6, "module-graphnet.data.dataloader"]], "columnmissingexception": [[7, "graphnet.data.dataset.ColumnMissingException"]], "dataset (class in graphnet.data.dataset)": [[7, "graphnet.data.dataset.Dataset"]], "ensembledataset (class in graphnet.data.dataset)": [[7, "graphnet.data.dataset.EnsembleDataset"]], "add_label() (graphnet.data.dataset.dataset method)": [[7, "graphnet.data.dataset.Dataset.add_label"]], "concatenate() (graphnet.data.dataset.dataset class method)": [[7, "graphnet.data.dataset.Dataset.concatenate"]], "from_config() (graphnet.data.dataset.dataset class method)": [[7, "graphnet.data.dataset.Dataset.from_config"]], "graphnet.data.dataset": [[7, "module-graphnet.data.dataset"]], "path (graphnet.data.dataset.dataset property)": [[7, "graphnet.data.dataset.Dataset.path"]], "query_table() (graphnet.data.dataset.dataset method)": [[7, "graphnet.data.dataset.Dataset.query_table"]], "truth_table (graphnet.data.dataset.dataset property)": [[7, "graphnet.data.dataset.Dataset.truth_table"]], "graphnet.data.extractors": [[8, "module-graphnet.data.extractors"]], "i3extractor (class in graphnet.data.extractors.i3extractor)": [[9, "graphnet.data.extractors.i3extractor.I3Extractor"]], "i3extractorcollection (class in graphnet.data.extractors.i3extractor)": [[9, "graphnet.data.extractors.i3extractor.I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor": [[9, "module-graphnet.data.extractors.i3extractor"]], "name (graphnet.data.extractors.i3extractor.i3extractor property)": [[9, "graphnet.data.extractors.i3extractor.I3Extractor.name"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractor method)": [[9, "graphnet.data.extractors.i3extractor.I3Extractor.set_files"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[9, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.set_files"]], "i3featureextractor (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3featureextractor": [[10, "module-graphnet.data.extractors.i3featureextractor"]], "i3genericextractor (class in graphnet.data.extractors.i3genericextractor)": [[11, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor"]], "graphnet.data.extractors.i3genericextractor": [[11, "module-graphnet.data.extractors.i3genericextractor"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.i3hybridrecoextractor)": [[12, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[12, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "i3particleextractor (class in graphnet.data.extractors.i3particleextractor)": [[13, "graphnet.data.extractors.i3particleextractor.I3ParticleExtractor"]], "graphnet.data.extractors.i3particleextractor": [[13, "module-graphnet.data.extractors.i3particleextractor"]], "i3pisaextractor (class in graphnet.data.extractors.i3pisaextractor)": [[14, "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor"]], "graphnet.data.extractors.i3pisaextractor": [[14, "module-graphnet.data.extractors.i3pisaextractor"]], "i3retroextractor (class in graphnet.data.extractors.i3retroextractor)": [[15, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor"]], "graphnet.data.extractors.i3retroextractor": [[15, "module-graphnet.data.extractors.i3retroextractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.i3splinempeextractor)": [[16, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3splinempeextractor": [[16, "module-graphnet.data.extractors.i3splinempeextractor"]], "i3truthextractor (class in graphnet.data.extractors.i3truthextractor)": [[17, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor"]], "graphnet.data.extractors.i3truthextractor": [[17, "module-graphnet.data.extractors.i3truthextractor"]], "i3tumextractor (class in graphnet.data.extractors.i3tumextractor)": [[18, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor"]], "graphnet.data.extractors.i3tumextractor": [[18, "module-graphnet.data.extractors.i3tumextractor"]], "graphnet.data.extractors.utilities": [[19, "module-graphnet.data.extractors.utilities"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.utilities.collections)": [[20, "graphnet.data.extractors.utilities.collections.flatten_nested_dictionary"]], "graphnet.data.extractors.utilities.collections": [[20, "module-graphnet.data.extractors.utilities.collections"]], "serialise() (in module graphnet.data.extractors.utilities.collections)": [[20, "graphnet.data.extractors.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.utilities.collections)": [[20, "graphnet.data.extractors.utilities.collections.transpose_list_of_dicts"]], "frame_is_montecarlo() (in module graphnet.data.extractors.utilities.frames)": [[21, "graphnet.data.extractors.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.utilities.frames)": [[21, "graphnet.data.extractors.utilities.frames.frame_is_noise"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.utilities.frames)": [[21, "graphnet.data.extractors.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.frames": [[21, "module-graphnet.data.extractors.utilities.frames"]], "break_cyclic_recursion() (in module graphnet.data.extractors.utilities.types)": [[22, "graphnet.data.extractors.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[22, "graphnet.data.extractors.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[22, "graphnet.data.extractors.utilities.types.cast_pulse_series_to_pure_python"]], "get_member_variables() (in module graphnet.data.extractors.utilities.types)": [[22, "graphnet.data.extractors.utilities.types.get_member_variables"]], "graphnet.data.extractors.utilities.types": [[22, "module-graphnet.data.extractors.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.utilities.types)": [[22, "graphnet.data.extractors.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.utilities.types)": [[22, "graphnet.data.extractors.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.utilities.types)": [[22, "graphnet.data.extractors.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.utilities.types)": [[22, "graphnet.data.extractors.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.utilities.types)": [[22, "graphnet.data.extractors.utilities.types.is_type"]], "graphnet.data.parquet": [[23, "module-graphnet.data.parquet"]], "parquetdataconverter (class in graphnet.data.parquet.parquet_dataconverter)": [[24, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter"]], "file_suffix (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter attribute)": [[24, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.file_suffix"]], "graphnet.data.parquet.parquet_dataconverter": [[24, "module-graphnet.data.parquet.parquet_dataconverter"]], "merge_files() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[24, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.merge_files"]], "save_data() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[24, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.save_data"]], "parquetdataset (class in graphnet.data.parquet.parquet_dataset)": [[25, "graphnet.data.parquet.parquet_dataset.ParquetDataset"]], "graphnet.data.parquet.parquet_dataset": [[25, "module-graphnet.data.parquet.parquet_dataset"]], "query_table() (graphnet.data.parquet.parquet_dataset.parquetdataset method)": [[25, "graphnet.data.parquet.parquet_dataset.ParquetDataset.query_table"]], "insqlitepipeline (class in graphnet.data.pipeline)": [[26, "graphnet.data.pipeline.InSQLitePipeline"]], "graphnet.data.pipeline": [[26, "module-graphnet.data.pipeline"]], "graphnet.data.sqlite": [[27, "module-graphnet.data.sqlite"]], "sqlitedataconverter (class in graphnet.data.sqlite.sqlite_dataconverter)": [[28, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter"]], "any_pulsemap_is_non_empty() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[28, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.any_pulsemap_is_non_empty"]], "construct_dataframe() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[28, "graphnet.data.sqlite.sqlite_dataconverter.construct_dataframe"]], "file_suffix (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter attribute)": [[28, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.file_suffix"]], "graphnet.data.sqlite.sqlite_dataconverter": [[28, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "is_mc_tree() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[28, "graphnet.data.sqlite.sqlite_dataconverter.is_mc_tree"]], "is_pulse_map() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[28, "graphnet.data.sqlite.sqlite_dataconverter.is_pulse_map"]], "merge_files() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[28, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.merge_files"]], "save_data() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[28, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.save_data"]], "sqlitedataset (class in graphnet.data.sqlite.sqlite_dataset)": [[29, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset"]], "graphnet.data.sqlite.sqlite_dataset": [[29, "module-graphnet.data.sqlite.sqlite_dataset"]], "query_table() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[29, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset.query_table"]], "sqlitedatasetperturbed (class in graphnet.data.sqlite.sqlite_dataset_perturbed)": [[30, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[30, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "get_desired_event_numbers() (in module graphnet.data.sqlite.sqlite_selection)": [[31, "graphnet.data.sqlite.sqlite_selection.get_desired_event_numbers"]], "get_equal_proportion_neutrino_indices() (in module graphnet.data.sqlite.sqlite_selection)": [[31, "graphnet.data.sqlite.sqlite_selection.get_equal_proportion_neutrino_indices"]], "get_even_dbang_selection() (in module graphnet.data.sqlite.sqlite_selection)": [[31, "graphnet.data.sqlite.sqlite_selection.get_even_dbang_selection"]], "get_even_signal_background_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[31, "graphnet.data.sqlite.sqlite_selection.get_even_signal_background_indicies"]], "get_even_track_cascade_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[31, "graphnet.data.sqlite.sqlite_selection.get_even_track_cascade_indicies"]], "graphnet.data.sqlite.sqlite_selection": [[31, "module-graphnet.data.sqlite.sqlite_selection"]], "attach_index() (in module graphnet.data.sqlite.sqlite_utilities)": [[32, "graphnet.data.sqlite.sqlite_utilities.attach_index"]], "create_table() (in module graphnet.data.sqlite.sqlite_utilities)": [[32, "graphnet.data.sqlite.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[32, "graphnet.data.sqlite.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[32, "graphnet.data.sqlite.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[32, "graphnet.data.sqlite.sqlite_utilities.database_table_exists"]], "graphnet.data.sqlite.sqlite_utilities": [[32, "module-graphnet.data.sqlite.sqlite_utilities"]], "run_sql_code() (in module graphnet.data.sqlite.sqlite_utilities)": [[32, "graphnet.data.sqlite.sqlite_utilities.run_sql_code"]], "save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[32, "graphnet.data.sqlite.sqlite_utilities.save_to_sql"]], "graphnet.data.utilities": [[33, "module-graphnet.data.utilities"]], "parquettosqliteconverter (class in graphnet.data.utilities.parquet_to_sqlite)": [[34, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite": [[34, "module-graphnet.data.utilities.parquet_to_sqlite"]], "run() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[34, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.run"]], "graphnet.data.utilities.random": [[35, "module-graphnet.data.utilities.random"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[35, "graphnet.data.utilities.random.pairwise_shuffle"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[36, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver": [[36, "module-graphnet.data.utilities.string_selection_resolver"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[36, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "graphnet.deployment": [[37, "module-graphnet.deployment"]], "graphneti3module (class in graphnet.deployment.i3modules.graphnet_module)": [[40, "graphnet.deployment.i3modules.graphnet_module.GraphNeTI3Module"]], "i3inferencemodule (class in graphnet.deployment.i3modules.graphnet_module)": [[40, "graphnet.deployment.i3modules.graphnet_module.I3InferenceModule"]], "i3pulsecleanermodule (class in graphnet.deployment.i3modules.graphnet_module)": [[40, "graphnet.deployment.i3modules.graphnet_module.I3PulseCleanerModule"]], "graphnet.deployment.i3modules.graphnet_module": [[40, "module-graphnet.deployment.i3modules.graphnet_module"]], "graphnet.models": [[41, "module-graphnet.models"]], "attributecoarsening (class in graphnet.models.coarsening)": [[42, "graphnet.models.coarsening.AttributeCoarsening"]], "coarsening (class in graphnet.models.coarsening)": [[42, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[42, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[42, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[42, "graphnet.models.coarsening.DOMCoarsening"]], "forward() (graphnet.models.coarsening.coarsening method)": [[42, "graphnet.models.coarsening.Coarsening.forward"]], "graphnet.models.coarsening": [[42, "module-graphnet.models.coarsening"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[42, "graphnet.models.coarsening.Coarsening.reduce_options"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[42, "graphnet.models.coarsening.unbatch_edge_index"]], "graphnet.models.components": [[43, "module-graphnet.models.components"]], "dynedgeconv (class in graphnet.models.components.layers)": [[44, "graphnet.models.components.layers.DynEdgeConv"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[44, "graphnet.models.components.layers.DynEdgeConv.forward"]], "graphnet.models.components.layers": [[44, "module-graphnet.models.components.layers"]], "graphnet.models.components.pool": [[45, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[45, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[45, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[45, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[45, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[45, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[45, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[45, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[45, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[45, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[45, "graphnet.models.components.pool.sum_pool_x"]], "graphnet.models.detector": [[46, "module-graphnet.models.detector"]], "detector (class in graphnet.models.detector.detector)": [[47, "graphnet.models.detector.detector.Detector"]], "features (graphnet.models.detector.detector.detector property)": [[47, "graphnet.models.detector.detector.Detector.features"]], "forward() (graphnet.models.detector.detector.detector method)": [[47, "graphnet.models.detector.detector.Detector.forward"]], "graphnet.models.detector.detector": [[47, "module-graphnet.models.detector.detector"]], "nb_inputs (graphnet.models.detector.detector.detector property)": [[47, "graphnet.models.detector.detector.Detector.nb_inputs"]], "nb_outputs (graphnet.models.detector.detector.detector property)": [[47, "graphnet.models.detector.detector.Detector.nb_outputs"]], "icecube86 (class in graphnet.models.detector.icecube)": [[48, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[48, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[48, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[48, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "icecubeupgrade_v2 (class in graphnet.models.detector.icecube)": [[48, "graphnet.models.detector.icecube.IceCubeUpgrade_V2"]], "features (graphnet.models.detector.icecube.icecube86 attribute)": [[48, "graphnet.models.detector.icecube.IceCube86.features"]], "features (graphnet.models.detector.icecube.icecubedeepcore attribute)": [[48, "graphnet.models.detector.icecube.IceCubeDeepCore.features"]], "features (graphnet.models.detector.icecube.icecubekaggle attribute)": [[48, "graphnet.models.detector.icecube.IceCubeKaggle.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[48, "graphnet.models.detector.icecube.IceCubeUpgrade.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade_v2 attribute)": [[48, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.features"]], "graphnet.models.detector.icecube": [[48, "module-graphnet.models.detector.icecube"]], "nb_outputs (graphnet.models.detector.icecube.icecubeupgrade_v2 property)": [[48, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.nb_outputs"]], "prometheus (class in graphnet.models.detector.prometheus)": [[49, "graphnet.models.detector.prometheus.Prometheus"]], "features (graphnet.models.detector.prometheus.prometheus attribute)": [[49, "graphnet.models.detector.prometheus.Prometheus.features"]], "graphnet.models.detector.prometheus": [[49, "module-graphnet.models.detector.prometheus"]], "graphnet.models.gnn": [[50, "module-graphnet.models.gnn"]], "convnet (class in graphnet.models.gnn.convnet)": [[51, "graphnet.models.gnn.convnet.ConvNet"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[51, "graphnet.models.gnn.convnet.ConvNet.forward"]], "graphnet.models.gnn.convnet": [[51, "module-graphnet.models.gnn.convnet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[52, "graphnet.models.gnn.dynedge.DynEdge"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[52, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "graphnet.models.gnn.dynedge": [[52, "module-graphnet.models.gnn.dynedge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[53, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[53, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "graphnet.models.gnn.dynedge_jinst": [[53, "module-graphnet.models.gnn.dynedge_jinst"]], "gnn (class in graphnet.models.gnn.gnn)": [[54, "graphnet.models.gnn.gnn.GNN"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[54, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn.gnn": [[54, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[54, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[54, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "euclideangraphbuilder (class in graphnet.models.graph_builders)": [[55, "graphnet.models.graph_builders.EuclideanGraphBuilder"]], "graphbuilder (class in graphnet.models.graph_builders)": [[55, "graphnet.models.graph_builders.GraphBuilder"]], "knngraphbuilder (class in graphnet.models.graph_builders)": [[55, "graphnet.models.graph_builders.KNNGraphBuilder"]], "radialgraphbuilder (class in graphnet.models.graph_builders)": [[55, "graphnet.models.graph_builders.RadialGraphBuilder"]], "forward() (graphnet.models.graph_builders.euclideangraphbuilder method)": [[55, "graphnet.models.graph_builders.EuclideanGraphBuilder.forward"]], "forward() (graphnet.models.graph_builders.knngraphbuilder method)": [[55, "graphnet.models.graph_builders.KNNGraphBuilder.forward"]], "forward() (graphnet.models.graph_builders.radialgraphbuilder method)": [[55, "graphnet.models.graph_builders.RadialGraphBuilder.forward"]], "graphnet.models.graph_builders": [[55, "module-graphnet.models.graph_builders"]], "model (class in graphnet.models.model)": [[56, "graphnet.models.model.Model"]], "fit() (graphnet.models.model.model method)": [[56, "graphnet.models.model.Model.fit"]], "forward() (graphnet.models.model.model method)": [[56, "graphnet.models.model.Model.forward"]], "from_config() (graphnet.models.model.model class method)": [[56, "graphnet.models.model.Model.from_config"]], "graphnet.models.model": [[56, "module-graphnet.models.model"]], "load() (graphnet.models.model.model class method)": [[56, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[56, "graphnet.models.model.Model.load_state_dict"]], "predict() (graphnet.models.model.model method)": [[56, "graphnet.models.model.Model.predict"]], "predict_as_dataframe() (graphnet.models.model.model method)": [[56, "graphnet.models.model.Model.predict_as_dataframe"]], "save() (graphnet.models.model.model method)": [[56, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[56, "graphnet.models.model.Model.save_state_dict"]], "standardmodel (class in graphnet.models.standard_model)": [[57, "graphnet.models.standard_model.StandardModel"]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[57, "graphnet.models.standard_model.StandardModel.compute_loss"]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[57, "graphnet.models.standard_model.StandardModel.configure_optimizers"]], "forward() (graphnet.models.standard_model.standardmodel method)": [[57, "graphnet.models.standard_model.StandardModel.forward"]], "graphnet.models.standard_model": [[57, "module-graphnet.models.standard_model"]], "inference() (graphnet.models.standard_model.standardmodel method)": [[57, "graphnet.models.standard_model.StandardModel.inference"]], "predict() (graphnet.models.standard_model.standardmodel method)": [[57, "graphnet.models.standard_model.StandardModel.predict"]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[57, "graphnet.models.standard_model.StandardModel.shared_step"]], "train() (graphnet.models.standard_model.standardmodel method)": [[57, "graphnet.models.standard_model.StandardModel.train"]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[57, "graphnet.models.standard_model.StandardModel.training_step"]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[57, "graphnet.models.standard_model.StandardModel.validation_step"]], "graphnet.models.task": [[58, "module-graphnet.models.task"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[59, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[59, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[59, "graphnet.models.task.classification.MulticlassClassificationTask"]], "graphnet.models.task.classification": [[59, "module-graphnet.models.task.classification"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[59, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[59, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[60, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[60, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[60, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[60, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[60, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[60, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[60, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[60, "graphnet.models.task.reconstruction.PositionReconstruction"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[60, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[60, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[60, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[60, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction": [[60, "module-graphnet.models.task.reconstruction"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[60, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[60, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[60, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[60, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[60, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[60, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[60, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[60, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[60, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[60, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[60, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[60, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "identitytask (class in graphnet.models.task.task)": [[61, "graphnet.models.task.task.IdentityTask"]], "task (class in graphnet.models.task.task)": [[61, "graphnet.models.task.task.Task"]], "compute_loss() (graphnet.models.task.task.task method)": [[61, "graphnet.models.task.task.Task.compute_loss"]], "forward() (graphnet.models.task.task.task method)": [[61, "graphnet.models.task.task.Task.forward"]], "graphnet.models.task.task": [[61, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[61, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[61, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[61, "graphnet.models.task.task.Task.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[61, "graphnet.models.task.task.Task.train_eval"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[62, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[62, "graphnet.models.utils.calculate_xyzt_homophily"]], "graphnet.models.utils": [[62, "module-graphnet.models.utils"]], "knn_graph_batch() (in module graphnet.models.utils)": [[62, "graphnet.models.utils.knn_graph_batch"]], "graphnet.pisa": [[63, "module-graphnet.pisa"]], "contourfitter (class in graphnet.pisa.fitting)": [[64, "graphnet.pisa.fitting.ContourFitter"]], "weightfitter (class in graphnet.pisa.fitting)": [[64, "graphnet.pisa.fitting.WeightFitter"]], "config_updater() (in module graphnet.pisa.fitting)": [[64, "graphnet.pisa.fitting.config_updater"]], "fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[64, "graphnet.pisa.fitting.ContourFitter.fit_1d_contour"]], "fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[64, "graphnet.pisa.fitting.ContourFitter.fit_2d_contour"]], "fit_weights() (graphnet.pisa.fitting.weightfitter method)": [[64, "graphnet.pisa.fitting.WeightFitter.fit_weights"]], "graphnet.pisa.fitting": [[64, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[65, "module-graphnet.pisa.plotting"]], "plot_1d_contour() (in module graphnet.pisa.plotting)": [[65, "graphnet.pisa.plotting.plot_1D_contour"]], "plot_2d_contour() (in module graphnet.pisa.plotting)": [[65, "graphnet.pisa.plotting.plot_2D_contour"]], "read_entry() (in module graphnet.pisa.plotting)": [[65, "graphnet.pisa.plotting.read_entry"]], "graphnet.training": [[66, "module-graphnet.training"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[67, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[67, "graphnet.training.callbacks.ProgressBar"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[67, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[67, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "graphnet.training.callbacks": [[67, "module-graphnet.training.callbacks"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[67, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[67, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[67, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[67, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[67, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[67, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "direction (class in graphnet.training.labels)": [[68, "graphnet.training.labels.Direction"]], "label (class in graphnet.training.labels)": [[68, "graphnet.training.labels.Label"]], "graphnet.training.labels": [[68, "module-graphnet.training.labels"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[69, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[69, "graphnet.training.loss_functions.CrossEntropyLoss"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[69, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "logcmk (class in graphnet.training.loss_functions)": [[69, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[69, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[69, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[69, "graphnet.training.loss_functions.MSELoss"]], "rmseloss (class in graphnet.training.loss_functions)": [[69, "graphnet.training.loss_functions.RMSELoss"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[69, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[69, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[69, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[69, "graphnet.training.loss_functions.LogCMK.backward"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[69, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[69, "graphnet.training.loss_functions.LossFunction.forward"]], "graphnet.training.loss_functions": [[69, "module-graphnet.training.loss_functions"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[69, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[69, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[69, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "collate_fn() (in module graphnet.training.utils)": [[70, "graphnet.training.utils.collate_fn"]], "get_predictions() (in module graphnet.training.utils)": [[70, "graphnet.training.utils.get_predictions"]], "graphnet.training.utils": [[70, "module-graphnet.training.utils"]], "make_dataloader() (in module graphnet.training.utils)": [[70, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[70, "graphnet.training.utils.make_train_validation_dataloader"]], "save_results() (in module graphnet.training.utils)": [[70, "graphnet.training.utils.save_results"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[71, "graphnet.training.weight_fitting.BjoernLow"]], "uniform (class in graphnet.training.weight_fitting)": [[71, "graphnet.training.weight_fitting.Uniform"]], "weightfitter (class in graphnet.training.weight_fitting)": [[71, "graphnet.training.weight_fitting.WeightFitter"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[71, "graphnet.training.weight_fitting.WeightFitter.fit"]], "graphnet.training.weight_fitting": [[71, "module-graphnet.training.weight_fitting"]], "graphnet.utilities": [[72, "module-graphnet.utilities"]], "argumentparser (class in graphnet.utilities.argparse)": [[73, "graphnet.utilities.argparse.ArgumentParser"]], "options (class in graphnet.utilities.argparse)": [[73, "graphnet.utilities.argparse.Options"]], "contains() (graphnet.utilities.argparse.options method)": [[73, "graphnet.utilities.argparse.Options.contains"]], "graphnet.utilities.argparse": [[73, "module-graphnet.utilities.argparse"]], "pop_default() (graphnet.utilities.argparse.options method)": [[73, "graphnet.utilities.argparse.Options.pop_default"]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[73, "graphnet.utilities.argparse.ArgumentParser.standard_arguments"]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[73, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments"]], "graphnet.utilities.config": [[74, "module-graphnet.utilities.config"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[75, "graphnet.utilities.config.base_config.BaseConfig"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[75, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[75, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[75, "graphnet.utilities.config.base_config.get_all_argument_values"]], "graphnet.utilities.config.base_config": [[75, "module-graphnet.utilities.config.base_config"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[75, "graphnet.utilities.config.base_config.BaseConfig.load"]], "configurable (class in graphnet.utilities.config.configurable)": [[76, "graphnet.utilities.config.configurable.Configurable"]], "config (graphnet.utilities.config.configurable.configurable property)": [[76, "graphnet.utilities.config.configurable.Configurable.config"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[76, "graphnet.utilities.config.configurable.Configurable.from_config"]], "graphnet.utilities.config.configurable": [[76, "module-graphnet.utilities.config.configurable"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[76, "graphnet.utilities.config.configurable.Configurable.save_config"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[77, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[77, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "graphnet.utilities.config.dataset_config": [[77, "module-graphnet.utilities.config.dataset_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[77, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[77, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[77, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[77, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[77, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[77, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[77, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[77, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[77, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[77, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[77, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[77, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[77, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[77, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[78, "graphnet.utilities.config.model_config.ModelConfig"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[78, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[78, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[78, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "graphnet.utilities.config.model_config": [[78, "module-graphnet.utilities.config.model_config"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[78, "graphnet.utilities.config.model_config.save_model_config"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[79, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[79, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config.parsing": [[79, "module-graphnet.utilities.config.parsing"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[79, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[79, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[79, "graphnet.utilities.config.parsing.list_all_submodules"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[79, "graphnet.utilities.config.parsing.traverse_and_apply"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[80, "graphnet.utilities.config.training_config.TrainingConfig"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[80, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[80, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[80, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "graphnet.utilities.config.training_config": [[80, "module-graphnet.utilities.config.training_config"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[80, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "graphnet.utilities.decorators": [[81, "module-graphnet.utilities.decorators"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[82, "graphnet.utilities.filesys.find_i3_files"]], "graphnet.utilities.filesys": [[82, "module-graphnet.utilities.filesys"]], "has_extension() (in module graphnet.utilities.filesys)": [[82, "graphnet.utilities.filesys.has_extension"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[82, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[82, "graphnet.utilities.filesys.is_i3_file"]], "graphnet.utilities.imports": [[83, "module-graphnet.utilities.imports"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[83, "graphnet.utilities.imports.has_icecube_package"]], "has_pisa_package() (in module graphnet.utilities.imports)": [[83, "graphnet.utilities.imports.has_pisa_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[83, "graphnet.utilities.imports.has_torch_package"]], "requires_icecube() (in module graphnet.utilities.imports)": [[83, "graphnet.utilities.imports.requires_icecube"]], "loggermixin (class in graphnet.utilities.logging)": [[84, "graphnet.utilities.logging.LoggerMixin"]], "repeatfilter (class in graphnet.utilities.logging)": [[84, "graphnet.utilities.logging.RepeatFilter"]], "critical() (graphnet.utilities.logging.loggermixin method)": [[84, "graphnet.utilities.logging.LoggerMixin.critical"]], "debug() (graphnet.utilities.logging.loggermixin method)": [[84, "graphnet.utilities.logging.LoggerMixin.debug"]], "error() (graphnet.utilities.logging.loggermixin method)": [[84, "graphnet.utilities.logging.LoggerMixin.error"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[84, "graphnet.utilities.logging.RepeatFilter.filter"]], "get_formatters() (in module graphnet.utilities.logging)": [[84, "graphnet.utilities.logging.get_formatters"]], "get_logger() (in module graphnet.utilities.logging)": [[84, "graphnet.utilities.logging.get_logger"]], "graphnet.utilities.logging": [[84, "module-graphnet.utilities.logging"]], "info() (graphnet.utilities.logging.loggermixin method)": [[84, "graphnet.utilities.logging.LoggerMixin.info"]], "set_logging_level() (in module graphnet.utilities.logging)": [[84, "graphnet.utilities.logging.set_logging_level"]], "warn_once() (in module graphnet.utilities.logging)": [[84, "graphnet.utilities.logging.warn_once"]], "warning() (graphnet.utilities.logging.loggermixin method)": [[84, "graphnet.utilities.logging.LoggerMixin.warning"]], "eps_like() (in module graphnet.utilities.maths)": [[85, "graphnet.utilities.maths.eps_like"]], "graphnet.utilities.maths": [[85, "module-graphnet.utilities.maths"]]}})