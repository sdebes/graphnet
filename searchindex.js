Search.setIndex({"docnames": ["about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.i3extractor", "api/graphnet.data.extractors.i3featureextractor", "api/graphnet.data.extractors.i3genericextractor", "api/graphnet.data.extractors.i3hybridrecoextractor", "api/graphnet.data.extractors.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.i3particleextractor", "api/graphnet.data.extractors.i3pisaextractor", "api/graphnet.data.extractors.i3retroextractor", "api/graphnet.data.extractors.i3splinempeextractor", "api/graphnet.data.extractors.i3truthextractor", "api/graphnet.data.extractors.i3tumextractor", "api/graphnet.data.extractors.utilities", "api/graphnet.data.extractors.utilities.collections", "api/graphnet.data.extractors.utilities.frames", "api/graphnet.data.extractors.utilities.types", "api/graphnet.data.parquet", "api/graphnet.data.parquet.parquet_dataconverter", "api/graphnet.data.parquet.parquet_dataset", "api/graphnet.data.pipeline", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.sqlite_dataconverter", "api/graphnet.data.sqlite.sqlite_dataset", "api/graphnet.data.sqlite.sqlite_dataset_perturbed", "api/graphnet.data.sqlite.sqlite_selection", "api/graphnet.data.sqlite.sqlite_utilities", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.deployment", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deployer", "api/graphnet.deployment.i3modules.graphnet_module", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.prometheus", "api/graphnet.models.gnn", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.gnn", "api/graphnet.models.graph_builders", "api/graphnet.models.model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.utils", "api/graphnet.pisa", "api/graphnet.pisa.fitting", "api/graphnet.pisa.plotting", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute", "index", "install"], "filenames": ["about.md", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.i3extractor.rst", "api/graphnet.data.extractors.i3featureextractor.rst", "api/graphnet.data.extractors.i3genericextractor.rst", "api/graphnet.data.extractors.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.i3particleextractor.rst", "api/graphnet.data.extractors.i3pisaextractor.rst", "api/graphnet.data.extractors.i3retroextractor.rst", "api/graphnet.data.extractors.i3splinempeextractor.rst", "api/graphnet.data.extractors.i3truthextractor.rst", "api/graphnet.data.extractors.i3tumextractor.rst", "api/graphnet.data.extractors.utilities.rst", "api/graphnet.data.extractors.utilities.collections.rst", "api/graphnet.data.extractors.utilities.frames.rst", "api/graphnet.data.extractors.utilities.types.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.parquet_dataconverter.rst", "api/graphnet.data.parquet.parquet_dataset.rst", "api/graphnet.data.pipeline.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.sqlite_dataconverter.rst", "api/graphnet.data.sqlite.sqlite_dataset.rst", "api/graphnet.data.sqlite.sqlite_dataset_perturbed.rst", "api/graphnet.data.sqlite.sqlite_selection.rst", "api/graphnet.data.sqlite.sqlite_utilities.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deployer.rst", "api/graphnet.deployment.i3modules.graphnet_module.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.graph_builders.rst", "api/graphnet.models.model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.utils.rst", "api/graphnet.pisa.rst", "api/graphnet.pisa.fitting.rst", "api/graphnet.pisa.plotting.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute.md", "index.rst", "install.md"], "titles": ["About", "API", "constants", "data", "constants", "dataconverter", "dataloader", "dataset", "extractors", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "types", "parquet", "parquet_dataconverter", "parquet_dataset", "pipeline", "sqlite", "sqlite_dataconverter", "sqlite_dataset", "sqlite_dataset_perturbed", "sqlite_selection", "sqlite_utilities", "utilities", "parquet_to_sqlite", "random", "string_selection_resolver", "deployment", "i3modules", "deployer", "graphnet_module", "models", "coarsening", "components", "layers", "pool", "detector", "detector", "icecube", "prometheus", "gnn", "convnet", "dynedge", "dynedge_jinst", "gnn", "graph_builders", "model", "standard_model", "task", "classification", "reconstruction", "task", "utils", "pisa", "fitting", "plotting", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "filesys", "imports", "logging", "maths", "src", "Contribute", "About", "Install"], "terms": {"graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90], "i": [0, 1, 7, 9, 11, 21, 22, 23, 26, 29, 30, 31, 33, 36, 37, 41, 43, 46, 52, 53, 60, 61, 62, 63, 66, 68, 69, 70, 72, 74, 79, 80, 83, 84, 85, 88, 89, 90], "an": [0, 5, 23, 25, 27, 29, 37, 70, 83, 85, 88, 89, 90], "open": [0, 88, 89], "sourc": [0, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 41, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89], "python": [0, 1, 5, 8, 9, 11, 21, 23, 88, 89, 90], "framework": [0, 89], "aim": [0, 1, 88, 89], "provid": [0, 1, 7, 26, 30, 31, 41, 42, 70, 88, 89, 90], "high": [0, 89], "qualiti": [0, 89], "user": [0, 42, 68, 89, 90], "friendli": [0, 89], "end": [0, 1, 5, 25, 29, 89], "function": [0, 5, 6, 7, 23, 32, 33, 36, 41, 43, 46, 57, 60, 61, 62, 63, 65, 66, 70, 71, 73, 78, 79, 80, 83, 84, 86, 89], "perform": [0, 43, 45, 46, 51, 53, 58, 60, 61, 62, 89], "reconstruct": [0, 1, 10, 12, 13, 16, 17, 19, 27, 38, 42, 59, 62, 89], "task": [0, 1, 42, 58, 60, 61, 70, 88, 89], "neutrino": [0, 1, 32, 65, 89], "telescop": [0, 1, 89], "us": [0, 1, 2, 4, 5, 6, 7, 9, 14, 18, 20, 21, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 42, 45, 46, 48, 53, 54, 57, 59, 60, 61, 62, 63, 65, 68, 70, 72, 73, 74, 75, 78, 79, 80, 84, 85, 88, 89, 90], "graph": [0, 1, 6, 7, 26, 30, 31, 41, 45, 46, 48, 56, 63, 69, 71, 88, 89], "neural": [0, 1, 89], "network": [0, 1, 52, 89], "gnn": [0, 1, 27, 42, 52, 53, 54, 58, 89, 90], "make": [0, 5, 72, 78, 79, 88, 89, 90], "fast": [0, 89, 90], "easi": [0, 89], "train": [0, 1, 31, 32, 37, 38, 41, 58, 68, 69, 70, 71, 72, 74, 78, 79, 81, 87, 89, 90], "complex": [0, 42, 89], "model": [0, 1, 31, 38, 41, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 66, 67, 68, 70, 71, 74, 76, 79, 81, 87, 89, 90], "can": [0, 1, 7, 9, 11, 14, 26, 30, 31, 35, 41, 46, 65, 66, 72, 76, 78, 79, 88, 89, 90], "event": [0, 1, 7, 26, 30, 31, 32, 33, 35, 37, 41, 46, 60, 61, 62, 63, 65, 70, 72, 78, 89], "state": [0, 89], "art": [0, 89], "arbitrari": [0, 89], "detector": [0, 1, 18, 42, 49, 50, 58, 89], "configur": [0, 1, 7, 42, 57, 58, 65, 73, 75, 78, 79, 81, 85, 89], "infer": [0, 1, 27, 38, 41, 58, 62, 89, 90], "time": [0, 4, 33, 43, 46, 49, 61, 85, 89, 90], "ar": [0, 1, 4, 5, 7, 11, 23, 25, 26, 29, 30, 31, 35, 37, 41, 46, 53, 60, 65, 70, 72, 79, 88, 89, 90], "order": [0, 21, 43, 63, 89], "magnitud": [0, 89], "faster": [0, 89], "than": [0, 6, 60, 61, 62, 71, 85, 89], "tradit": [0, 89], "techniqu": [0, 89], "common": [0, 1, 70, 82, 84, 89], "ml": [0, 1, 89], "develop": [0, 1, 88, 89, 90], "physicist": [0, 1, 89], "wish": [0, 88, 89], "tool": [0, 1, 89], "research": [0, 89], "By": [0, 35, 60, 61, 62, 89], "unit": [0, 5, 84, 88, 89], "both": [0, 11, 60, 61, 62, 66, 89], "group": [0, 5, 25, 29, 46, 89], "increas": [0, 68, 89], "longev": [0, 89], "usabl": [0, 89], "individu": [0, 5, 7, 26, 30, 31, 46, 53, 63, 89], "code": [0, 18, 33, 78, 79, 89], "contribut": [0, 89, 90], "from": [0, 1, 6, 7, 8, 9, 11, 13, 14, 21, 22, 23, 26, 27, 29, 30, 31, 32, 35, 41, 46, 56, 57, 60, 61, 62, 63, 66, 68, 69, 70, 76, 77, 79, 81, 85, 88, 89, 90], "build": [0, 1, 42, 48, 56, 57, 76, 79, 89], "gener": [0, 5, 7, 11, 26, 30, 32, 41, 60, 70, 89], "reusabl": [0, 89], "softwar": [0, 70, 89], "packag": [0, 1, 36, 80, 83, 84, 88, 89, 90], "base": [0, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 27, 29, 30, 31, 35, 37, 41, 43, 45, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 65, 68, 69, 70, 72, 74, 76, 77, 78, 79, 81, 84, 85, 89], "engin": [0, 89], "best": [0, 88, 89], "practic": [0, 88, 89], "lower": [0, 66, 89], "technic": [0, 89], "threshold": [0, 41, 56, 89], "most": [0, 1, 37, 89, 90], "scientif": [0, 1, 89], "problem": [0, 88, 89], "The": [0, 5, 7, 21, 23, 26, 27, 29, 30, 33, 41, 43, 45, 46, 53, 60, 61, 62, 63, 65, 66, 68, 69, 70, 89], "improv": [0, 1, 74, 89], "classif": [0, 1, 42, 59, 62, 70, 89], "yield": [0, 53, 65, 70, 89], "veri": [0, 37, 89], "accur": [0, 89], "e": [0, 1, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 37, 41, 43, 45, 46, 48, 49, 50, 52, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 70, 72, 76, 85, 88, 89, 90], "g": [0, 1, 5, 7, 18, 21, 23, 25, 26, 27, 29, 30, 31, 33, 37, 41, 46, 60, 61, 62, 63, 72, 85, 88, 89, 90], "low": [0, 89], "energi": [0, 4, 27, 60, 61, 62, 72, 89], "observ": [0, 89], "icecub": [0, 1, 10, 22, 23, 42, 47, 84, 89, 90], "here": [0, 88, 89, 90], "implement": [0, 1, 5, 9, 24, 25, 28, 29, 45, 52, 53, 54, 70, 88, 89], "wa": [0, 89], "appli": [0, 7, 9, 26, 30, 31, 46, 52, 53, 54, 55, 58, 80, 89], "oscil": [0, 64, 89], "lead": [0, 89], "signific": [0, 89], "angular": [0, 89], "rang": [0, 60, 61, 62, 89], "relev": [0, 1, 23, 36, 83, 88, 89], "studi": [0, 89], "furthermor": [0, 89], "shown": [0, 89], "could": [0, 88, 89], "muon": [0, 13, 32, 89], "v": [0, 61, 89], "therebi": [0, 1, 78, 79, 89], "effici": [0, 89], "puriti": [0, 89], "sampl": [0, 37, 89], "analysi": [0, 27, 89, 90], "similarli": [0, 23, 89], "ha": [0, 5, 23, 25, 29, 33, 41, 52, 70, 83, 89, 90], "great": [0, 89], "point": [0, 17, 69, 70, 89], "analys": [0, 38, 64, 89], "final": [0, 46, 68, 78, 89], "millisecond": [0, 89], "allow": [0, 38, 42, 46, 68, 89, 90], "whole": [0, 89], "new": [0, 1, 29, 45, 76, 81, 88, 89], "type": [0, 5, 6, 7, 8, 9, 20, 21, 22, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 43, 45, 46, 48, 52, 53, 54, 55, 56, 57, 58, 62, 63, 65, 66, 68, 70, 71, 72, 74, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89], "cosmic": [0, 89], "alert": [0, 89], "which": [0, 7, 9, 10, 18, 22, 26, 27, 30, 31, 32, 37, 41, 43, 46, 53, 57, 60, 65, 70, 74, 89, 90], "were": [0, 89], "previous": [0, 89], "unfeas": [0, 89], "possibl": [0, 21, 88, 89], "identifi": [0, 5, 7, 18, 26, 30, 31, 79, 89], "10": [0, 27, 74, 89], "tev": [0, 89], "monitor": [0, 89], "rate": [0, 68, 89], "direct": [0, 60, 61, 62, 67, 69, 89], "real": [0, 89], "thi": [0, 3, 5, 7, 9, 11, 23, 25, 26, 29, 30, 31, 33, 36, 41, 42, 46, 48, 53, 58, 60, 61, 62, 63, 65, 66, 68, 70, 72, 76, 79, 85, 88, 89, 90], "enabl": [0, 3, 89], "first": [0, 68, 88, 89], "ever": [0, 89], "despit": [0, 89], "larg": [0, 70, 89], "background": [0, 89], "origin": [0, 65, 89], "compris": [0, 89], "number": [0, 5, 7, 25, 26, 27, 29, 30, 32, 37, 45, 46, 48, 49, 52, 53, 54, 55, 60, 61, 62, 68, 74, 89], "modul": [0, 3, 23, 27, 38, 41, 42, 45, 47, 51, 57, 59, 64, 67, 73, 75, 78, 79, 80, 81, 84, 89], "necessari": [0, 21, 88, 89], "workflow": [0, 89], "ingest": [0, 1, 3, 47, 89], "raw": [0, 89], "data": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 69, 71, 74, 76, 78, 81, 84, 87, 89, 90], "domain": [0, 1, 3, 38, 89], "specif": [0, 1, 3, 5, 7, 10, 23, 24, 25, 26, 28, 29, 30, 32, 33, 38, 43, 46, 47, 48, 49, 50, 51, 55, 58, 59, 60, 61, 62, 70, 88, 89, 90], "format": [0, 1, 3, 5, 7, 21, 25, 29, 66, 78, 88, 89, 90], "deploi": [0, 1, 38, 41, 89], "chain": [0, 1, 38, 42, 58, 89, 90], "illustr": [0, 88, 89], "figur": [0, 66, 89], "level": [0, 7, 18, 26, 30, 31, 33, 43, 46, 56, 57, 85, 89, 90], "overview": [0, 89], "typic": [0, 21, 89], "convert": [0, 1, 3, 5, 21, 25, 29, 35, 89, 90], "industri": [0, 3, 89], "standard": [0, 3, 4, 5, 25, 29, 31, 37, 58, 74, 88, 89], "intermedi": [0, 1, 3, 5, 7, 25, 29, 52, 89, 90], "file": [0, 1, 3, 5, 7, 9, 21, 25, 26, 29, 30, 31, 35, 36, 41, 57, 65, 68, 70, 74, 75, 76, 77, 78, 79, 83, 85, 89, 90], "read": [0, 3, 7, 21, 26, 30, 31, 48, 53, 58, 59, 89, 90], "simpl": [0, 42, 89], "physic": [0, 1, 9, 22, 23, 32, 38, 41, 42, 59, 60, 61, 62, 89], "orient": [0, 42, 89], "compon": [0, 1, 42, 45, 46, 58, 89], "manag": [0, 9, 67, 89], "experi": [0, 1, 67, 89], "log": [0, 1, 61, 67, 68, 70, 73, 89, 90], "deploy": [0, 1, 39, 41, 87, 89], "modular": [0, 42, 89], "subclass": [0, 42, 89], "torch": [0, 7, 26, 30, 31, 42, 45, 57, 58, 84, 89, 90], "nn": [0, 42, 45, 89], "mean": [0, 5, 7, 25, 26, 29, 30, 31, 42, 53, 70, 79, 89], "onli": [0, 1, 7, 26, 30, 31, 42, 46, 60, 61, 62, 65, 72, 79, 84, 89, 90], "need": [0, 21, 42, 57, 70, 89, 90], "import": [0, 1, 33, 42, 73, 89], "few": [0, 42, 88, 89], "exist": [0, 7, 26, 27, 29, 30, 31, 33, 42, 78, 89], "purpos": [0, 42, 70, 89], "built": [0, 42, 89], "them": [0, 1, 21, 42, 53, 60, 61, 62, 65, 89, 90], "togeth": [0, 42, 58, 89], "form": [0, 42, 60, 76, 81, 89], "complet": [0, 42, 58, 89], "extend": [0, 1, 89], "suit": [0, 89], "through": [0, 70, 89], "layer": [0, 42, 44, 46, 52, 53, 54, 60, 61, 62, 89], "connect": [0, 56, 70, 89], "etc": [0, 70, 85, 89], "optimis": [0, 1, 89], "differ": [0, 7, 9, 26, 30, 31, 58, 88, 89, 90], "track": [0, 9, 13, 61, 88, 89], "These": [0, 88, 89], "prepar": [0, 70, 89], "satisfi": [0, 89], "o": [0, 60, 61, 62, 89], "load": [0, 6, 36, 57, 76, 78, 89], "requir": [0, 15, 33, 60, 70, 89, 90], "when": [0, 5, 7, 21, 25, 26, 29, 30, 31, 33, 41, 45, 53, 85, 88, 89, 90], "batch": [0, 6, 27, 43, 45, 46, 58, 63, 71, 74, 89], "do": [0, 41, 70, 78, 79, 88, 89, 90], "predict": [0, 14, 17, 19, 27, 41, 52, 57, 58, 60, 61, 62, 70, 71, 89], "either": [0, 7, 26, 30, 70, 89, 90], "contain": [0, 5, 7, 21, 22, 25, 26, 27, 29, 30, 31, 32, 41, 53, 57, 60, 61, 62, 70, 72, 74, 89, 90], "imag": [0, 1, 88, 89, 90], "portabl": [0, 89], "depend": [0, 89, 90], "free": [0, 70, 89], "split": [0, 43, 89], "up": [0, 5, 25, 29, 41, 88, 89, 90], "interfac": [0, 64, 89, 90], "block": [0, 1, 89], "pre": [0, 31, 48, 88, 89], "directli": [0, 9, 89], "while": [0, 11, 68, 89], "continu": [0, 70, 89], "expand": [0, 89], "": [0, 5, 6, 7, 9, 21, 26, 29, 30, 31, 35, 52, 53, 58, 60, 61, 62, 63, 68, 72, 74, 78, 79, 85, 86, 89, 90], "capabl": [0, 89], "andrea": [0, 89], "s\u00f8gaard": [0, 89], "receiv": [0, 89], "fund": [0, 89], "european": [0, 89], "union": [0, 6, 7, 11, 21, 23, 26, 30, 31, 41, 43, 45, 46, 53, 57, 58, 60, 61, 62, 78, 81, 83, 89], "horizon": [0, 89], "2020": [0, 89], "innov": [0, 89], "programm": [0, 89], "under": [0, 31, 89], "mari": [0, 89], "sk\u0142odowska": [0, 89], "curi": [0, 89], "grant": [0, 70, 89], "agreement": [0, 88, 89], "No": [0, 89], "890778": [0, 89], "work": [0, 4, 22, 88, 89, 90], "rasmu": [0, 54, 89], "\u00f8rs\u00f8e": [0, 89], "partli": [0, 89], "punch4nfdi": [0, 89], "consortium": [0, 89], "support": [0, 23, 88, 89, 90], "dfg": [0, 89], "nfdi": [0, 89], "39": [0, 89, 90], "1": [0, 5, 7, 21, 25, 29, 37, 43, 46, 53, 60, 61, 62, 63, 68, 70, 72, 78, 89, 90], "germani": [0, 89], "conveni": [1, 88, 90], "collabor": 1, "solv": [1, 88], "It": [1, 21, 33, 41, 88], "leverag": 1, "advanc": [1, 46], "machin": [1, 90], "learn": [1, 68, 90], "without": [1, 65, 70, 90], "have": [1, 5, 11, 25, 29, 33, 37, 46, 60, 61, 62, 88, 90], "expert": 1, "themselv": [1, 79], "acceler": 1, "area": 1, "phyic": 1, "design": 1, "principl": 1, "all": [1, 5, 7, 9, 11, 25, 26, 29, 30, 31, 33, 41, 45, 46, 48, 53, 55, 57, 62, 70, 76, 77, 78, 79, 80, 81, 85, 88, 90], "streamlin": 1, "process": [1, 5, 9, 31, 32, 41, 48, 53, 88, 90], "transform": [1, 46, 60, 61, 62, 72], "extens": [1, 83], "basic": 1, "across": [1, 2, 7, 23, 26, 30, 31, 34, 46, 58, 70, 73, 74, 75, 85], "variou": 1, "easili": 1, "architectur": [1, 52, 53, 54, 58], "main": [1, 51, 58, 88, 90], "featur": [1, 3, 4, 5, 7, 10, 26, 27, 30, 31, 41, 45, 46, 48, 49, 50, 52, 53, 54, 55, 60, 63, 71, 78, 88], "i3": [1, 5, 9, 22, 23, 25, 29, 36, 41, 83, 90], "more": [1, 7, 33, 36, 78, 79, 85], "index": [1, 5, 7, 23, 26, 30, 33, 46, 68], "sqlite": [1, 3, 27, 29, 30, 31, 32, 33, 35, 90], "suitabl": 1, "plug": 1, "plai": 1, "abstract": [1, 5, 7, 48, 55, 57, 62, 77], "awai": 1, "detail": [1, 90], "expos": 1, "physicst": 1, "what": [1, 88], "i3modul": [1, 38, 41], "includ": [1, 31, 57, 65, 70, 76, 88], "docker": 1, "run": [1, 35], "containeris": 1, "fashion": 1, "subpackag": [1, 3, 8, 38, 42, 73], "extractor": [1, 3, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 29, 41], "parquet": [1, 3, 25, 26, 35, 90], "util": [1, 3, 8, 21, 22, 23, 32, 33, 35, 36, 37, 42, 67, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87], "constant": [1, 3, 87], "dataconvert": [1, 3, 25, 29], "dataload": [1, 3, 27, 57, 58, 71, 81], "dataset": [1, 3, 6, 13, 26, 30, 31, 37, 74, 78], "pipelin": [1, 3], "coarsen": [1, 42, 46, 58], "graph_build": [1, 42, 48, 49, 50], "standard_model": [1, 42], "pisa": [1, 15, 27, 65, 66, 84, 87, 90], "fit": [1, 57, 64, 66, 70, 72, 81], "plot": [1, 64], "callback": [1, 57, 67], "label": [1, 7, 13, 52, 62, 66, 67, 71], "loss_funct": [1, 60, 61, 62, 67], "weight_fit": [1, 67], "config": [1, 6, 37, 65, 70, 73, 74, 76, 77, 78, 79, 80, 81], "argpars": [1, 73], "decor": [1, 5, 73, 84], "filesi": [1, 73], "math": [1, 73], "submodul": [1, 3, 8, 20, 24, 28, 34, 39, 42, 44, 47, 51, 59, 64, 67, 73, 75, 80], "global": [2, 4, 53, 57], "i3extractor": [3, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 29], "i3featureextractor": [3, 4, 8, 29, 41], "i3genericextractor": [3, 8, 29], "i3hybridrecoextractor": [3, 8], "i3ntmuonlabelsextractor": [3, 8], "i3particleextractor": [3, 8], "i3pisaextractor": [3, 8], "i3retroextractor": [3, 8], "i3splinempeextractor": [3, 8], "i3truthextractor": [3, 4, 8], "i3tumextractor": [3, 8], "parquet_dataconvert": [3, 24], "parquet_dataset": [3, 24], "sqlite_dataconvert": [3, 28], "sqlite_dataset": [3, 28], "sqlite_dataset_perturb": [3, 28], "sqlite_select": [3, 28], "sqlite_util": [3, 28], "parquet_to_sqlit": [3, 34], "random": [3, 7, 26, 30, 32, 34, 37, 78], "string_selection_resolv": [3, 34], "truth": [3, 4, 7, 10, 18, 26, 27, 30, 31, 33, 71, 72, 78], "fileset": [3, 5], "init_global_index": [3, 5], "cache_output_fil": [3, 5], "collate_fn": [3, 6, 67, 71], "do_shuffl": [3, 6], "columnmissingexcept": [3, 7], "ensembledataset": [3, 7], "insqlitepipelin": [3, 27], "class": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 37, 41, 43, 45, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 65, 68, 69, 70, 72, 74, 76, 77, 78, 79, 80, 81, 85, 88], "object": [4, 5, 7, 9, 11, 21, 23, 26, 30, 31, 41, 46, 48, 60, 61, 62, 65, 74, 85], "namespac": [4, 57], "name": [4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 25, 26, 27, 29, 30, 31, 33, 35, 41, 56, 57, 60, 61, 62, 65, 69, 72, 74, 78, 80, 85, 88, 90], "icecube86": [4, 47, 49], "dom_x": [4, 41, 43, 49], "dom_i": [4, 41, 43, 49], "dom_z": [4, 41, 43, 49], "dom_tim": [4, 49], "charg": [4, 41, 49, 70], "rde": [4, 43, 49], "pmt_area": [4, 43, 49], "deepcor": [4, 10, 49], "upgrad": [4, 10, 49, 90], "string": [4, 5, 7, 21, 25, 26, 29, 30, 31, 37, 46, 49, 76], "pmt_number": [4, 49], "dom_numb": [4, 49], "pmt_dir_x": [4, 49], "pmt_dir_i": [4, 49], "pmt_dir_z": [4, 49], "dom_typ": [4, 49], "prometheu": [4, 42, 47], "sensor_pos_x": [4, 50], "sensor_pos_i": [4, 50], "sensor_pos_z": [4, 50], "t": [4, 23, 33, 50, 66, 68, 70, 90], "kaggl": [4, 49], "x": [4, 5, 18, 25, 29, 45, 46, 49, 57, 62, 63, 66, 70, 72], "y": [4, 18, 49, 63, 66, 90], "z": [4, 5, 18, 25, 29, 49, 63, 90], "auxiliari": [4, 49], "energy_track": 4, "position_x": 4, "position_i": 4, "position_z": 4, "azimuth": [4, 61], "zenith": [4, 61], "pid": [4, 37, 78], "elast": 4, "sim_typ": 4, "interaction_typ": 4, "interaction_tim": 4, "inelast": [4, 61], "stopped_muon": 4, "injection_energi": 4, "injection_typ": 4, "injection_interaction_typ": 4, "injection_zenith": 4, "injection_azimuth": 4, "injection_bjorkenx": 4, "injection_bjorkeni": 4, "injection_position_x": 4, "injection_position_i": 4, "injection_position_z": 4, "injection_column_depth": 4, "primary_lepton_1_typ": 4, "primary_hadron_1_typ": 4, "primary_lepton_1_position_x": 4, "primary_lepton_1_position_i": 4, "primary_lepton_1_position_z": 4, "primary_hadron_1_position_x": 4, "primary_hadron_1_position_i": 4, "primary_hadron_1_position_z": 4, "primary_lepton_1_direction_theta": 4, "primary_lepton_1_direction_phi": 4, "primary_hadron_1_direction_theta": 4, "primary_hadron_1_direction_phi": 4, "primary_lepton_1_energi": 4, "primary_hadron_1_energi": 4, "total_energi": 4, "i3_fil": [5, 9], "str": [5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 41, 43, 45, 46, 48, 53, 56, 57, 58, 60, 61, 62, 65, 69, 71, 72, 74, 76, 77, 78, 79, 80, 81, 83, 85], "gcd_file": [5, 9, 41], "paramet": [5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 41, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86], "output_fil": [5, 25, 29], "global_index": 5, "avail": [5, 11, 27, 84], "pool": [5, 42, 43, 44, 53], "worker": [5, 25, 27, 29, 36, 74, 85], "return": [5, 6, 7, 9, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 43, 45, 46, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 65, 66, 68, 70, 71, 72, 74, 76, 77, 78, 79, 80, 83, 84, 85, 86], "none": [5, 6, 7, 9, 11, 18, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 35, 37, 43, 45, 46, 53, 56, 57, 58, 60, 61, 62, 65, 68, 70, 71, 72, 74, 76, 77, 78, 80, 83, 85], "synchron": 5, "list": [5, 6, 7, 9, 11, 18, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 41, 43, 46, 48, 49, 50, 53, 56, 57, 58, 60, 61, 62, 63, 66, 68, 70, 71, 72, 78, 80, 81, 83, 85], "process_method": 5, "cach": 5, "output": [5, 25, 29, 35, 48, 49, 52, 53, 54, 55, 57, 65, 72, 79, 90], "typevar": 5, "f": [5, 46], "bound": [5, 66], "callabl": [5, 6, 7, 23, 45, 46, 60, 61, 62, 71, 72, 76, 78, 79, 80, 84], "ani": [5, 6, 7, 21, 22, 23, 25, 26, 29, 30, 41, 45, 46, 53, 56, 57, 58, 60, 62, 66, 70, 72, 74, 76, 77, 79, 80, 81, 85, 90], "outdir": [5, 25, 27, 29, 35, 65], "gcd_rescu": [5, 25, 29, 83], "nb_files_to_batch": [5, 25, 29], "sequential_batch_pattern": [5, 25, 29], "input_file_batch_pattern": [5, 25, 29], "index_column": [5, 7, 25, 26, 29, 30, 31, 33, 37, 57, 65, 71, 72, 78], "icetray_verbos": [5, 25, 29], "abc": [5, 7, 9, 27, 57, 69, 72, 77], "logger": [5, 7, 9, 27, 35, 37, 56, 57, 69, 72, 73, 85, 90], "construct": [5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 29, 30, 31, 35, 37, 43, 44, 45, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 65, 68, 69, 70, 71, 72, 74, 77, 78, 79, 85], "regular": [5, 23, 25, 29], "express": [5, 25, 29, 57, 70], "accord": [5, 25, 29, 31, 43, 46, 56], "match": [5, 25, 29, 72, 83, 86], "certain": [5, 25, 29, 35, 65], "pattern": [5, 25, 29], "wildcard": [5, 25, 29], "same": [5, 23, 25, 29, 33, 43, 46, 60, 63, 68, 80, 85], "input": [5, 7, 25, 26, 27, 29, 30, 31, 41, 48, 52, 53, 54, 55, 60, 62, 63, 76, 81], "replac": [5, 25, 29], "period": [5, 25, 29], "special": [5, 11, 25, 29, 41, 63], "interpret": [5, 25, 29, 60], "liter": [5, 25, 29], "charact": [5, 25, 29], "regex": [5, 25, 29], "For": [5, 23, 25, 29, 68], "instanc": [5, 7, 9, 18, 23, 25, 29, 57, 65, 69, 71, 77, 90], "A": [5, 7, 25, 27, 29, 41, 46, 63, 65, 70, 72, 90], "_": [5, 25, 29], "0": [5, 7, 25, 26, 29, 30, 32, 37, 41, 43, 46, 52, 53, 63, 65, 66, 70, 78, 90], "9": [5, 25, 29], "5": [5, 7, 25, 26, 29, 30, 37, 74, 90], "zst": [5, 25, 29], "find": [5, 25, 29, 83], "whose": [5, 25, 29, 41], "one": [5, 7, 25, 29, 33, 41, 46, 57, 78, 79, 83, 88, 90], "capit": [5, 25, 29], "letter": [5, 25, 29], "follow": [5, 25, 29, 53, 58, 70, 72, 88, 90], "underscor": [5, 25, 29], "five": [5, 25, 29], "upgrade_genie_step4_141020_a_000000": [5, 25, 29], "upgrade_genie_step4_141020_a_000001": [5, 25, 29], "upgrade_genie_step4_141020_a_000008": [5, 25, 29], "upgrade_genie_step4_141020_a_000009": [5, 25, 29], "would": [5, 25, 29, 88], "upgrade_genie_step4_141020_a_00000x": [5, 25, 29], "suffix": [5, 25, 29], "upgrade_genie_step4_141020_a_000010": [5, 25, 29], "separ": [5, 21, 25, 29, 68, 90], "upgrade_genie_step4_141020_a_00001x": [5, 25, 29], "int": [5, 6, 7, 13, 25, 26, 27, 29, 30, 31, 32, 37, 45, 46, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 70, 71, 72, 74, 78, 81, 85], "properti": [5, 7, 9, 14, 23, 46, 48, 49, 55, 62, 77, 85], "file_suffix": [5, 25, 29], "execut": [5, 33], "method": [5, 9, 20, 21, 22, 23, 25, 29, 41, 45, 46, 61, 70, 72], "set": [5, 11, 88], "inherit": [5, 9, 23, 48, 70, 85], "path": [5, 7, 26, 30, 31, 32, 33, 36, 41, 57, 65, 66, 74, 76, 77, 78, 83, 90], "correspond": [5, 7, 21, 23, 26, 29, 30, 31, 36, 53, 72, 83, 90], "gcd": [5, 9, 22, 36, 41, 83], "save_data": [5, 25, 29], "save": [5, 9, 21, 25, 29, 33, 57, 65, 70, 71, 72, 76, 77, 78, 79, 90], "ordereddict": [5, 25, 29], "extract": [5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 29, 35, 36, 41, 60, 61, 62], "merge_fil": [5, 25, 29], "input_fil": [5, 25, 29], "merg": [5, 25, 29, 70, 90], "result": [5, 25, 29, 46, 68, 70, 71, 80, 90], "option": [5, 7, 18, 25, 26, 27, 29, 30, 31, 46, 53, 57, 60, 61, 62, 65, 66, 70, 72, 73, 74, 76, 78, 83, 90], "default": [5, 7, 11, 18, 21, 25, 26, 27, 29, 30, 31, 32, 33, 35, 41, 45, 46, 48, 52, 53, 54, 57, 60, 61, 62, 65, 66, 68, 70, 72, 74, 76, 83], "current": [5, 25, 29, 37, 68, 88, 90], "rais": [5, 7, 11, 25, 57, 76, 81], "notimplementederror": [5, 25], "If": [5, 7, 11, 25, 27, 29, 57, 65, 68, 72, 88, 90], "been": [5, 25, 41, 70, 88], "backend": [5, 25, 29], "question": 5, "get_map_funct": 5, "nb_file": 5, "map": [5, 7, 10, 11, 26, 29, 30, 31, 33, 41], "pure": [5, 8, 9, 11, 23], "multiprocess": [5, 90], "tupl": [5, 7, 22, 23, 26, 30, 32, 53, 60, 61, 62, 63, 65, 66, 71, 74], "remov": [6, 71, 74], "less": [6, 71], "two": [6, 53, 65, 68, 70, 71], "dom": [6, 7, 26, 30, 31, 43, 46, 71], "hit": [6, 71], "should": [6, 7, 9, 21, 26, 30, 31, 37, 45, 46, 70, 71, 79, 88, 90], "occur": [6, 71], "product": [6, 71], "selection_nam": 6, "check": [6, 22, 23, 29, 33, 74, 83, 84, 88, 90], "whether": [6, 22, 23, 29, 33, 53, 57, 70, 80, 83, 84], "shuffl": [6, 36, 71], "select": [6, 7, 26, 30, 31, 32, 37, 71, 72, 78, 88], "bool": [6, 22, 23, 29, 33, 37, 41, 43, 53, 57, 58, 65, 68, 70, 71, 72, 74, 80, 83, 84, 85], "batch_siz": [6, 27, 63, 71], "num_work": [6, 71], "persistent_work": [6, 71], "kwarg": [6, 45, 56, 57, 60, 62, 70, 72, 76, 85], "t_co": 6, "classmethod": [6, 7, 57, 70, 76, 77], "from_dataset_config": 6, "datasetconfig": [6, 7, 37, 75, 78], "dict": [6, 7, 11, 21, 23, 27, 29, 31, 48, 49, 50, 57, 58, 65, 66, 68, 70, 71, 74, 76, 78, 79, 80, 81], "except": 7, "indic": [7, 32, 37, 46, 68, 74, 88], "miss": 7, "column": [7, 26, 30, 31, 33, 41, 56, 57, 63, 65, 72], "pulsemap": [7, 10, 26, 29, 30, 31, 41, 71, 78], "node_truth": [7, 26, 30, 31, 71, 78], "truth_tabl": [7, 26, 30, 31, 65, 71, 72, 78], "node_truth_t": [7, 26, 30, 31, 71, 78], "string_select": [7, 26, 30, 31, 71, 78], "dtype": [7, 26, 30, 31, 86], "loss_weight_t": [7, 26, 30, 31, 71, 78], "loss_weight_column": [7, 26, 30, 31, 71, 78], "loss_weight_default_valu": [7, 26, 30, 31, 78], "seed": [7, 26, 30, 32, 37, 71, 78], "puls": [7, 10, 11, 22, 23, 26, 29, 30, 31, 33, 41, 43, 46, 63], "seri": [7, 10, 11, 22, 23, 26, 30, 31, 33, 41], "node": [7, 26, 30, 31, 43, 46, 52, 53, 56, 60, 61, 62, 63], "multipl": [7, 9, 26, 30, 31, 68, 78, 85], "store": [7, 9, 26, 27, 30, 31, 33, 65, 69], "ad": [7, 10, 26, 30, 31, 53, 65], "attribut": [7, 26, 30, 31, 43, 60, 61, 62], "event_no": [7, 26, 30, 31, 33, 37, 72, 78], "uniqu": [7, 26, 30, 31, 33, 35, 78], "indici": [7, 22, 26, 30, 31, 37, 70], "tabl": [7, 9, 26, 27, 29, 30, 31, 33, 65, 72], "inform": [7, 9, 11, 18, 26, 30, 31, 66], "subset": [7, 26, 30, 31, 45, 53], "given": [7, 26, 29, 30, 31, 46, 72], "queri": [7, 26, 30, 33, 37], "pass": [7, 26, 30, 45, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 70, 72, 88], "float32": [7, 26, 30, 31], "tensor": [7, 26, 30, 31, 43, 45, 46, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 70, 86], "per": [7, 11, 26, 30, 31, 33, 46, 60, 61, 62, 70, 72], "loss": [7, 26, 30, 31, 58, 60, 61, 62, 68, 70, 74], "weight": [7, 26, 30, 31, 60, 61, 62, 65, 70, 72, 79, 90], "also": [7, 26, 30, 31, 37, 78], "assign": [7, 26, 30, 31, 35, 43, 46, 88], "float": [7, 26, 30, 31, 32, 41, 43, 52, 56, 57, 65, 66, 68, 70, 71, 78], "note": [7, 26, 30, 31, 66, 79], "valu": [7, 18, 21, 26, 29, 30, 31, 33, 46, 66, 70, 74, 76], "specifi": [7, 26, 30, 31, 32, 37, 43, 60, 61, 62, 66, 68, 90], "case": [7, 11, 26, 30, 31, 41, 46, 60, 61, 62, 90], "That": [7, 26, 30, 31, 53, 61, 69], "ignor": [7, 23, 26, 30, 31], "resolv": [7, 26, 30, 37], "10000": [7, 26, 30, 37], "20": [7, 26, 30, 37, 85], "from_config": [7, 57, 77, 78, 79], "concatdataset": [7, 78], "concaten": [7, 21, 53], "query_t": [7, 26, 30], "sequential_index": [7, 26, 30], "some": [7, 26, 30], "out": [7, 53, 58, 59, 70, 85, 88, 90], "sequenti": 7, "len": 7, "self": [7, 65], "_may_": 7, "_indic": 7, "entir": [7, 57], "impos": 7, "befor": [7, 53, 60, 61, 62, 68], "scalar": [7, 63, 70], "length": [7, 23, 68], "element": [7, 21, 23, 58, 63, 80], "present": [7, 74, 83, 84], "add_label": 7, "kei": [7, 11, 21, 22, 23, 29, 33, 43, 46, 69, 79], "fn": [7, 23, 76, 80], "add": [7, 53, 74, 88, 90], "custom": [7, 68], "defin": [7, 37, 41, 46, 78], "singl": [7, 9, 46, 53, 69, 78, 79], "collect": [7, 8, 9, 20, 70, 86], "iter": 7, "i3fram": [8, 9, 11, 22, 23, 41], "frame": [8, 9, 11, 20, 23, 29, 41], "i3extractorcollect": [8, 9], "i3featureextractoricecube86": [8, 10], "i3featureextractoricecubedeepcor": [8, 10], "i3featureextractoricecubeupgrad": [8, 10], "i3pulsenoisetruthflagicecubeupgrad": [8, 10], "i3galacticplanehybridrecoextractor": [8, 12], "i3ntmuonlabelextractor": [8, 13], "i3splinempeicextractor": [8, 17], "__call__": 9, "icetrai": [9, 22, 23, 41, 84], "keep": 9, "proven": 9, "set_fil": 9, "refer": [9, 78], "being": [9, 41, 60, 61, 62], "get": [9, 22, 32, 68, 71, 90], "treat": 9, "86": [10, 49], "nois": [10, 22, 31, 32, 41], "flag": [10, 41], "exclude_kei": 11, "dynam": [11, 45, 53, 54], "pars": [11, 66, 73, 74, 75, 76, 81], "call": [11, 23, 29, 46, 65, 72, 85], "tri": [11, 23], "automat": [11, 70, 88], "cast": [11, 23], "done": [11, 46, 85, 88], "recurs": [11, 23, 80, 83], "each": [11, 21, 23, 33, 35, 36, 43, 46, 53, 56, 57, 60, 63, 65, 66, 68, 83], "look": [11, 90], "member": [11, 23, 78, 79, 85], "variabl": [11, 23, 53, 63, 72, 85], "signatur": [11, 23], "similar": [11, 23, 90], "handl": [11, 70, 74, 85], "hand": 11, "mc": [11, 29, 33], "tree": [11, 29], "trigger": 11, "exclud": [11, 35, 90], "valueerror": [11, 57], "hybrid": 12, "galatict": 12, "plane": [12, 70], "tum": [13, 19], "dnn": [13, 19], "padding_valu": 13, "northeren": 13, "i3particl": 14, "other": [14, 33, 70, 88], "algorithm": 14, "comparison": [14, 70], "quantiti": [15, 60, 61, 62, 63], "retro": [16, 27], "splinemp": 17, "border": 18, "mctree": [18, 22], "ndarrai": [18, 72], "arrai": [18, 21], "boundari": 18, "volum": 18, "coordin": [18, 63], "particl": [18, 33, 69], "start": [18, 88, 90], "stop": [18, 74], "within": [18, 43, 45, 46, 53], "hard": 18, "i3mctre": 18, "flatten_nested_dictionari": [20, 21], "serialis": [20, 21], "transpose_list_of_dict": [20, 21], "frame_is_montecarlo": [20, 22], "frame_is_nois": [20, 22], "get_om_keys_and_pulseseri": [20, 22], "is_boost_enum": [20, 23], "is_boost_class": [20, 23], "is_icecube_class": [20, 23], "is_typ": [20, 23], "is_method": [20, 23], "break_cyclic_recurs": [20, 23], "get_member_vari": [20, 23], "cast_object_to_pure_python": [20, 23], "cast_pulse_series_to_pure_python": [20, 23], "manipul": 21, "obj": [21, 23, 80], "parent_kei": 21, "flatten": 21, "nest": 21, "dictionari": [21, 22, 23, 27, 29, 31, 65, 66, 79], "non": [21, 23, 29, 32, 33, 70], "exampl": [21, 37, 43, 46, 70, 78, 79, 90], "d": [21, 88], "b": [21, 43, 46], "c": [21, 46, 70, 90], "2": [21, 46, 53, 61, 63, 65, 66, 70, 78], "a__b": 21, "applic": 21, "combin": [21, 78], "parent": 21, "__": [21, 23], "nester": 21, "json": [21, 78], "therefor": 21, "we": [21, 23, 37, 88, 90], "outer": 21, "abl": [21, 90], "de": 21, "transpos": 21, "mont": 22, "carlo": 22, "simul": [22, 41], "pulseseri": 22, "calibr": [22, 23], "gcd_dict": [22, 23], "p": [22, 29, 70], "om": [22, 23], "dataclass": 22, "i3calibr": 22, "indicesfor": 22, "boost": 23, "enum": 23, "ensur": [23, 36, 70, 85, 88, 90], "isn": 23, "return_discard": 23, "valid": [23, 37, 58, 60, 61, 62, 70, 74, 76, 81], "mangl": 23, "take": [23, 29, 46, 88], "mainli": 23, "cannot": [23, 76, 81], "trivial": [23, 62], "doe": [23, 79], "try": 23, "equival": 23, "its": 23, "like": [23, 46, 63, 70, 86, 88], "otherwis": [23, 70], "itself": [23, 60, 61, 62], "deem": 23, "wai": [23, 37, 88, 90], "represent": [23, 46], "optic": 23, "found": [23, 70], "parquetdataconvert": [24, 25], "parquetdataset": [24, 26], "pytorch": [26, 30, 31, 68, 90], "module_dict": 27, "devic": 27, "retro_table_nam": 27, "n_worker": [27, 65], "pipeline_nam": 27, "creat": [27, 29, 33, 76, 77, 81, 88, 90], "databas": [27, 29, 30, 31, 32, 33, 35, 65, 72, 90], "initialis": [27, 79], "gnn_module_for_energy_regress": 27, "modulelist": 27, "comput": [27, 58, 60, 61, 62, 63, 70], "directori": [27, 35, 65, 83], "100": [27, 90], "size": [27, 46, 53, 54, 74], "alreadi": [27, 33, 90], "error": [27, 70, 85, 88], "prompt": 27, "avoid": [27, 85, 88], "overwrit": [27, 68], "sqlitedataconvert": [28, 29, 90], "construct_datafram": [28, 29], "is_pulse_map": [28, 29], "is_mc_tre": [28, 29], "sqlitedataset": [28, 30, 31], "sqlitedatasetperturb": [28, 31], "get_desired_event_numb": [28, 32], "get_equal_proportion_neutrino_indic": [28, 32], "get_even_signal_background_indici": [28, 32], "get_even_track_cascade_indici": [28, 32], "get_even_dbang_select": [28, 32], "database_exist": [28, 33], "database_table_exist": [28, 33], "run_sql_cod": [28, 33], "save_to_sql": [28, 33], "attach_index": [28, 33], "create_t": [28, 33], "create_table_and_save_to_sql": [28, 33], "db": [29, 32, 71], "max_table_s": 29, "maximum": [29, 46, 60, 61, 62, 74], "row": [29, 33], "exce": 29, "limit": [29, 70], "any_pulsemap_is_non_empti": 29, "data_dict": 29, "empti": [29, 41], "retriev": 29, "splitinicepuls": 29, "least": [29, 88, 90], "true": [29, 33, 41, 65, 68, 70, 72], "becaus": [29, 36], "instead": [29, 70], "alwai": 29, "panda": [29, 37, 72], "datafram": [29, 33, 37, 57, 65, 71, 72], "table_nam": [29, 33], "perturb": 31, "perturbation_dict": 31, "step": [31, 58, 68], "where": [31, 69], "randomli": [31, 37, 79], "intend": [31, 90], "test": [31, 32, 37, 60, 61, 62, 71, 78, 84, 88], "stabil": 31, "small": [31, 70], "chang": [31, 65, 70, 88], "deviat": 31, "desired_s": 32, "fraction_nois": 32, "fraction_muon": 32, "fraction_nu_": 32, "fraction_nu_mu": 32, "fraction_nu_tau": 32, "fraction": [32, 52], "nu_e": 32, "nu_mu": 32, "nu_tau": 32, "reed": 32, "equal": 32, "flavour": 32, "proport": 32, "42": [32, 90], "resp": 32, "cc": 32, "nc": 32, "mu": 32, "min_max_decay_length": 32, "dbang": 32, "database_path": [33, 65, 72], "df": 33, "must": [33, 43, 68, 72, 88], "attach": 33, "default_typ": 33, "null": 33, "integer_primary_kei": 33, "NOT": [33, 70], "integ": [33, 53, 54, 70], "primari": 33, "Such": 33, "appropri": [33, 60, 61, 62], "expect": [33, 37, 41], "doesn": 33, "parquettosqliteconvert": [34, 35], "pairwise_shuffl": [34, 36], "stringselectionresolv": [34, 37], "parquet_path": 35, "mc_truth_tabl": 35, "excluded_field": 35, "id": 35, "everi": [35, 90], "field": [35, 66, 69], "One": [35, 66], "choos": 35, "argument": [35, 72, 74, 76, 78, 79, 81], "exclude_field": 35, "database_nam": 35, "convers": [35, 90], "rng": 36, "relat": [36, 83], "i3_list": [36, 83], "gcd_list": [36, 83], "correpond": 36, "handi": 36, "even": 36, "files_list": 36, "gcd_shuffl": 36, "i3_shuffl": 36, "use_cach": 37, "flexibl": 37, "below": [37, 66, 72, 88, 90], "show": [37, 68], "involv": 37, "cover": 37, "yml": [37, 74, 78, 79], "50000": [37, 78], "ab": [37, 70, 78], "12": [37, 78], "14": [37, 78], "16": [37, 78], "13": [37, 90], "compat": 37, "syntax": [37, 70], "mai": [37, 48, 90], "fix": 37, "graphnet_modul": [38, 39], "graphneti3modul": [39, 41], "i3inferencemodul": [39, 41], "i3pulsecleanermodul": [39, 41], "pulsemap_extractor": 41, "produc": [41, 69, 72], "write": [41, 90], "constructor": 41, "associ": [41, 61, 70], "model_nam": [41, 65], "prediction_column": [41, 57, 71], "pulsmap": 41, "standardmodel": [41, 42, 58], "pickl": 41, "Will": 41, "help": [41, 74, 88], "entri": [41, 53, 66, 74], "dynedg": [41, 42, 51, 54], "energy_reco": 41, "discard_empty_ev": 41, "clean": [41, 88, 90], "assum": [41, 48, 62, 63], "7": [41, 46, 65], "consid": [41, 90], "posit": [41, 46, 61], "signal": 41, "els": 41, "fals": [41, 53, 57, 65, 68, 70, 72], "elimin": 41, "speed": 41, "especi": 41, "sinc": [41, 70], "further": 41, "calcul": [41, 58, 63, 70], "convnet": [42, 51], "dynedge_jinst": [42, 51], "unbatch_edge_index": [42, 43], "attributecoarsen": [42, 43], "domcoarsen": [42, 43], "customdomcoarsen": [42, 43], "domandtimewindowcoarsen": [42, 43], "graphbuild": [42, 48, 49, 50, 56], "knngraphbuild": [42, 56], "radialgraphbuild": [42, 56], "euclideangraphbuild": [42, 56], "calculate_xyzt_homophili": [42, 63], "calculate_distance_matrix": [42, 63], "knn_graph_batch": [42, 63], "oper": [43, 45, 51, 53], "cluster": [43, 45, 46, 53], "local": [43, 74], "edge_index": [43, 45, 63], "vector": [43, 46, 70], "longtensor": [43, 46, 63], "mathbf": [43, 46], "ldot": [43, 46], "n": [43, 46, 70], "reduc": 43, "transfer_attribut": 43, "reduce_opt": 43, "avg": 43, "avg_pool": 43, "avg_pool_x": 43, "max": [43, 45, 53, 70, 74], "max_pool": [43, 46], "max_pool_x": [43, 46], "min": [43, 46, 53], "min_pool": [43, 44, 46], "min_pool_x": [43, 44, 46], "sum": [43, 46, 53, 58], "sum_pool": [43, 44, 46], "sum_pool_x": [43, 44, 46], "forward": [43, 45, 48, 52, 53, 54, 55, 56, 57, 58, 62, 70], "simplecoarsen": 43, "addit": [43, 45, 57, 70, 72], "time_window": 43, "time_kei": 43, "window": 43, "dynedgeconv": [44, 45, 53], "sum_pool_and_distribut": [44, 46], "group_bi": [44, 46], "group_pulses_to_dom": [44, 46], "group_pulses_to_pmt": [44, 46], "std_pool_x": [44, 46], "std_pool": [44, 46], "aggr": 45, "nb_neighbor": 45, "features_subset": [45, 53], "edgeconv": 45, "lightningmodul": [45, 57, 68, 85], "edg": [45, 46, 53, 54, 63], "convolut": [45, 52, 53, 54], "mlp": [45, 53], "aggreg": [45, 46], "8": [45, 46, 53, 70, 88, 90], "neighbour": [45, 53, 56, 63], "after": [45, 53, 68, 74], "sequenc": 45, "slice": [45, 53], "sparsetensor": 45, "just": [46, 90], "negat": 46, "cluster_index": 46, "distribut": [46, 53, 61, 70, 72], "ident": [46, 62], "pmt": 46, "f1": 46, "f2": 46, "6": [46, 66, 88], "groupbi": 46, "3": [46, 52, 61, 63, 65, 66, 70, 88, 90], "matrix": [46, 63, 70], "mathbb": 46, "r": [46, 90], "n_1": 46, "n_b": 46, "obtain": [46, 70], "wise": 46, "dens": 46, "fc": 46, "known": 46, "std": 46, "repres": [46, 76, 79], "averag": [46, 70], "torch_geometr": 46, "version": [46, 60, 61, 62, 68, 88, 90], "standardis": 47, "icecubekaggl": [47, 49], "icecubedeepcor": [47, 49], "icecubeupgrad": [47, 49], "icecubeupgrade_v2": [47, 49], "scaler": [48, 49, 50], "ins": 48, "adjac": 48, "nb_input": [48, 52, 53, 54, 55, 60, 61, 62], "nb_output": [48, 49, 52, 54, 55, 60, 62], "overridden": 48, "competit": 49, "prototyp": 50, "learnabl": [51, 52, 53, 54, 55], "dynedgejinst": [51, 54], "author": [52, 54, 70], "martin": 52, "minh": 52, "nb_intermedi": 52, "dropout_ratio": 52, "dimens": [52, 53, 70], "128": [52, 53, 74], "drop": 52, "nb_neighbour": 53, "dynedge_layer_s": 53, "post_processing_layer_s": 53, "readout_layer_s": 53, "global_pooling_schem": 53, "add_global_variables_after_pool": 53, "k": [53, 56, 63, 70], "nearest": [53, 56, 63], "latent": [53, 60], "metric": [53, 68], "dimenion": 53, "multi": 53, "perceptron": 53, "256": 53, "336": 53, "hidden": [53, 54, 60, 62], "skip": 53, "post": 53, "_and_": 53, "As": 53, "last": [53, 60, 62, 68], "scheme": 53, "altern": [53, 70, 88], "exact": [54, 70], "2209": 54, "03042": 54, "oerso": 54, "layer_size_scal": 54, "4": [54, 61, 66], "scale": [54, 60, 61, 62, 70], "core": 55, "class_nam": [56, 57, 79, 85], "log_fold": [56, 57, 85], "nb_nearest_neighbour": 56, "radiu": 56, "sphere": 56, "chosen": [56, 85], "centr": 56, "sigma": 56, "euclidean": [56, 88], "distanc": [56, 63], "between": [56, 58, 63, 68, 70], "see": [56, 68, 88, 90], "http": [56, 70, 88], "arxiv": [56, 70], "org": [56, 70, 90], "pdf": 56, "1809": 56, "06166": 56, "train_dataload": 57, "val_dataload": 57, "max_epoch": 57, "gpu": [57, 58, 74, 90], "ckpt_path": 57, "log_every_n_step": 57, "gradient_clip_v": 57, "distribution_strategi": [57, 58], "trainer_kwarg": 57, "pytorch_lightn": [57, 85], "trainer": [57, 68, 71], "predict_as_datafram": 57, "node_level": [57, 71], "additional_attribut": [57, 71], "save_state_dict": 57, "state_dict": 57, "load_state_dict": 57, "karg": 57, "trust": 57, "load_modul": 57, "modelconfig": [57, 75, 79], "enough": 57, "eval": [57, 90], "lambda": 57, "definit": 57, "consequ": 57, "optimizer_class": 58, "optim": [58, 68], "adam": 58, "optimizer_kwarg": 58, "scheduler_class": 58, "scheduler_kwarg": 58, "scheduler_config": 58, "configure_optim": 58, "shared_step": 58, "batch_idx": 58, "share": 58, "training_step": 58, "train_batch": 58, "validation_step": 58, "val_batch": 58, "compute_loss": [58, 60, 61, 62], "pred": [58, 62], "verbos": [58, 68], "activ": [58, 62, 88, 90], "mode": [58, 62], "deactiv": [58, 62], "multiclassclassificationtask": [59, 60], "binaryclassificationtask": [59, 60], "binaryclassificationtasklogit": [59, 60], "azimuthreconstructionwithkappa": [59, 61], "azimuthreconstruct": [59, 61], "directionreconstructionwithkappa": [59, 61], "zenithreconstruct": [59, 61], "zenithreconstructionwithkappa": [59, 61], "energyreconstruct": [59, 61], "energyreconstructionwithpow": [59, 61], "energyreconstructionwithuncertainti": [59, 61], "vertexreconstruct": [59, 61], "positionreconstruct": [59, 61], "timereconstruct": [59, 61], "inelasticityreconstruct": [59, 61], "identitytask": [59, 60, 62], "arg": [60, 62, 70, 74, 76, 85], "classifi": 60, "untransform": 60, "logit": [60, 70], "affin": [60, 61, 62], "hidden_s": [60, 61, 62], "target_label": [60, 61, 62], "transform_prediction_and_target": [60, 61, 62], "transform_target": [60, 61, 62], "transform_infer": [60, 61, 62], "transform_support": [60, 61, 62], "loss_weight": [60, 61, 62], "binari": [60, 70], "feed": [60, 61, 62], "target": [60, 61, 62, 70, 81], "lossfunct": [60, 61, 62, 67, 70], "numer": [60, 61, 62], "stabl": [60, 61, 62, 90], "log10": [60, 61, 62, 72], "rather": [60, 61, 62, 85], "conjunct": [60, 61, 62], "invers": [60, 61, 62], "recov": [60, 61, 62], "minimum": [60, 61, 62], "restrict": [60, 61, 62, 70], "invert": [60, 61, 62], "1e6": [60, 61, 62], "angl": 61, "kappa": [61, 70], "var": 61, "3d": [61, 70], "vmf": 61, "uncertainti": 61, "vertex": 61, "interact": 61, "hadron": 61, "wrt": 62, "train_ev": 62, "xyzt": 63, "homophili": 63, "measur": 63, "notic": [63, 70], "shape": [63, 70], "xyz_coord": 63, "pairwis": 63, "nb_dom": 63, "updat": [63, 65, 68], "config_updat": [64, 65], "weightfitt": [64, 65, 67, 72], "contourfitt": [64, 65], "read_entri": [64, 66], "plot_2d_contour": [64, 66], "plot_1d_contour": [64, 66], "contour": [65, 66], "config_path": 65, "new_config_path": 65, "dummy_sect": 65, "temp": 65, "dummi": 65, "section": 65, "header": 65, "configupdat": 65, "programat": 65, "statistical_fit": 65, "fit_weight": [65, 72], "config_outdir": 65, "weight_nam": [65, 72], "pisa_config_dict": 65, "add_to_databas": [65, 72], "flux": 65, "_database_path": 65, "statist": 65, "effect": [65, 68, 88], "account": 65, "systemat": 65, "hypersurfac": 65, "assumpt": 65, "regard": 65, "pipeline_path": 65, "post_fix": 65, "include_retro": 65, "fit_1d_contour": 65, "run_nam": 65, "config_dict": 65, "grid_siz": 65, "theta23_minmax": 65, "36": 65, "54": 65, "dm31_minmax": 65, "1d": [65, 66], "fit_2d_contour": 65, "2d": [65, 66, 70], "content": 66, "contour_data": 66, "xlim": 66, "ylim": 66, "0023799999999999997": 66, "0025499999999999997": 66, "chi2_critical_valu": 66, "width": 66, "height": 66, "path_to_pisa_fit_result": 66, "name_of_my_model_in_fit": 66, "legend": 66, "color": 66, "linestyl": 66, "style": [66, 88], "line": [66, 68, 74], "upper": 66, "axi": 66, "605": 66, "critic": [66, 85], "chi2": 66, "90": 66, "cl": 66, "right": [66, 70], "176": 66, "inch": 66, "388": 66, "706": 66, "abov": [66, 70, 72, 90], "352": 66, "piecewiselinearlr": [67, 68], "progressbar": [67, 68], "mseloss": [67, 70], "rmseloss": [67, 70], "logcoshloss": [67, 70], "crossentropyloss": [67, 70], "binarycrossentropyloss": [67, 70], "logcmk": [67, 70], "vonmisesfisherloss": [67, 70], "vonmisesfisher2dloss": [67, 70], "euclideandistanceloss": [67, 70], "vonmisesfisher3dloss": [67, 70], "make_dataload": [67, 71], "make_train_validation_dataload": [67, 71], "get_predict": [67, 71], "save_result": [67, 71], "uniform": [67, 72], "bjoernlow": [67, 72], "dure": 68, "mileston": 68, "factor": 68, "last_epoch": 68, "_lrschedul": 68, "interpol": 68, "linearli": 68, "denot": 68, "multipli": 68, "closest": 68, "vice": 68, "versa": 68, "wrap": [68, 79], "epoch": [68, 74], "print": [68, 85], "messag": [68, 85], "stdout": 68, "get_lr": 68, "refresh_r": 68, "process_posit": 68, "tqdmprogressbar": 68, "progress": 68, "bar": 68, "customis": 68, "lightn": 68, "init_validation_tqdm": 68, "overrid": 68, "init_predict_tqdm": 68, "init_test_tqdm": 68, "init_train_tqdm": 68, "get_metr": 68, "on_train_epoch_start": 68, "previou": 68, "behaviour": 68, "on_train_epoch_end": 68, "don": [68, 90], "duplciat": 68, "runtim": [69, 90], "azimuth_kei": 69, "zenith_kei": 69, "return_el": 70, "elementwis": 70, "term": 70, "squar": 70, "root": [70, 90], "cosh": 70, "act": 70, "cross": 70, "entropi": 70, "num_class": 70, "softmax": 70, "ed": 70, "probabl": 70, "mit": 70, "licens": 70, "copyright": 70, "2019": 70, "ryabinin": 70, "permiss": 70, "herebi": 70, "person": 70, "copi": 70, "document": 70, "deal": 70, "modifi": 70, "publish": 70, "sublicens": 70, "sell": 70, "permit": 70, "whom": 70, "furnish": 70, "so": [70, 90], "subject": 70, "condit": 70, "shall": 70, "substanti": 70, "portion": 70, "THE": 70, "AS": 70, "warranti": 70, "OF": 70, "kind": 70, "OR": 70, "impli": 70, "BUT": 70, "TO": 70, "merchant": 70, "FOR": 70, "particular": [70, 88], "AND": 70, "noninfring": 70, "IN": 70, "NO": 70, "holder": 70, "BE": 70, "liabl": 70, "claim": 70, "damag": 70, "liabil": 70, "action": 70, "contract": 70, "tort": 70, "aris": 70, "WITH": 70, "_____________________": 70, "github": [70, 90], "com": [70, 90], "mryab": 70, "vmf_loss": 70, "blob": 70, "master": 70, "py": [70, 90], "bessel": 70, "exponenti": 70, "ditto": 70, "iv": 70, "1812": 70, "04616": 70, "spite": 70, "suggest": 70, "sec": 70, "paper": 70, "m": 70, "correct": 70, "static": [70, 88], "ctx": 70, "backward": 70, "grad_output": 70, "von": 70, "mise": 70, "fisher": 70, "log_cmk_exact": 70, "c_": 70, "exactli": [70, 85], "log_cmk_approx": 70, "approx": 70, "minu": 70, "sign": 70, "log_cmk": 70, "kappa_switch": 70, "diverg": 70, "700": 70, "float64": 70, "precis": 70, "unaccur": 70, "switch": 70, "three": 70, "database_indic": 71, "test_siz": 71, "tag": [71, 88, 90], "archiv": 71, "public": 72, "uniformweightfitt": 72, "bin": 72, "privat": 72, "_fit_weight": 72, "sql": 72, "desir": [72, 83], "space": 72, "np": 72, "happen": 72, "x_low": 72, "wherea": 72, "curv": 72, "base_config": [73, 75], "dataset_config": [73, 75], "model_config": [73, 75], "training_config": [73, 75], "argumentpars": [73, 74], "is_gcd_fil": [73, 83], "is_i3_fil": [73, 83], "has_extens": [73, 83], "find_i3_fil": [73, 83], "has_icecube_packag": [73, 84], "has_torch_packag": [73, 84], "has_pisa_packag": [73, 84], "requires_icecub": [73, 84], "repeatfilt": [73, 85], "eps_lik": [73, 86], "consist": [74, 85, 88], "cli": 74, "pop_default": 74, "usag": 74, "descript": 74, "command": [74, 90], "standard_argu": 74, "home": [74, 90], "runner": 74, "lib": [74, 90], "python3": 74, "training_example_data_sqlit": 74, "earli": 74, "patienc": 74, "narg": 74, "50": 74, "example_energy_reconstruction_model": 74, "num": 74, "fetch": 74, "with_standard_argu": 74, "baseconfig": [75, 76, 77, 78, 79, 81], "get_all_argument_valu": [75, 76], "save_dataset_config": [75, 78], "save_model_config": [75, 79], "traverse_and_appli": [75, 80], "list_all_submodul": [75, 80], "get_all_grapnet_class": [75, 80], "is_graphnet_modul": [75, 80], "is_graphnet_class": [75, 80], "get_graphnet_class": [75, 80], "trainingconfig": [75, 81], "basemodel": [76, 79], "keyword": [76, 81], "validationerror": [76, 81], "dump": [76, 78, 79], "yaml": [76, 77], "as_dict": [76, 79], "overwritten": 76, "re": [77, 90], "save_config": 77, "dataconfig": 78, "transpar": [78, 79, 88], "reproduc": [78, 79], "In": [78, 79, 90], "session": [78, 79], "anoth": [78, 79], "you": [78, 79, 88, 90], "still": 78, "csv": 78, "train_select": 78, "test_select": 78, "init_fn": [78, 79], "__init__": [78, 79, 90], "trainabl": 79, "hyperparamet": 79, "instanti": 79, "thu": 79, "unambigu": 79, "fn_kwarg": 80, "structur": 80, "moduletyp": 80, "grapnet": 80, "lookup": 80, "early_stopping_pati": 81, "system": [83, 90], "filenam": 83, "dir": 83, "search": 83, "test_funct": 84, "filter": 85, "repeat": 85, "nb_repeats_allow": 85, "record": 85, "logrecord": 85, "clear": 85, "intuit": 85, "composit": 85, "loggeradapt": 85, "clash": 85, "setlevel": 85, "deleg": 85, "msg": 85, "warn": 85, "info": [85, 90], "debug": 85, "warning_onc": 85, "onc": 85, "handler": 85, "file_handl": 85, "filehandl": 85, "stream_handl": 85, "streamhandl": 85, "assort": 86, "ep": 86, "api": 87, "To": [88, 90], "sure": [88, 90], "smooth": 88, "guidelin": 88, "guid": 88, "encourag": 88, "contributor": 88, "discuss": 88, "bug": 88, "anyth": 88, "place": 88, "describ": 88, "yourself": 88, "ownership": 88, "prioriti": 88, "situat": 88, "lot": 88, "effort": 88, "go": 88, "turn": 88, "outsid": 88, "scope": 88, "project": 88, "solut": 88, "better": 88, "fork": 88, "repo": 88, "dedic": 88, "branch": [88, 90], "your": [88, 90], "repositori": 88, "graphbuil": 88, "builder": 88, "own": [88, 90], "team": 88, "accept": 88, "autom": 88, "review": 88, "pep8": 88, "docstr": 88, "googl": 88, "hint": 88, "adher": 88, "pep": 88, "pylint": 88, "flake8": 88, "black": 88, "well": 88, "recommend": [88, 90], "mypi": 88, "pydocstyl": 88, "docformatt": 88, "commit": 88, "hook": 88, "instal": 88, "come": 88, "pip": [88, 90], "Then": 88, "everytim": 88, "pep257": 88, "concept": 88, "ljvmiranda921": 88, "io": 88, "notebook": 88, "2018": 88, "06": 88, "21": 88, "precommit": 88, "environ": 90, "virtual": 90, "anaconda": 90, "prove": 90, "instruct": 90, "setup": 90, "want": 90, "part": 90, "achiev": 90, "bash": 90, "shell": 90, "cvmf": 90, "opensciencegrid": 90, "py3": 90, "v4": 90, "sh": 90, "rhel_7_x86_64": 90, "metaproject": 90, "combo": 90, "env": 90, "alia": 90, "script": 90, "With": 90, "now": 90, "light": 90, "extra": 90, "geometr": 90, "won": 90, "later": 90, "torch_cpu": 90, "txt": 90, "cpu": 90, "torch_gpu": 90, "prefer": 90, "unix": 90, "git": 90, "clone": 90, "usernam": 90, "cd": 90, "conda": 90, "gcc_linux": 90, "64": 90, "gxx_linux": 90, "libgcc": 90, "cudatoolkit": 90, "11": 90, "forg": 90, "torch_maco": 90, "On": 90, "maco": 90, "box": 90, "compil": 90, "gcc": 90, "date": 90, "possibli": 90, "cuda": 90, "toolkit": 90, "recent": 90, "omit": 90, "newer": 90, "export": 90, "ld_library_path": 90, "anaconda3": 90, "miniconda3": 90, "bashrc": 90, "librari": 90, "access": 90, "rm": 90, "asogaard": 90, "latest": 90, "dc423315742c": 90, "01_icetrai": 90, "01_convert_i3_fil": 90, "2023": 90, "01": 90, "24": 90, "41": 90, "27": 90, "graphnet_20230124": 90, "134127": 90, "46": 90, "convert_i3_fil": 90, "ic86": 90, "thread": 90, "00": 90, "79": 90, "26": 90, "413": 90, "88it": 90, "specialis": 90, "ones": 90, "push": 90, "vx": 90}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [38, 0, 0, "-", "deployment"], [42, 0, 0, "-", "models"], [64, 0, 0, "-", "pisa"], [67, 0, 0, "-", "training"], [73, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "dataconverter"], [6, 0, 0, "-", "dataloader"], [7, 0, 0, "-", "dataset"], [8, 0, 0, "-", "extractors"], [24, 0, 0, "-", "parquet"], [27, 0, 0, "-", "pipeline"], [28, 0, 0, "-", "sqlite"], [34, 0, 0, "-", "utilities"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.dataconverter": [[5, 1, 1, "", "DataConverter"], [5, 1, 1, "", "FileSet"], [5, 5, 1, "", "cache_output_files"], [5, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[5, 3, 1, "", "execute"], [5, 4, 1, "", "file_suffix"], [5, 3, 1, "", "get_map_function"], [5, 3, 1, "", "merge_files"], [5, 3, 1, "", "save_data"]], "graphnet.data.dataconverter.FileSet": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_file"]], "graphnet.data.dataloader": [[6, 1, 1, "", "DataLoader"], [6, 5, 1, "", "collate_fn"], [6, 5, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[6, 3, 1, "", "from_dataset_config"]], "graphnet.data.dataset": [[7, 6, 1, "", "ColumnMissingException"], [7, 1, 1, "", "Dataset"], [7, 1, 1, "", "EnsembleDataset"]], "graphnet.data.dataset.Dataset": [[7, 3, 1, "", "add_label"], [7, 3, 1, "", "concatenate"], [7, 3, 1, "", "from_config"], [7, 4, 1, "", "path"], [7, 3, 1, "", "query_table"], [7, 4, 1, "", "truth_table"]], "graphnet.data.extractors": [[9, 0, 0, "-", "i3extractor"], [10, 0, 0, "-", "i3featureextractor"], [11, 0, 0, "-", "i3genericextractor"], [12, 0, 0, "-", "i3hybridrecoextractor"], [13, 0, 0, "-", "i3ntmuonlabelsextractor"], [14, 0, 0, "-", "i3particleextractor"], [15, 0, 0, "-", "i3pisaextractor"], [16, 0, 0, "-", "i3retroextractor"], [17, 0, 0, "-", "i3splinempeextractor"], [18, 0, 0, "-", "i3truthextractor"], [19, 0, 0, "-", "i3tumextractor"], [20, 0, 0, "-", "utilities"]], "graphnet.data.extractors.i3extractor": [[9, 1, 1, "", "I3Extractor"], [9, 1, 1, "", "I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor.I3Extractor": [[9, 4, 1, "", "name"], [9, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3extractor.I3ExtractorCollection": [[9, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3featureextractor": [[10, 1, 1, "", "I3FeatureExtractor"], [10, 1, 1, "", "I3FeatureExtractorIceCube86"], [10, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [10, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [10, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3genericextractor": [[11, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[12, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3ntmuonlabelsextractor": [[13, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.i3particleextractor": [[14, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.i3pisaextractor": [[15, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.i3retroextractor": [[16, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.i3splinempeextractor": [[17, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3truthextractor": [[18, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.i3tumextractor": [[19, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.utilities": [[21, 0, 0, "-", "collections"], [22, 0, 0, "-", "frames"], [23, 0, 0, "-", "types"]], "graphnet.data.extractors.utilities.collections": [[21, 5, 1, "", "flatten_nested_dictionary"], [21, 5, 1, "", "serialise"], [21, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.utilities.frames": [[22, 5, 1, "", "frame_is_montecarlo"], [22, 5, 1, "", "frame_is_noise"], [22, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.types": [[23, 5, 1, "", "break_cyclic_recursion"], [23, 5, 1, "", "cast_object_to_pure_python"], [23, 5, 1, "", "cast_pulse_series_to_pure_python"], [23, 5, 1, "", "get_member_variables"], [23, 5, 1, "", "is_boost_class"], [23, 5, 1, "", "is_boost_enum"], [23, 5, 1, "", "is_icecube_class"], [23, 5, 1, "", "is_method"], [23, 5, 1, "", "is_type"]], "graphnet.data.parquet": [[25, 0, 0, "-", "parquet_dataconverter"], [26, 0, 0, "-", "parquet_dataset"]], "graphnet.data.parquet.parquet_dataconverter": [[25, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter": [[25, 2, 1, "", "file_suffix"], [25, 3, 1, "", "merge_files"], [25, 3, 1, "", "save_data"]], "graphnet.data.parquet.parquet_dataset": [[26, 1, 1, "", "ParquetDataset"]], "graphnet.data.parquet.parquet_dataset.ParquetDataset": [[26, 3, 1, "", "query_table"]], "graphnet.data.pipeline": [[27, 1, 1, "", "InSQLitePipeline"]], "graphnet.data.sqlite": [[29, 0, 0, "-", "sqlite_dataconverter"], [30, 0, 0, "-", "sqlite_dataset"], [31, 0, 0, "-", "sqlite_dataset_perturbed"], [32, 0, 0, "-", "sqlite_selection"], [33, 0, 0, "-", "sqlite_utilities"]], "graphnet.data.sqlite.sqlite_dataconverter": [[29, 1, 1, "", "SQLiteDataConverter"], [29, 5, 1, "", "construct_dataframe"], [29, 5, 1, "", "is_mc_tree"], [29, 5, 1, "", "is_pulse_map"]], "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter": [[29, 3, 1, "", "any_pulsemap_is_non_empty"], [29, 2, 1, "", "file_suffix"], [29, 3, 1, "", "merge_files"], [29, 3, 1, "", "save_data"]], "graphnet.data.sqlite.sqlite_dataset": [[30, 1, 1, "", "SQLiteDataset"]], "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset": [[30, 3, 1, "", "query_table"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[31, 1, 1, "", "SQLiteDatasetPerturbed"]], "graphnet.data.sqlite.sqlite_selection": [[32, 5, 1, "", "get_desired_event_numbers"], [32, 5, 1, "", "get_equal_proportion_neutrino_indices"], [32, 5, 1, "", "get_even_dbang_selection"], [32, 5, 1, "", "get_even_signal_background_indicies"], [32, 5, 1, "", "get_even_track_cascade_indicies"]], "graphnet.data.sqlite.sqlite_utilities": [[33, 5, 1, "", "attach_index"], [33, 5, 1, "", "create_table"], [33, 5, 1, "", "create_table_and_save_to_sql"], [33, 5, 1, "", "database_exists"], [33, 5, 1, "", "database_table_exists"], [33, 5, 1, "", "run_sql_code"], [33, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities": [[35, 0, 0, "-", "parquet_to_sqlite"], [36, 0, 0, "-", "random"], [37, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.parquet_to_sqlite": [[35, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter": [[35, 3, 1, "", "run"]], "graphnet.data.utilities.random": [[36, 5, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.string_selection_resolver": [[37, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[37, 3, 1, "", "resolve"]], "graphnet.deployment.i3modules": [[41, 0, 0, "-", "graphnet_module"]], "graphnet.deployment.i3modules.graphnet_module": [[41, 1, 1, "", "GraphNeTI3Module"], [41, 1, 1, "", "I3InferenceModule"], [41, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.models": [[43, 0, 0, "-", "coarsening"], [44, 0, 0, "-", "components"], [47, 0, 0, "-", "detector"], [51, 0, 0, "-", "gnn"], [56, 0, 0, "-", "graph_builders"], [57, 0, 0, "-", "model"], [58, 0, 0, "-", "standard_model"], [59, 0, 0, "-", "task"], [63, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[43, 1, 1, "", "AttributeCoarsening"], [43, 1, 1, "", "Coarsening"], [43, 1, 1, "", "CustomDOMCoarsening"], [43, 1, 1, "", "DOMAndTimeWindowCoarsening"], [43, 1, 1, "", "DOMCoarsening"], [43, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[43, 3, 1, "", "forward"], [43, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[45, 0, 0, "-", "layers"], [46, 0, 0, "-", "pool"]], "graphnet.models.components.layers": [[45, 1, 1, "", "DynEdgeConv"]], "graphnet.models.components.layers.DynEdgeConv": [[45, 3, 1, "", "forward"]], "graphnet.models.components.pool": [[46, 5, 1, "", "group_by"], [46, 5, 1, "", "group_pulses_to_dom"], [46, 5, 1, "", "group_pulses_to_pmt"], [46, 5, 1, "", "min_pool"], [46, 5, 1, "", "min_pool_x"], [46, 5, 1, "", "std_pool"], [46, 5, 1, "", "std_pool_x"], [46, 5, 1, "", "sum_pool"], [46, 5, 1, "", "sum_pool_and_distribute"], [46, 5, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[48, 0, 0, "-", "detector"], [49, 0, 0, "-", "icecube"], [50, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[48, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[48, 4, 1, "", "features"], [48, 3, 1, "", "forward"], [48, 4, 1, "", "nb_inputs"], [48, 4, 1, "", "nb_outputs"]], "graphnet.models.detector.icecube": [[49, 1, 1, "", "IceCube86"], [49, 1, 1, "", "IceCubeDeepCore"], [49, 1, 1, "", "IceCubeKaggle"], [49, 1, 1, "", "IceCubeUpgrade"], [49, 1, 1, "", "IceCubeUpgrade_V2"]], "graphnet.models.detector.icecube.IceCube86": [[49, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[49, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[49, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[49, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeUpgrade_V2": [[49, 2, 1, "", "features"], [49, 4, 1, "", "nb_outputs"]], "graphnet.models.detector.prometheus": [[50, 1, 1, "", "Prometheus"]], "graphnet.models.detector.prometheus.Prometheus": [[50, 2, 1, "", "features"]], "graphnet.models.gnn": [[52, 0, 0, "-", "convnet"], [53, 0, 0, "-", "dynedge"], [54, 0, 0, "-", "dynedge_jinst"], [55, 0, 0, "-", "gnn"]], "graphnet.models.gnn.convnet": [[52, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[52, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[53, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[53, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[54, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[54, 3, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[55, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[55, 3, 1, "", "forward"], [55, 4, 1, "", "nb_inputs"], [55, 4, 1, "", "nb_outputs"]], "graphnet.models.graph_builders": [[56, 1, 1, "", "EuclideanGraphBuilder"], [56, 1, 1, "", "GraphBuilder"], [56, 1, 1, "", "KNNGraphBuilder"], [56, 1, 1, "", "RadialGraphBuilder"]], "graphnet.models.graph_builders.EuclideanGraphBuilder": [[56, 3, 1, "", "forward"]], "graphnet.models.graph_builders.KNNGraphBuilder": [[56, 3, 1, "", "forward"]], "graphnet.models.graph_builders.RadialGraphBuilder": [[56, 3, 1, "", "forward"]], "graphnet.models.model": [[57, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[57, 3, 1, "", "fit"], [57, 3, 1, "", "forward"], [57, 3, 1, "", "from_config"], [57, 3, 1, "", "load"], [57, 3, 1, "", "load_state_dict"], [57, 3, 1, "", "predict"], [57, 3, 1, "", "predict_as_dataframe"], [57, 3, 1, "", "save"], [57, 3, 1, "", "save_state_dict"]], "graphnet.models.standard_model": [[58, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[58, 3, 1, "", "compute_loss"], [58, 3, 1, "", "configure_optimizers"], [58, 3, 1, "", "forward"], [58, 3, 1, "", "inference"], [58, 3, 1, "", "predict"], [58, 3, 1, "", "shared_step"], [58, 3, 1, "", "train"], [58, 3, 1, "", "training_step"], [58, 3, 1, "", "validation_step"]], "graphnet.models.task": [[60, 0, 0, "-", "classification"], [61, 0, 0, "-", "reconstruction"], [62, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[60, 1, 1, "", "BinaryClassificationTask"], [60, 1, 1, "", "BinaryClassificationTaskLogits"], [60, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[60, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[60, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[61, 1, 1, "", "AzimuthReconstruction"], [61, 1, 1, "", "AzimuthReconstructionWithKappa"], [61, 1, 1, "", "DirectionReconstructionWithKappa"], [61, 1, 1, "", "EnergyReconstruction"], [61, 1, 1, "", "EnergyReconstructionWithPower"], [61, 1, 1, "", "EnergyReconstructionWithUncertainty"], [61, 1, 1, "", "InelasticityReconstruction"], [61, 1, 1, "", "PositionReconstruction"], [61, 1, 1, "", "TimeReconstruction"], [61, 1, 1, "", "VertexReconstruction"], [61, 1, 1, "", "ZenithReconstruction"], [61, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[61, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[61, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[61, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[61, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[61, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[61, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[61, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[61, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[61, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[61, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[61, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[61, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[62, 1, 1, "", "IdentityTask"], [62, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[62, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[62, 3, 1, "", "compute_loss"], [62, 3, 1, "", "forward"], [62, 3, 1, "", "inference"], [62, 4, 1, "", "nb_inputs"], [62, 3, 1, "", "train_eval"]], "graphnet.models.utils": [[63, 5, 1, "", "calculate_distance_matrix"], [63, 5, 1, "", "calculate_xyzt_homophily"], [63, 5, 1, "", "knn_graph_batch"]], "graphnet.pisa": [[65, 0, 0, "-", "fitting"], [66, 0, 0, "-", "plotting"]], "graphnet.pisa.fitting": [[65, 1, 1, "", "ContourFitter"], [65, 1, 1, "", "WeightFitter"], [65, 5, 1, "", "config_updater"]], "graphnet.pisa.fitting.ContourFitter": [[65, 3, 1, "", "fit_1d_contour"], [65, 3, 1, "", "fit_2d_contour"]], "graphnet.pisa.fitting.WeightFitter": [[65, 3, 1, "", "fit_weights"]], "graphnet.pisa.plotting": [[66, 5, 1, "", "plot_1D_contour"], [66, 5, 1, "", "plot_2D_contour"], [66, 5, 1, "", "read_entry"]], "graphnet.training": [[68, 0, 0, "-", "callbacks"], [69, 0, 0, "-", "labels"], [70, 0, 0, "-", "loss_functions"], [71, 0, 0, "-", "utils"], [72, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[68, 1, 1, "", "PiecewiseLinearLR"], [68, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[68, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[68, 3, 1, "", "get_metrics"], [68, 3, 1, "", "init_predict_tqdm"], [68, 3, 1, "", "init_test_tqdm"], [68, 3, 1, "", "init_train_tqdm"], [68, 3, 1, "", "init_validation_tqdm"], [68, 3, 1, "", "on_train_epoch_end"], [68, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[69, 1, 1, "", "Direction"], [69, 1, 1, "", "Label"]], "graphnet.training.loss_functions": [[70, 1, 1, "", "BinaryCrossEntropyLoss"], [70, 1, 1, "", "CrossEntropyLoss"], [70, 1, 1, "", "EuclideanDistanceLoss"], [70, 1, 1, "", "LogCMK"], [70, 1, 1, "", "LogCoshLoss"], [70, 1, 1, "", "LossFunction"], [70, 1, 1, "", "MSELoss"], [70, 1, 1, "", "RMSELoss"], [70, 1, 1, "", "VonMisesFisher2DLoss"], [70, 1, 1, "", "VonMisesFisher3DLoss"], [70, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[70, 3, 1, "", "backward"], [70, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[70, 3, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[70, 3, 1, "", "log_cmk"], [70, 3, 1, "", "log_cmk_approx"], [70, 3, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[71, 5, 1, "", "collate_fn"], [71, 5, 1, "", "get_predictions"], [71, 5, 1, "", "make_dataloader"], [71, 5, 1, "", "make_train_validation_dataloader"], [71, 5, 1, "", "save_results"]], "graphnet.training.weight_fitting": [[72, 1, 1, "", "BjoernLow"], [72, 1, 1, "", "Uniform"], [72, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[72, 3, 1, "", "fit"]], "graphnet.utilities": [[74, 0, 0, "-", "argparse"], [75, 0, 0, "-", "config"], [82, 0, 0, "-", "decorators"], [83, 0, 0, "-", "filesys"], [84, 0, 0, "-", "imports"], [85, 0, 0, "-", "logging"], [86, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[74, 1, 1, "", "ArgumentParser"], [74, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[74, 2, 1, "", "standard_arguments"], [74, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[74, 3, 1, "", "contains"], [74, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[76, 0, 0, "-", "base_config"], [77, 0, 0, "-", "configurable"], [78, 0, 0, "-", "dataset_config"], [79, 0, 0, "-", "model_config"], [80, 0, 0, "-", "parsing"], [81, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[76, 1, 1, "", "BaseConfig"], [76, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[76, 3, 1, "", "as_dict"], [76, 3, 1, "", "dump"], [76, 3, 1, "", "load"]], "graphnet.utilities.config.configurable": [[77, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[77, 4, 1, "", "config"], [77, 3, 1, "", "from_config"], [77, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[78, 1, 1, "", "DatasetConfig"], [78, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[78, 2, 1, "", "features"], [78, 2, 1, "", "index_column"], [78, 2, 1, "", "loss_weight_column"], [78, 2, 1, "", "loss_weight_default_value"], [78, 2, 1, "", "loss_weight_table"], [78, 2, 1, "", "node_truth"], [78, 2, 1, "", "node_truth_table"], [78, 2, 1, "", "path"], [78, 2, 1, "", "pulsemaps"], [78, 2, 1, "", "seed"], [78, 2, 1, "", "selection"], [78, 2, 1, "", "string_selection"], [78, 2, 1, "", "truth"], [78, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[79, 1, 1, "", "ModelConfig"], [79, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[79, 2, 1, "", "arguments"], [79, 3, 1, "", "as_dict"], [79, 2, 1, "", "class_name"]], "graphnet.utilities.config.parsing": [[80, 5, 1, "", "get_all_grapnet_classes"], [80, 5, 1, "", "get_graphnet_classes"], [80, 5, 1, "", "is_graphnet_class"], [80, 5, 1, "", "is_graphnet_module"], [80, 5, 1, "", "list_all_submodules"], [80, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[81, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[81, 2, 1, "", "dataloader"], [81, 2, 1, "", "early_stopping_patience"], [81, 2, 1, "", "fit"], [81, 2, 1, "", "target"]], "graphnet.utilities.filesys": [[83, 5, 1, "", "find_i3_files"], [83, 5, 1, "", "has_extension"], [83, 5, 1, "", "is_gcd_file"], [83, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[84, 5, 1, "", "has_icecube_package"], [84, 5, 1, "", "has_pisa_package"], [84, 5, 1, "", "has_torch_package"], [84, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[85, 1, 1, "", "Logger"], [85, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[85, 3, 1, "", "critical"], [85, 3, 1, "", "debug"], [85, 3, 1, "", "error"], [85, 4, 1, "", "file_handlers"], [85, 4, 1, "", "handlers"], [85, 3, 1, "", "info"], [85, 3, 1, "", "setLevel"], [85, 4, 1, "", "stream_handlers"], [85, 3, 1, "", "warning"], [85, 3, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[85, 3, 1, "", "filter"], [85, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[86, 5, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": [0, 89], "impact": [0, 89], "usag": [0, 89], "acknowledg": [0, 89], "api": 1, "constant": [2, 4], "data": 3, "dataconvert": 5, "dataload": 6, "dataset": 7, "extractor": 8, "i3extractor": 9, "i3featureextractor": 10, "i3genericextractor": 11, "i3hybridrecoextractor": 12, "i3ntmuonlabelsextractor": 13, "i3particleextractor": 14, "i3pisaextractor": 15, "i3retroextractor": 16, "i3splinempeextractor": 17, "i3truthextractor": 18, "i3tumextractor": 19, "util": [20, 34, 63, 71, 73], "collect": 21, "frame": 22, "type": 23, "parquet": 24, "parquet_dataconvert": 25, "parquet_dataset": 26, "pipelin": 27, "sqlite": 28, "sqlite_dataconvert": 29, "sqlite_dataset": 30, "sqlite_dataset_perturb": 31, "sqlite_select": 32, "sqlite_util": 33, "parquet_to_sqlit": 35, "random": 36, "string_selection_resolv": 37, "deploy": [38, 40], "i3modul": 39, "graphnet_modul": 41, "model": [42, 57], "coarsen": 43, "compon": 44, "layer": 45, "pool": 46, "detector": [47, 48], "icecub": 49, "prometheu": 50, "gnn": [51, 55], "convnet": 52, "dynedg": 53, "dynedge_jinst": 54, "graph_build": 56, "standard_model": 58, "task": [59, 62], "classif": 60, "reconstruct": 61, "pisa": 64, "fit": 65, "plot": 66, "train": 67, "callback": 68, "label": 69, "loss_funct": 70, "weight_fit": 72, "argpars": 74, "config": 75, "base_config": 76, "configur": 77, "dataset_config": 78, "model_config": 79, "pars": 80, "training_config": 81, "decor": 82, "filesi": 83, "import": 84, "log": 85, "math": 86, "src": 87, "contribut": 88, "github": 88, "issu": 88, "pull": 88, "request": 88, "convent": 88, "code": 88, "qualiti": 88, "instal": 90, "icetrai": 90, "stand": 90, "alon": 90, "run": 90, "docker": 90}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"About": [[0, "about"], [89, "about"]], "Impact": [[0, "impact"], [89, "impact"]], "Usage": [[0, "usage"], [89, "usage"]], "Acknowledgements": [[0, "acknowledgements"], [89, "acknowledgements"]], "API": [[1, "module-graphnet"]], "constants": [[2, "module-graphnet.constants"], [4, "module-graphnet.data.constants"]], "data": [[3, "module-graphnet.data"]], "dataconverter": [[5, "module-graphnet.data.dataconverter"]], "dataloader": [[6, "module-graphnet.data.dataloader"]], "dataset": [[7, "module-graphnet.data.dataset"]], "extractors": [[8, "module-graphnet.data.extractors"]], "i3extractor": [[9, "module-graphnet.data.extractors.i3extractor"]], "i3featureextractor": [[10, "module-graphnet.data.extractors.i3featureextractor"]], "i3genericextractor": [[11, "module-graphnet.data.extractors.i3genericextractor"]], "i3hybridrecoextractor": [[12, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "i3ntmuonlabelsextractor": [[13, "module-graphnet.data.extractors.i3ntmuonlabelsextractor"]], "i3particleextractor": [[14, "module-graphnet.data.extractors.i3particleextractor"]], "i3pisaextractor": [[15, "module-graphnet.data.extractors.i3pisaextractor"]], "i3retroextractor": [[16, "module-graphnet.data.extractors.i3retroextractor"]], "i3splinempeextractor": [[17, "module-graphnet.data.extractors.i3splinempeextractor"]], "i3truthextractor": [[18, "module-graphnet.data.extractors.i3truthextractor"]], "i3tumextractor": [[19, "module-graphnet.data.extractors.i3tumextractor"]], "utilities": [[20, "module-graphnet.data.extractors.utilities"], [34, "module-graphnet.data.utilities"], [73, "module-graphnet.utilities"]], "collections": [[21, "module-graphnet.data.extractors.utilities.collections"]], "frames": [[22, "module-graphnet.data.extractors.utilities.frames"]], "types": [[23, "module-graphnet.data.extractors.utilities.types"]], "parquet": [[24, "module-graphnet.data.parquet"]], "parquet_dataconverter": [[25, "module-graphnet.data.parquet.parquet_dataconverter"]], "parquet_dataset": [[26, "module-graphnet.data.parquet.parquet_dataset"]], "pipeline": [[27, "module-graphnet.data.pipeline"]], "sqlite": [[28, "module-graphnet.data.sqlite"]], "sqlite_dataconverter": [[29, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "sqlite_dataset": [[30, "module-graphnet.data.sqlite.sqlite_dataset"]], "sqlite_dataset_perturbed": [[31, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "sqlite_selection": [[32, "module-graphnet.data.sqlite.sqlite_selection"]], "sqlite_utilities": [[33, "module-graphnet.data.sqlite.sqlite_utilities"]], "parquet_to_sqlite": [[35, "module-graphnet.data.utilities.parquet_to_sqlite"]], "random": [[36, "module-graphnet.data.utilities.random"]], "string_selection_resolver": [[37, "module-graphnet.data.utilities.string_selection_resolver"]], "deployment": [[38, "module-graphnet.deployment"]], "i3modules": [[39, "i3modules"]], "deployer": [[40, "deployer"]], "graphnet_module": [[41, "module-graphnet.deployment.i3modules.graphnet_module"]], "models": [[42, "module-graphnet.models"]], "coarsening": [[43, "module-graphnet.models.coarsening"]], "components": [[44, "module-graphnet.models.components"]], "layers": [[45, "module-graphnet.models.components.layers"]], "pool": [[46, "module-graphnet.models.components.pool"]], "detector": [[47, "module-graphnet.models.detector"], [48, "module-graphnet.models.detector.detector"]], "icecube": [[49, "module-graphnet.models.detector.icecube"]], "prometheus": [[50, "module-graphnet.models.detector.prometheus"]], "gnn": [[51, "module-graphnet.models.gnn"], [55, "module-graphnet.models.gnn.gnn"]], "convnet": [[52, "module-graphnet.models.gnn.convnet"]], "dynedge": [[53, "module-graphnet.models.gnn.dynedge"]], "dynedge_jinst": [[54, "module-graphnet.models.gnn.dynedge_jinst"]], "graph_builders": [[56, "module-graphnet.models.graph_builders"]], "model": [[57, "module-graphnet.models.model"]], "standard_model": [[58, "module-graphnet.models.standard_model"]], "task": [[59, "module-graphnet.models.task"], [62, "module-graphnet.models.task.task"]], "classification": [[60, "module-graphnet.models.task.classification"]], "reconstruction": [[61, "module-graphnet.models.task.reconstruction"]], "utils": [[63, "module-graphnet.models.utils"], [71, "module-graphnet.training.utils"]], "pisa": [[64, "module-graphnet.pisa"]], "fitting": [[65, "module-graphnet.pisa.fitting"]], "plotting": [[66, "module-graphnet.pisa.plotting"]], "training": [[67, "module-graphnet.training"]], "callbacks": [[68, "module-graphnet.training.callbacks"]], "labels": [[69, "module-graphnet.training.labels"]], "loss_functions": [[70, "module-graphnet.training.loss_functions"]], "weight_fitting": [[72, "module-graphnet.training.weight_fitting"]], "argparse": [[74, "module-graphnet.utilities.argparse"]], "config": [[75, "module-graphnet.utilities.config"]], "base_config": [[76, "module-graphnet.utilities.config.base_config"]], "configurable": [[77, "module-graphnet.utilities.config.configurable"]], "dataset_config": [[78, "module-graphnet.utilities.config.dataset_config"]], "model_config": [[79, "module-graphnet.utilities.config.model_config"]], "parsing": [[80, "module-graphnet.utilities.config.parsing"]], "training_config": [[81, "module-graphnet.utilities.config.training_config"]], "decorators": [[82, "module-graphnet.utilities.decorators"]], "filesys": [[83, "module-graphnet.utilities.filesys"]], "imports": [[84, "module-graphnet.utilities.imports"]], "logging": [[85, "module-graphnet.utilities.logging"]], "maths": [[86, "module-graphnet.utilities.maths"]], "src": [[87, "src"]], "Contribute": [[88, "contribute"]], "GitHub issues": [[88, "github-issues"]], "Pull requests": [[88, "pull-requests"]], "Conventions": [[88, "conventions"]], "Code quality": [[88, "code-quality"]], "Install": [[90, "install"]], "Installing with IceTray": [[90, "installing-with-icetray"]], "Installing stand-alone": [[90, "installing-stand-alone"]], "Running in Docker": [[90, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"]], "module": [[1, "module-graphnet"], [2, "module-graphnet.constants"], [3, "module-graphnet.data"], [4, "module-graphnet.data.constants"], [5, "module-graphnet.data.dataconverter"], [6, "module-graphnet.data.dataloader"], [7, "module-graphnet.data.dataset"], [8, "module-graphnet.data.extractors"], [9, "module-graphnet.data.extractors.i3extractor"], [10, "module-graphnet.data.extractors.i3featureextractor"], [11, "module-graphnet.data.extractors.i3genericextractor"], [12, "module-graphnet.data.extractors.i3hybridrecoextractor"], [13, "module-graphnet.data.extractors.i3ntmuonlabelsextractor"], [14, "module-graphnet.data.extractors.i3particleextractor"], [15, "module-graphnet.data.extractors.i3pisaextractor"], [16, "module-graphnet.data.extractors.i3retroextractor"], [17, "module-graphnet.data.extractors.i3splinempeextractor"], [18, "module-graphnet.data.extractors.i3truthextractor"], [19, "module-graphnet.data.extractors.i3tumextractor"], [20, "module-graphnet.data.extractors.utilities"], [21, "module-graphnet.data.extractors.utilities.collections"], [22, "module-graphnet.data.extractors.utilities.frames"], [23, "module-graphnet.data.extractors.utilities.types"], [24, "module-graphnet.data.parquet"], [25, "module-graphnet.data.parquet.parquet_dataconverter"], [26, "module-graphnet.data.parquet.parquet_dataset"], [27, "module-graphnet.data.pipeline"], [28, "module-graphnet.data.sqlite"], [29, "module-graphnet.data.sqlite.sqlite_dataconverter"], [30, "module-graphnet.data.sqlite.sqlite_dataset"], [31, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"], [32, "module-graphnet.data.sqlite.sqlite_selection"], [33, "module-graphnet.data.sqlite.sqlite_utilities"], [34, "module-graphnet.data.utilities"], [35, "module-graphnet.data.utilities.parquet_to_sqlite"], [36, "module-graphnet.data.utilities.random"], [37, "module-graphnet.data.utilities.string_selection_resolver"], [38, "module-graphnet.deployment"], [41, "module-graphnet.deployment.i3modules.graphnet_module"], [42, "module-graphnet.models"], [43, "module-graphnet.models.coarsening"], [44, "module-graphnet.models.components"], [45, "module-graphnet.models.components.layers"], [46, "module-graphnet.models.components.pool"], [47, "module-graphnet.models.detector"], [48, "module-graphnet.models.detector.detector"], [49, "module-graphnet.models.detector.icecube"], [50, "module-graphnet.models.detector.prometheus"], [51, "module-graphnet.models.gnn"], [52, "module-graphnet.models.gnn.convnet"], [53, "module-graphnet.models.gnn.dynedge"], [54, "module-graphnet.models.gnn.dynedge_jinst"], [55, "module-graphnet.models.gnn.gnn"], [56, "module-graphnet.models.graph_builders"], [57, "module-graphnet.models.model"], [58, "module-graphnet.models.standard_model"], [59, "module-graphnet.models.task"], [60, "module-graphnet.models.task.classification"], [61, "module-graphnet.models.task.reconstruction"], [62, "module-graphnet.models.task.task"], [63, "module-graphnet.models.utils"], [64, "module-graphnet.pisa"], [65, "module-graphnet.pisa.fitting"], [66, "module-graphnet.pisa.plotting"], [67, "module-graphnet.training"], [68, "module-graphnet.training.callbacks"], [69, "module-graphnet.training.labels"], [70, "module-graphnet.training.loss_functions"], [71, "module-graphnet.training.utils"], [72, "module-graphnet.training.weight_fitting"], [73, "module-graphnet.utilities"], [74, "module-graphnet.utilities.argparse"], [75, "module-graphnet.utilities.config"], [76, "module-graphnet.utilities.config.base_config"], [77, "module-graphnet.utilities.config.configurable"], [78, "module-graphnet.utilities.config.dataset_config"], [79, "module-graphnet.utilities.config.model_config"], [80, "module-graphnet.utilities.config.parsing"], [81, "module-graphnet.utilities.config.training_config"], [82, "module-graphnet.utilities.decorators"], [83, "module-graphnet.utilities.filesys"], [84, "module-graphnet.utilities.imports"], [85, "module-graphnet.utilities.logging"], [86, "module-graphnet.utilities.maths"]], "graphnet.constants": [[2, "module-graphnet.constants"]], "graphnet.data": [[3, "module-graphnet.data"]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE"]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES"]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86"]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE"]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE"]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS"]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS"]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE"]], "graphnet.data.constants": [[4, "module-graphnet.data.constants"]], "dataconverter (class in graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.DataConverter"]], "fileset (class in graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.FileSet"]], "cache_output_files() (in module graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.cache_output_files"]], "execute() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.execute"]], "file_suffix (graphnet.data.dataconverter.dataconverter property)": [[5, "graphnet.data.dataconverter.DataConverter.file_suffix"]], "gcd_file (graphnet.data.dataconverter.fileset attribute)": [[5, "graphnet.data.dataconverter.FileSet.gcd_file"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data.dataconverter": [[5, "module-graphnet.data.dataconverter"]], "i3_file (graphnet.data.dataconverter.fileset attribute)": [[5, "graphnet.data.dataconverter.FileSet.i3_file"]], "init_global_index() (in module graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.merge_files"]], "save_data() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.save_data"]], "dataloader (class in graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.DataLoader"]], "collate_fn() (in module graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.collate_fn"]], "do_shuffle() (in module graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.do_shuffle"]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[6, "graphnet.data.dataloader.DataLoader.from_dataset_config"]], "graphnet.data.dataloader": [[6, "module-graphnet.data.dataloader"]], "columnmissingexception": [[7, "graphnet.data.dataset.ColumnMissingException"]], "dataset (class in graphnet.data.dataset)": [[7, "graphnet.data.dataset.Dataset"]], "ensembledataset (class in graphnet.data.dataset)": [[7, "graphnet.data.dataset.EnsembleDataset"]], "add_label() (graphnet.data.dataset.dataset method)": [[7, "graphnet.data.dataset.Dataset.add_label"]], "concatenate() (graphnet.data.dataset.dataset class method)": [[7, "graphnet.data.dataset.Dataset.concatenate"]], "from_config() (graphnet.data.dataset.dataset class method)": [[7, "graphnet.data.dataset.Dataset.from_config"]], "graphnet.data.dataset": [[7, "module-graphnet.data.dataset"]], "path (graphnet.data.dataset.dataset property)": [[7, "graphnet.data.dataset.Dataset.path"]], "query_table() (graphnet.data.dataset.dataset method)": [[7, "graphnet.data.dataset.Dataset.query_table"]], "truth_table (graphnet.data.dataset.dataset property)": [[7, "graphnet.data.dataset.Dataset.truth_table"]], "graphnet.data.extractors": [[8, "module-graphnet.data.extractors"]], "i3extractor (class in graphnet.data.extractors.i3extractor)": [[9, "graphnet.data.extractors.i3extractor.I3Extractor"]], "i3extractorcollection (class in graphnet.data.extractors.i3extractor)": [[9, "graphnet.data.extractors.i3extractor.I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor": [[9, "module-graphnet.data.extractors.i3extractor"]], "name (graphnet.data.extractors.i3extractor.i3extractor property)": [[9, "graphnet.data.extractors.i3extractor.I3Extractor.name"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractor method)": [[9, "graphnet.data.extractors.i3extractor.I3Extractor.set_files"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[9, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.set_files"]], "i3featureextractor (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3featureextractor": [[10, "module-graphnet.data.extractors.i3featureextractor"]], "i3genericextractor (class in graphnet.data.extractors.i3genericextractor)": [[11, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor"]], "graphnet.data.extractors.i3genericextractor": [[11, "module-graphnet.data.extractors.i3genericextractor"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.i3hybridrecoextractor)": [[12, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[12, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.i3ntmuonlabelsextractor)": [[13, "graphnet.data.extractors.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor"]], "graphnet.data.extractors.i3ntmuonlabelsextractor": [[13, "module-graphnet.data.extractors.i3ntmuonlabelsextractor"]], "i3particleextractor (class in graphnet.data.extractors.i3particleextractor)": [[14, "graphnet.data.extractors.i3particleextractor.I3ParticleExtractor"]], "graphnet.data.extractors.i3particleextractor": [[14, "module-graphnet.data.extractors.i3particleextractor"]], "i3pisaextractor (class in graphnet.data.extractors.i3pisaextractor)": [[15, "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor"]], "graphnet.data.extractors.i3pisaextractor": [[15, "module-graphnet.data.extractors.i3pisaextractor"]], "i3retroextractor (class in graphnet.data.extractors.i3retroextractor)": [[16, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor"]], "graphnet.data.extractors.i3retroextractor": [[16, "module-graphnet.data.extractors.i3retroextractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.i3splinempeextractor)": [[17, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3splinempeextractor": [[17, "module-graphnet.data.extractors.i3splinempeextractor"]], "i3truthextractor (class in graphnet.data.extractors.i3truthextractor)": [[18, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor"]], "graphnet.data.extractors.i3truthextractor": [[18, "module-graphnet.data.extractors.i3truthextractor"]], "i3tumextractor (class in graphnet.data.extractors.i3tumextractor)": [[19, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor"]], "graphnet.data.extractors.i3tumextractor": [[19, "module-graphnet.data.extractors.i3tumextractor"]], "graphnet.data.extractors.utilities": [[20, "module-graphnet.data.extractors.utilities"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.utilities.collections)": [[21, "graphnet.data.extractors.utilities.collections.flatten_nested_dictionary"]], "graphnet.data.extractors.utilities.collections": [[21, "module-graphnet.data.extractors.utilities.collections"]], "serialise() (in module graphnet.data.extractors.utilities.collections)": [[21, "graphnet.data.extractors.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.utilities.collections)": [[21, "graphnet.data.extractors.utilities.collections.transpose_list_of_dicts"]], "frame_is_montecarlo() (in module graphnet.data.extractors.utilities.frames)": [[22, "graphnet.data.extractors.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.utilities.frames)": [[22, "graphnet.data.extractors.utilities.frames.frame_is_noise"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.utilities.frames)": [[22, "graphnet.data.extractors.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.frames": [[22, "module-graphnet.data.extractors.utilities.frames"]], "break_cyclic_recursion() (in module graphnet.data.extractors.utilities.types)": [[23, "graphnet.data.extractors.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[23, "graphnet.data.extractors.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[23, "graphnet.data.extractors.utilities.types.cast_pulse_series_to_pure_python"]], "get_member_variables() (in module graphnet.data.extractors.utilities.types)": [[23, "graphnet.data.extractors.utilities.types.get_member_variables"]], "graphnet.data.extractors.utilities.types": [[23, "module-graphnet.data.extractors.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.utilities.types)": [[23, "graphnet.data.extractors.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.utilities.types)": [[23, "graphnet.data.extractors.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.utilities.types)": [[23, "graphnet.data.extractors.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.utilities.types)": [[23, "graphnet.data.extractors.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.utilities.types)": [[23, "graphnet.data.extractors.utilities.types.is_type"]], "graphnet.data.parquet": [[24, "module-graphnet.data.parquet"]], "parquetdataconverter (class in graphnet.data.parquet.parquet_dataconverter)": [[25, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter"]], "file_suffix (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter attribute)": [[25, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.file_suffix"]], "graphnet.data.parquet.parquet_dataconverter": [[25, "module-graphnet.data.parquet.parquet_dataconverter"]], "merge_files() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[25, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.merge_files"]], "save_data() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[25, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.save_data"]], "parquetdataset (class in graphnet.data.parquet.parquet_dataset)": [[26, "graphnet.data.parquet.parquet_dataset.ParquetDataset"]], "graphnet.data.parquet.parquet_dataset": [[26, "module-graphnet.data.parquet.parquet_dataset"]], "query_table() (graphnet.data.parquet.parquet_dataset.parquetdataset method)": [[26, "graphnet.data.parquet.parquet_dataset.ParquetDataset.query_table"]], "insqlitepipeline (class in graphnet.data.pipeline)": [[27, "graphnet.data.pipeline.InSQLitePipeline"]], "graphnet.data.pipeline": [[27, "module-graphnet.data.pipeline"]], "graphnet.data.sqlite": [[28, "module-graphnet.data.sqlite"]], "sqlitedataconverter (class in graphnet.data.sqlite.sqlite_dataconverter)": [[29, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter"]], "any_pulsemap_is_non_empty() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[29, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.any_pulsemap_is_non_empty"]], "construct_dataframe() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[29, "graphnet.data.sqlite.sqlite_dataconverter.construct_dataframe"]], "file_suffix (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter attribute)": [[29, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.file_suffix"]], "graphnet.data.sqlite.sqlite_dataconverter": [[29, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "is_mc_tree() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[29, "graphnet.data.sqlite.sqlite_dataconverter.is_mc_tree"]], "is_pulse_map() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[29, "graphnet.data.sqlite.sqlite_dataconverter.is_pulse_map"]], "merge_files() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[29, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.merge_files"]], "save_data() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[29, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.save_data"]], "sqlitedataset (class in graphnet.data.sqlite.sqlite_dataset)": [[30, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset"]], "graphnet.data.sqlite.sqlite_dataset": [[30, "module-graphnet.data.sqlite.sqlite_dataset"]], "query_table() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[30, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset.query_table"]], "sqlitedatasetperturbed (class in graphnet.data.sqlite.sqlite_dataset_perturbed)": [[31, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[31, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "get_desired_event_numbers() (in module graphnet.data.sqlite.sqlite_selection)": [[32, "graphnet.data.sqlite.sqlite_selection.get_desired_event_numbers"]], "get_equal_proportion_neutrino_indices() (in module graphnet.data.sqlite.sqlite_selection)": [[32, "graphnet.data.sqlite.sqlite_selection.get_equal_proportion_neutrino_indices"]], "get_even_dbang_selection() (in module graphnet.data.sqlite.sqlite_selection)": [[32, "graphnet.data.sqlite.sqlite_selection.get_even_dbang_selection"]], "get_even_signal_background_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[32, "graphnet.data.sqlite.sqlite_selection.get_even_signal_background_indicies"]], "get_even_track_cascade_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[32, "graphnet.data.sqlite.sqlite_selection.get_even_track_cascade_indicies"]], "graphnet.data.sqlite.sqlite_selection": [[32, "module-graphnet.data.sqlite.sqlite_selection"]], "attach_index() (in module graphnet.data.sqlite.sqlite_utilities)": [[33, "graphnet.data.sqlite.sqlite_utilities.attach_index"]], "create_table() (in module graphnet.data.sqlite.sqlite_utilities)": [[33, "graphnet.data.sqlite.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[33, "graphnet.data.sqlite.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[33, "graphnet.data.sqlite.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[33, "graphnet.data.sqlite.sqlite_utilities.database_table_exists"]], "graphnet.data.sqlite.sqlite_utilities": [[33, "module-graphnet.data.sqlite.sqlite_utilities"]], "run_sql_code() (in module graphnet.data.sqlite.sqlite_utilities)": [[33, "graphnet.data.sqlite.sqlite_utilities.run_sql_code"]], "save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[33, "graphnet.data.sqlite.sqlite_utilities.save_to_sql"]], "graphnet.data.utilities": [[34, "module-graphnet.data.utilities"]], "parquettosqliteconverter (class in graphnet.data.utilities.parquet_to_sqlite)": [[35, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite": [[35, "module-graphnet.data.utilities.parquet_to_sqlite"]], "run() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[35, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.run"]], "graphnet.data.utilities.random": [[36, "module-graphnet.data.utilities.random"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[36, "graphnet.data.utilities.random.pairwise_shuffle"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[37, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver": [[37, "module-graphnet.data.utilities.string_selection_resolver"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[37, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "graphnet.deployment": [[38, "module-graphnet.deployment"]], "graphneti3module (class in graphnet.deployment.i3modules.graphnet_module)": [[41, "graphnet.deployment.i3modules.graphnet_module.GraphNeTI3Module"]], "i3inferencemodule (class in graphnet.deployment.i3modules.graphnet_module)": [[41, "graphnet.deployment.i3modules.graphnet_module.I3InferenceModule"]], "i3pulsecleanermodule (class in graphnet.deployment.i3modules.graphnet_module)": [[41, "graphnet.deployment.i3modules.graphnet_module.I3PulseCleanerModule"]], "graphnet.deployment.i3modules.graphnet_module": [[41, "module-graphnet.deployment.i3modules.graphnet_module"]], "graphnet.models": [[42, "module-graphnet.models"]], "attributecoarsening (class in graphnet.models.coarsening)": [[43, "graphnet.models.coarsening.AttributeCoarsening"]], "coarsening (class in graphnet.models.coarsening)": [[43, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[43, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[43, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[43, "graphnet.models.coarsening.DOMCoarsening"]], "forward() (graphnet.models.coarsening.coarsening method)": [[43, "graphnet.models.coarsening.Coarsening.forward"]], "graphnet.models.coarsening": [[43, "module-graphnet.models.coarsening"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[43, "graphnet.models.coarsening.Coarsening.reduce_options"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[43, "graphnet.models.coarsening.unbatch_edge_index"]], "graphnet.models.components": [[44, "module-graphnet.models.components"]], "dynedgeconv (class in graphnet.models.components.layers)": [[45, "graphnet.models.components.layers.DynEdgeConv"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[45, "graphnet.models.components.layers.DynEdgeConv.forward"]], "graphnet.models.components.layers": [[45, "module-graphnet.models.components.layers"]], "graphnet.models.components.pool": [[46, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[46, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[46, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[46, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[46, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[46, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[46, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[46, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[46, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[46, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[46, "graphnet.models.components.pool.sum_pool_x"]], "graphnet.models.detector": [[47, "module-graphnet.models.detector"]], "detector (class in graphnet.models.detector.detector)": [[48, "graphnet.models.detector.detector.Detector"]], "features (graphnet.models.detector.detector.detector property)": [[48, "graphnet.models.detector.detector.Detector.features"]], "forward() (graphnet.models.detector.detector.detector method)": [[48, "graphnet.models.detector.detector.Detector.forward"]], "graphnet.models.detector.detector": [[48, "module-graphnet.models.detector.detector"]], "nb_inputs (graphnet.models.detector.detector.detector property)": [[48, "graphnet.models.detector.detector.Detector.nb_inputs"]], "nb_outputs (graphnet.models.detector.detector.detector property)": [[48, "graphnet.models.detector.detector.Detector.nb_outputs"]], "icecube86 (class in graphnet.models.detector.icecube)": [[49, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[49, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[49, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[49, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "icecubeupgrade_v2 (class in graphnet.models.detector.icecube)": [[49, "graphnet.models.detector.icecube.IceCubeUpgrade_V2"]], "features (graphnet.models.detector.icecube.icecube86 attribute)": [[49, "graphnet.models.detector.icecube.IceCube86.features"]], "features (graphnet.models.detector.icecube.icecubedeepcore attribute)": [[49, "graphnet.models.detector.icecube.IceCubeDeepCore.features"]], "features (graphnet.models.detector.icecube.icecubekaggle attribute)": [[49, "graphnet.models.detector.icecube.IceCubeKaggle.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[49, "graphnet.models.detector.icecube.IceCubeUpgrade.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade_v2 attribute)": [[49, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.features"]], "graphnet.models.detector.icecube": [[49, "module-graphnet.models.detector.icecube"]], "nb_outputs (graphnet.models.detector.icecube.icecubeupgrade_v2 property)": [[49, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.nb_outputs"]], "prometheus (class in graphnet.models.detector.prometheus)": [[50, "graphnet.models.detector.prometheus.Prometheus"]], "features (graphnet.models.detector.prometheus.prometheus attribute)": [[50, "graphnet.models.detector.prometheus.Prometheus.features"]], "graphnet.models.detector.prometheus": [[50, "module-graphnet.models.detector.prometheus"]], "graphnet.models.gnn": [[51, "module-graphnet.models.gnn"]], "convnet (class in graphnet.models.gnn.convnet)": [[52, "graphnet.models.gnn.convnet.ConvNet"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[52, "graphnet.models.gnn.convnet.ConvNet.forward"]], "graphnet.models.gnn.convnet": [[52, "module-graphnet.models.gnn.convnet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[53, "graphnet.models.gnn.dynedge.DynEdge"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[53, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "graphnet.models.gnn.dynedge": [[53, "module-graphnet.models.gnn.dynedge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[54, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[54, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "graphnet.models.gnn.dynedge_jinst": [[54, "module-graphnet.models.gnn.dynedge_jinst"]], "gnn (class in graphnet.models.gnn.gnn)": [[55, "graphnet.models.gnn.gnn.GNN"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[55, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn.gnn": [[55, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[55, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[55, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "euclideangraphbuilder (class in graphnet.models.graph_builders)": [[56, "graphnet.models.graph_builders.EuclideanGraphBuilder"]], "graphbuilder (class in graphnet.models.graph_builders)": [[56, "graphnet.models.graph_builders.GraphBuilder"]], "knngraphbuilder (class in graphnet.models.graph_builders)": [[56, "graphnet.models.graph_builders.KNNGraphBuilder"]], "radialgraphbuilder (class in graphnet.models.graph_builders)": [[56, "graphnet.models.graph_builders.RadialGraphBuilder"]], "forward() (graphnet.models.graph_builders.euclideangraphbuilder method)": [[56, "graphnet.models.graph_builders.EuclideanGraphBuilder.forward"]], "forward() (graphnet.models.graph_builders.knngraphbuilder method)": [[56, "graphnet.models.graph_builders.KNNGraphBuilder.forward"]], "forward() (graphnet.models.graph_builders.radialgraphbuilder method)": [[56, "graphnet.models.graph_builders.RadialGraphBuilder.forward"]], "graphnet.models.graph_builders": [[56, "module-graphnet.models.graph_builders"]], "model (class in graphnet.models.model)": [[57, "graphnet.models.model.Model"]], "fit() (graphnet.models.model.model method)": [[57, "graphnet.models.model.Model.fit"]], "forward() (graphnet.models.model.model method)": [[57, "graphnet.models.model.Model.forward"]], "from_config() (graphnet.models.model.model class method)": [[57, "graphnet.models.model.Model.from_config"]], "graphnet.models.model": [[57, "module-graphnet.models.model"]], "load() (graphnet.models.model.model class method)": [[57, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[57, "graphnet.models.model.Model.load_state_dict"]], "predict() (graphnet.models.model.model method)": [[57, "graphnet.models.model.Model.predict"]], "predict_as_dataframe() (graphnet.models.model.model method)": [[57, "graphnet.models.model.Model.predict_as_dataframe"]], "save() (graphnet.models.model.model method)": [[57, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[57, "graphnet.models.model.Model.save_state_dict"]], "standardmodel (class in graphnet.models.standard_model)": [[58, "graphnet.models.standard_model.StandardModel"]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[58, "graphnet.models.standard_model.StandardModel.compute_loss"]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[58, "graphnet.models.standard_model.StandardModel.configure_optimizers"]], "forward() (graphnet.models.standard_model.standardmodel method)": [[58, "graphnet.models.standard_model.StandardModel.forward"]], "graphnet.models.standard_model": [[58, "module-graphnet.models.standard_model"]], "inference() (graphnet.models.standard_model.standardmodel method)": [[58, "graphnet.models.standard_model.StandardModel.inference"]], "predict() (graphnet.models.standard_model.standardmodel method)": [[58, "graphnet.models.standard_model.StandardModel.predict"]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[58, "graphnet.models.standard_model.StandardModel.shared_step"]], "train() (graphnet.models.standard_model.standardmodel method)": [[58, "graphnet.models.standard_model.StandardModel.train"]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[58, "graphnet.models.standard_model.StandardModel.training_step"]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[58, "graphnet.models.standard_model.StandardModel.validation_step"]], "graphnet.models.task": [[59, "module-graphnet.models.task"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[60, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[60, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[60, "graphnet.models.task.classification.MulticlassClassificationTask"]], "graphnet.models.task.classification": [[60, "module-graphnet.models.task.classification"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[60, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[60, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[61, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[61, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[61, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[61, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[61, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[61, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[61, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[61, "graphnet.models.task.reconstruction.PositionReconstruction"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[61, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[61, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[61, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[61, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction": [[61, "module-graphnet.models.task.reconstruction"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[61, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[61, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[61, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[61, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[61, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[61, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[61, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[61, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[61, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[61, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[61, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[61, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "identitytask (class in graphnet.models.task.task)": [[62, "graphnet.models.task.task.IdentityTask"]], "task (class in graphnet.models.task.task)": [[62, "graphnet.models.task.task.Task"]], "compute_loss() (graphnet.models.task.task.task method)": [[62, "graphnet.models.task.task.Task.compute_loss"]], "forward() (graphnet.models.task.task.task method)": [[62, "graphnet.models.task.task.Task.forward"]], "graphnet.models.task.task": [[62, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[62, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[62, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[62, "graphnet.models.task.task.Task.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[62, "graphnet.models.task.task.Task.train_eval"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[63, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[63, "graphnet.models.utils.calculate_xyzt_homophily"]], "graphnet.models.utils": [[63, "module-graphnet.models.utils"]], "knn_graph_batch() (in module graphnet.models.utils)": [[63, "graphnet.models.utils.knn_graph_batch"]], "graphnet.pisa": [[64, "module-graphnet.pisa"]], "contourfitter (class in graphnet.pisa.fitting)": [[65, "graphnet.pisa.fitting.ContourFitter"]], "weightfitter (class in graphnet.pisa.fitting)": [[65, "graphnet.pisa.fitting.WeightFitter"]], "config_updater() (in module graphnet.pisa.fitting)": [[65, "graphnet.pisa.fitting.config_updater"]], "fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[65, "graphnet.pisa.fitting.ContourFitter.fit_1d_contour"]], "fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[65, "graphnet.pisa.fitting.ContourFitter.fit_2d_contour"]], "fit_weights() (graphnet.pisa.fitting.weightfitter method)": [[65, "graphnet.pisa.fitting.WeightFitter.fit_weights"]], "graphnet.pisa.fitting": [[65, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[66, "module-graphnet.pisa.plotting"]], "plot_1d_contour() (in module graphnet.pisa.plotting)": [[66, "graphnet.pisa.plotting.plot_1D_contour"]], "plot_2d_contour() (in module graphnet.pisa.plotting)": [[66, "graphnet.pisa.plotting.plot_2D_contour"]], "read_entry() (in module graphnet.pisa.plotting)": [[66, "graphnet.pisa.plotting.read_entry"]], "graphnet.training": [[67, "module-graphnet.training"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[68, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[68, "graphnet.training.callbacks.ProgressBar"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[68, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[68, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "graphnet.training.callbacks": [[68, "module-graphnet.training.callbacks"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[68, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[68, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[68, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[68, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[68, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[68, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "direction (class in graphnet.training.labels)": [[69, "graphnet.training.labels.Direction"]], "label (class in graphnet.training.labels)": [[69, "graphnet.training.labels.Label"]], "graphnet.training.labels": [[69, "module-graphnet.training.labels"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[70, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[70, "graphnet.training.loss_functions.CrossEntropyLoss"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[70, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "logcmk (class in graphnet.training.loss_functions)": [[70, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[70, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[70, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[70, "graphnet.training.loss_functions.MSELoss"]], "rmseloss (class in graphnet.training.loss_functions)": [[70, "graphnet.training.loss_functions.RMSELoss"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[70, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[70, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[70, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[70, "graphnet.training.loss_functions.LogCMK.backward"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[70, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[70, "graphnet.training.loss_functions.LossFunction.forward"]], "graphnet.training.loss_functions": [[70, "module-graphnet.training.loss_functions"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[70, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[70, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[70, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "collate_fn() (in module graphnet.training.utils)": [[71, "graphnet.training.utils.collate_fn"]], "get_predictions() (in module graphnet.training.utils)": [[71, "graphnet.training.utils.get_predictions"]], "graphnet.training.utils": [[71, "module-graphnet.training.utils"]], "make_dataloader() (in module graphnet.training.utils)": [[71, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[71, "graphnet.training.utils.make_train_validation_dataloader"]], "save_results() (in module graphnet.training.utils)": [[71, "graphnet.training.utils.save_results"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[72, "graphnet.training.weight_fitting.BjoernLow"]], "uniform (class in graphnet.training.weight_fitting)": [[72, "graphnet.training.weight_fitting.Uniform"]], "weightfitter (class in graphnet.training.weight_fitting)": [[72, "graphnet.training.weight_fitting.WeightFitter"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[72, "graphnet.training.weight_fitting.WeightFitter.fit"]], "graphnet.training.weight_fitting": [[72, "module-graphnet.training.weight_fitting"]], "graphnet.utilities": [[73, "module-graphnet.utilities"]], "argumentparser (class in graphnet.utilities.argparse)": [[74, "graphnet.utilities.argparse.ArgumentParser"]], "options (class in graphnet.utilities.argparse)": [[74, "graphnet.utilities.argparse.Options"]], "contains() (graphnet.utilities.argparse.options method)": [[74, "graphnet.utilities.argparse.Options.contains"]], "graphnet.utilities.argparse": [[74, "module-graphnet.utilities.argparse"]], "pop_default() (graphnet.utilities.argparse.options method)": [[74, "graphnet.utilities.argparse.Options.pop_default"]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[74, "graphnet.utilities.argparse.ArgumentParser.standard_arguments"]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[74, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments"]], "graphnet.utilities.config": [[75, "module-graphnet.utilities.config"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[76, "graphnet.utilities.config.base_config.BaseConfig"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[76, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[76, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[76, "graphnet.utilities.config.base_config.get_all_argument_values"]], "graphnet.utilities.config.base_config": [[76, "module-graphnet.utilities.config.base_config"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[76, "graphnet.utilities.config.base_config.BaseConfig.load"]], "configurable (class in graphnet.utilities.config.configurable)": [[77, "graphnet.utilities.config.configurable.Configurable"]], "config (graphnet.utilities.config.configurable.configurable property)": [[77, "graphnet.utilities.config.configurable.Configurable.config"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[77, "graphnet.utilities.config.configurable.Configurable.from_config"]], "graphnet.utilities.config.configurable": [[77, "module-graphnet.utilities.config.configurable"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[77, "graphnet.utilities.config.configurable.Configurable.save_config"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[78, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[78, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "graphnet.utilities.config.dataset_config": [[78, "module-graphnet.utilities.config.dataset_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[78, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[78, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[78, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[78, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[78, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[78, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[78, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[78, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[78, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[78, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[78, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[78, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[78, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[78, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[79, "graphnet.utilities.config.model_config.ModelConfig"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[79, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[79, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[79, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "graphnet.utilities.config.model_config": [[79, "module-graphnet.utilities.config.model_config"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[79, "graphnet.utilities.config.model_config.save_model_config"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[80, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[80, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config.parsing": [[80, "module-graphnet.utilities.config.parsing"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[80, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[80, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[80, "graphnet.utilities.config.parsing.list_all_submodules"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[80, "graphnet.utilities.config.parsing.traverse_and_apply"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[81, "graphnet.utilities.config.training_config.TrainingConfig"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[81, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[81, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[81, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "graphnet.utilities.config.training_config": [[81, "module-graphnet.utilities.config.training_config"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[81, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "graphnet.utilities.decorators": [[82, "module-graphnet.utilities.decorators"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[83, "graphnet.utilities.filesys.find_i3_files"]], "graphnet.utilities.filesys": [[83, "module-graphnet.utilities.filesys"]], "has_extension() (in module graphnet.utilities.filesys)": [[83, "graphnet.utilities.filesys.has_extension"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[83, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[83, "graphnet.utilities.filesys.is_i3_file"]], "graphnet.utilities.imports": [[84, "module-graphnet.utilities.imports"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[84, "graphnet.utilities.imports.has_icecube_package"]], "has_pisa_package() (in module graphnet.utilities.imports)": [[84, "graphnet.utilities.imports.has_pisa_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[84, "graphnet.utilities.imports.has_torch_package"]], "requires_icecube() (in module graphnet.utilities.imports)": [[84, "graphnet.utilities.imports.requires_icecube"]], "logger (class in graphnet.utilities.logging)": [[85, "graphnet.utilities.logging.Logger"]], "repeatfilter (class in graphnet.utilities.logging)": [[85, "graphnet.utilities.logging.RepeatFilter"]], "critical() (graphnet.utilities.logging.logger method)": [[85, "graphnet.utilities.logging.Logger.critical"]], "debug() (graphnet.utilities.logging.logger method)": [[85, "graphnet.utilities.logging.Logger.debug"]], "error() (graphnet.utilities.logging.logger method)": [[85, "graphnet.utilities.logging.Logger.error"]], "file_handlers (graphnet.utilities.logging.logger property)": [[85, "graphnet.utilities.logging.Logger.file_handlers"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[85, "graphnet.utilities.logging.RepeatFilter.filter"]], "graphnet.utilities.logging": [[85, "module-graphnet.utilities.logging"]], "handlers (graphnet.utilities.logging.logger property)": [[85, "graphnet.utilities.logging.Logger.handlers"]], "info() (graphnet.utilities.logging.logger method)": [[85, "graphnet.utilities.logging.Logger.info"]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[85, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed"]], "setlevel() (graphnet.utilities.logging.logger method)": [[85, "graphnet.utilities.logging.Logger.setLevel"]], "stream_handlers (graphnet.utilities.logging.logger property)": [[85, "graphnet.utilities.logging.Logger.stream_handlers"]], "warning() (graphnet.utilities.logging.logger method)": [[85, "graphnet.utilities.logging.Logger.warning"]], "warning_once() (graphnet.utilities.logging.logger method)": [[85, "graphnet.utilities.logging.Logger.warning_once"]], "eps_like() (in module graphnet.utilities.maths)": [[86, "graphnet.utilities.maths.eps_like"]], "graphnet.utilities.maths": [[86, "module-graphnet.utilities.maths"]]}})