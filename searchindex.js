Search.setIndex({"docnames": ["graphnet", "graphnet.data", "graphnet.data.extractors", "graphnet.data.extractors.utilities", "graphnet.data.parquet", "graphnet.data.sqlite", "graphnet.data.utilities", "graphnet.deployment", "graphnet.deployment.i3modules", "graphnet.models", "graphnet.models.components", "graphnet.models.detector", "graphnet.models.gnn", "graphnet.models.task", "graphnet.pisa", "graphnet.training", "graphnet.utilities", "graphnet.utilities.config", "index", "modules"], "filenames": ["graphnet.rst", "graphnet.data.rst", "graphnet.data.extractors.rst", "graphnet.data.extractors.utilities.rst", "graphnet.data.parquet.rst", "graphnet.data.sqlite.rst", "graphnet.data.utilities.rst", "graphnet.deployment.rst", "graphnet.deployment.i3modules.rst", "graphnet.models.rst", "graphnet.models.components.rst", "graphnet.models.detector.rst", "graphnet.models.gnn.rst", "graphnet.models.task.rst", "graphnet.pisa.rst", "graphnet.training.rst", "graphnet.utilities.rst", "graphnet.utilities.config.rst", "index.rst", "modules.rst"], "titles": ["graphnet package", "graphnet.data package", "graphnet.data.extractors package", "graphnet.data.extractors.utilities package", "graphnet.data.parquet package", "graphnet.data.sqlite package", "graphnet.data.utilities package", "graphnet.deployment package", "graphnet.deployment.i3modules package", "graphnet.models package", "graphnet.models.components package", "graphnet.models.detector package", "graphnet.models.gnn package", "graphnet.models.task package", "graphnet.pisa package", "graphnet.training package", "graphnet.utilities package", "graphnet.utilities.config package", "Welcome to GraphNeT\u2019s documentation!", "src"], "terms": {"data": [0, 9, 10, 11, 12, 13, 15, 16, 17, 19], "extractor": [0, 1, 4, 5], "i3extractor": [0, 1, 4, 5], "i3featureextractor": [0, 1, 5], "i3genericextractor": [0, 1, 5], "i3hybridrecoextractor": [0, 1], "i3pisaextractor": [0, 1], "i3retroextractor": [0, 1], "i3splinempeextractor": [0, 1], "i3truthextractor": [0, 1], "i3tumextractor": [0, 1], "parquet": [0, 1, 6], "parquet_dataconvert": [0, 1], "parquet_dataset": [0, 1], "sqlite": [0, 1, 6], "sqlite_dataconvert": [0, 1], "sqlite_dataset": [0, 1], "sqlite_dataset_perturb": [0, 1], "sqlite_select": [0, 1], "sqlite_util": [0, 1], "util": [0, 1, 2, 5, 19], "parquet_to_sqlit": [0, 1], "random": [0, 1, 5], "featur": [0, 1, 2, 4, 5, 9, 10, 11, 12, 13, 15, 16, 17], "deepcor": [0, 1, 2, 11], "icecube86": [0, 1, 9, 11], "upgrad": [0, 1, 2, 11], "truth": [0, 1, 2, 4, 5, 15, 16, 17], "dataconvert": [0, 4, 5, 19], "__call__": [0, 1, 2, 15], "__init__": [0, 1, 2, 5, 6, 9, 10, 11, 12, 13, 15, 16, 17], "_extract_data": [0, 1], "_iterate_over_batches_of_fil": [0, 1], "_save_filenam": [0, 1], "_update_shared_vari": [0, 1], "execut": [0, 1, 5], "file_suffix": [0, 1, 4, 5], "get_map_funct": [0, 1], "merge_fil": [0, 1, 4, 5], "save_data": [0, 1, 4, 5], "fileset": [0, 1], "gcd_file": [0, 1, 2], "i3_fil": [0, 1, 2], "cache_output_fil": [0, 1], "init_global_index": [0, 1], "dataload": [0, 5, 9, 15, 16, 17, 19], "from_dataset_config": [0, 1], "collate_fn": [0, 1], "do_shuffl": [0, 1], "dataset": [0, 4, 5, 17, 19], "columnmissingexcept": [0, 1], "__getitem__": [0, 1, 5], "__len__": [0, 1], "_check_missing_column": [0, 1], "_construct_dataset": [0, 1], "_create_graph": [0, 1], "_get_all_indic": [0, 1], "_get_dbang_label": [0, 1], "_get_label": [0, 1], "_get_random_events_from_select": [0, 1], "_init": [0, 1], "_post_init": [0, 1], "_queri": [0, 1], "_query_t": [0, 1, 5], "_remove_missing_column": [0, 1], "_resolve_string_selection_to_indic": [0, 1], "add_label": [0, 1], "from_config": [0, 1, 9, 16, 17], "pipelin": [0, 19], "insqlitepipelin": [0, 1], "_create_t": [0, 1, 5], "deploy": [0, 19], "i3modul": [0, 7], "graphnet_modul": [0, 7], "model": [0, 5, 7, 14, 15, 17, 19], "compon": [0, 9], "layer": [0, 9, 12, 13], "pool": [0, 1, 9, 12], "detector": [0, 2, 9], "icecub": [0, 2, 3, 9, 16], "prototyp": [0, 9], "gnn": [0, 1, 9], "convnet": [0, 9], "dynedg": [0, 9], "dynedge_jinst": [0, 9], "task": [0, 9, 15], "classif": [0, 1, 9, 15], "reconstruct": [0, 1, 2, 7, 9], "coarsen": [0, 10, 19], "attributecoarsen": [0, 9], "_perform_clust": [0, 9], "_additional_featur": [0, 9], "_transfer_attribut": [0, 9], "forward": [0, 9, 10, 11, 12, 13, 15], "reduce_opt": [0, 9], "customdomcoarsen": [0, 9], "domandtimewindowcoarsen": [0, 9], "domcoarsen": [0, 9], "unbatch_edge_index": [0, 9], "graph_build": [0, 11, 19], "euclideangraphbuild": [0, 9], "graphbuild": [0, 9, 11], "knngraphbuild": [0, 9], "radialgraphbuild": [0, 9], "fit": [0, 9, 15, 16, 17, 19], "load": [0, 1, 2, 6, 9, 16, 17], "load_state_dict": [0, 9], "predict": [0, 1, 2, 9, 12, 13, 15], "predict_as_datafram": [0, 9], "save": [0, 1, 2, 3, 4, 5, 6, 9, 15, 16, 17], "save_state_dict": [0, 9], "standard_model": [0, 19], "standardmodel": [0, 9], "compute_loss": [0, 9, 13], "configure_optim": [0, 9], "infer": [0, 1, 7, 9, 13], "shared_step": [0, 9], "train": [0, 5, 7, 9, 17, 19], "training_step": [0, 9], "validation_step": [0, 9], "calculate_distance_matrix": [0, 9], "calculate_xyzt_homophili": [0, 9], "knn_graph_batch": [0, 9], "pisa": [0, 1, 2, 19], "plot": [0, 19], "plot_1d_contour": [0, 14], "plot_2d_contour": [0, 14], "read_entri": [0, 14], "callback": [0, 9, 19], "piecewiselinearlr": [0, 15], "get_lr": [0, 15], "progressbar": [0, 15], "get_metr": [0, 15], "init_predict_tqdm": [0, 15], "init_test_tqdm": [0, 15], "init_train_tqdm": [0, 15], "init_validation_tqdm": [0, 15], "on_train_epoch_end": [0, 15], "on_train_epoch_start": [0, 15], "label": [0, 1, 12, 13, 14, 19], "direct": [0, 13, 15], "loss_funct": [0, 13, 19], "binarycrossentropyloss": [0, 15], "crossentropyloss": [0, 15], "_forward": [0, 9, 11, 13, 15], "euclideandistanceloss": [0, 15], "logcmk": [0, 15], "backward": [0, 15], "logcoshloss": [0, 15], "_log_cosh": [0, 15], "lossfunct": [0, 13, 15], "mseloss": [0, 15], "rmseloss": [0, 15], "vonmisesfisher2dloss": [0, 15], "vonmisesfisher3dloss": [0, 15], "vonmisesfisherloss": [0, 15], "_evalu": [0, 15], "log_cmk": [0, 15], "log_cmk_approx": [0, 15], "log_cmk_exact": [0, 15], "get_predict": [0, 15], "make_dataload": [0, 15], "make_train_validation_dataload": [0, 15], "save_result": [0, 15], "weight_fit": [0, 19], "bjoernlow": [0, 15], "_fit_weight": [0, 15], "uniform": [0, 15], "weightfitt": [0, 15], "_get_truth": [0, 15], "config": [0, 1, 15, 16], "base_config": [0, 16], "configur": [0, 1, 9, 16], "dataset_config": [0, 16], "model_config": [0, 16], "pars": [0, 1, 2, 14, 16], "training_config": [0, 16], "decor": [0, 1, 19], "filesi": [0, 19], "find_i3_fil": [0, 16], "has_extens": [0, 16], "is_gcd_fil": [0, 16], "is_i3_fil": [0, 16], "import": [0, 2, 5, 9, 19], "has_icecube_packag": [0, 16], "has_torch_packag": [0, 16], "requires_icecub": [0, 16], "log": [0, 13, 15, 19], "loggermixin": [0, 1, 2, 6, 9, 15, 16, 17], "_get_logg": [0, 16], "critic": [0, 14, 16], "debug": [0, 16], "error": [0, 1, 2, 5, 15, 16], "info": [0, 16], "warn": [0, 16], "repeatfilt": [0, 16], "filter": [0, 16], "get_formatt": [0, 16], "get_logg": [0, 16], "set_logging_level": [0, 16], "warn_onc": [0, 16], "math": [0, 19], "eps_lik": [0, 16], "global": [0, 1, 9, 12], "us": [0, 1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17], "across": [0, 1, 3, 5, 6, 9, 10, 15, 16, 17], "graph": [0, 1, 5, 9, 10, 11, 15], "neural": 0, "network": [0, 12], "neutrino": [0, 2, 5], "telescop": 0, "event": [0, 1, 5, 6, 9, 10, 13, 15], "i": [0, 1, 2, 3, 5, 6, 9, 10, 12, 13, 14, 15, 16, 17], "python": [0, 1, 2, 3], "provid": [0, 1, 2, 5, 9, 15], "conveni": 0, "common": [0, 15, 16], "collabor": 0, "develop": 0, "tool": 0, "build": [0, 9, 11, 17], "solv": 0, "physic": [0, 2, 3, 5, 7, 9, 13], "experi": [0, 15], "It": [0, 3], "aim": 0, "physicist": 0, "leverag": 0, "advanc": [0, 10], "machin": 0, "learn": [0, 15], "ml": 0, "without": [0, 15], "have": [0, 1, 2, 10, 13, 15], "expert": 0, "themselv": [0, 17], "therebi": [0, 5, 17], "acceler": 0, "scientif": 0, "area": 0, "phyic": 0, "design": 0, "principl": 0, "end": [0, 1], "all": [0, 1, 2, 4, 5, 9, 10, 11, 12, 13, 15, 16, 17], "streamlin": 0, "process": [0, 1, 2, 5, 11, 12], "ingest": [0, 1, 11], "transform": [0, 10, 13, 15], "optimis": 0, "deploi": [0, 7], "them": [0, 1, 3, 9, 12, 13], "chain": [0, 7, 9], "extens": [0, 16], "basic": 0, "block": 0, "improv": 0, "variou": 0, "can": [0, 1, 2, 5, 6, 9, 10, 14, 15, 17], "easili": 0, "extend": 0, "new": [0, 10], "architectur": [0, 9, 12], "main": [0, 1, 9, 12], "convert": [0, 1, 3, 4, 5, 6], "from": [0, 1, 2, 3, 4, 5, 6, 9, 10, 13, 14, 15, 16, 17], "domain": [0, 1, 7], "specif": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 15], "format": [0, 1, 2, 3, 4, 5, 14, 17], "i3": [0, 1, 2, 3, 4, 5, 6, 16], "more": [0, 1, 6, 16, 17], "index": [0, 1, 3, 5, 9, 10, 15, 18], "e": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 15, 17], "g": [0, 1, 2, 3, 5, 9, 10, 13, 15], "suitabl": 0, "intermedi": [0, 1, 4, 5, 12], "file": [0, 1, 2, 3, 4, 5, 6, 9, 15, 16, 17], "plug": 0, "plai": 0, "abstract": [0, 1, 2, 9, 11, 12, 13, 15, 17], "awai": 0, "implement": [0, 1, 2, 4, 5, 10, 12, 15], "detail": 0, "onli": [0, 1, 5, 9, 10, 13, 15, 16, 17], "expos": 0, "ar": [0, 1, 2, 3, 4, 5, 6, 10, 12, 13, 15, 17], "most": 0, "relev": [0, 3, 6, 16], "physicst": 0, "what": 0, "includ": [0, 5, 9, 15, 17], "docker": 0, "imag": [0, 5], "run": [0, 1, 6], "containeris": 0, "fashion": 0, "collect": [1, 2, 15, 16], "frame": [1, 2, 5], "type": [1, 2, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17], "_load_gcd_data": [1, 2], "name": [1, 2, 3, 4, 5, 6, 13, 15, 17], "set_fil": [1, 2], "i3extractorcollect": [1, 2], "i3featureextractoricecube86": [1, 2], "i3featureextractoricecubedeepcor": [1, 2], "i3featureextractoricecubeupgrad": [1, 2], "i3pulsenoisetruthflagicecubeupgrad": [1, 2], "_cast_mc_tre": [1, 2], "_cast_trigg": [1, 2], "_extract_per_pulse_attribut": [1, 2], "_extract_pulse_series_map": [1, 2], "_flatten_result": [1, 2], "_flatten_result_mctre": [1, 2], "_get_kei": [1, 2], "i3galacticplanehybridrecoextractor": [1, 2], "_try_get_kei": [1, 2], "i3splinempeicextractor": [1, 2], "_find_data_typ": [1, 2], "_get_primary_particle_interaction_type_and_elast": [1, 2], "_get_primary_track_energy_and_inelast": [1, 2], "_muon_stop": [1, 2], "parquetdataconvert": [1, 4], "parquetdataset": [1, 4], "_format_dictionary_result": [1, 4], "sqlitedataconvert": [1, 5], "_attach_index": [1, 5], "_extract_everyth": [1, 5], "_extract_table_nam": [1, 5], "_merge_temporary_databas": [1, 5], "_submit_to_databas": [1, 5], "any_pulsemap_is_non_empti": [1, 5], "construct_datafram": [1, 5], "is_pulsemap_check": [1, 5], "sqlitedataset": [1, 5], "_close_connect": [1, 5], "_establish_connect": [1, 5], "sqlitedatasetperturb": [1, 5], "get_desired_event_numb": [1, 5], "get_equal_proportion_neutrino_indic": [1, 5], "get_even_dbang_select": [1, 5], "get_even_signal_background_indici": [1, 5], "get_even_track_cascade_indici": [1, 5], "attach_index": [1, 5], "create_t": [1, 5], "run_sql_cod": [1, 5], "save_to_sql": [1, 5], "parquettosqliteconvert": [1, 6], "_save_config": [1, 6], "pairwise_shuffl": [1, 6], "class": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 15, 16, 17], "sourc": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17], "base": [1, 2, 4, 5, 6, 9, 10, 11, 12, 13, 15, 16, 17], "object": [1, 2, 3, 5, 10, 11, 13, 15, 16], "namespac": [1, 9], "standard": [1, 5, 9], "work": [1, 3], "dom_x": [1, 11], "dom_i": [1, 11], "dom_z": [1, 11], "dom_tim": [1, 11], "charg": [1, 2, 11, 15], "rde": [1, 11], "pmt_area": [1, 11], "string": [1, 3, 5, 10, 11, 17], "pmt_number": [1, 11], "dom_numb": [1, 11], "pmt_dir_x": [1, 11], "pmt_dir_i": [1, 11], "pmt_dir_z": [1, 11], "dom_typ": [1, 11], "energi": [1, 2, 13, 15], "energy_track": 1, "position_x": [1, 2], "position_i": [1, 2], "position_z": [1, 2], "azimuth": [1, 13, 15], "zenith": [1, 13, 15], "pid": 1, "elast": [1, 2], "sim_typ": [1, 2], "interaction_typ": 1, "interaction_tim": 1, "inelast": [1, 2, 13], "stopped_muon": 1, "outdir": [1, 4, 5, 6], "gcd_rescu": [1, 4, 5, 16], "none": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 15, 16, 17], "nb_files_to_batch": [1, 4, 5], "sequential_batch_pattern": [1, 4, 5], "input_file_batch_pattern": [1, 4, 5], "worker": [1, 4, 5, 6], "1": [1, 2, 3, 4, 5, 9, 10, 12, 13, 15, 17], "index_column": [1, 4, 5, 9, 15, 16, 17], "event_no": [1, 4, 5, 9, 15, 17], "icetray_verbos": [1, 4, 5], "0": [1, 2, 4, 5, 9, 10, 12, 14, 15, 17], "abc": [1, 2, 9, 15, 17], "paramet": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17], "list": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17], "str": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 15, 16, 17], "option": [1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17], "default": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17], "int": [1, 2, 4, 5, 9, 10, 11, 12, 13, 15, 16, 17], "directori": [1, 6, 16], "union": [1, 2, 3, 4, 5, 6, 9, 10, 12, 13, 15, 16, 17], "One": [1, 6, 14], "within": [1, 2, 9, 10, 12], "which": [1, 2, 3, 5, 9, 10, 12, 13, 15], "should": [1, 2, 3, 5, 10, 15, 17], "an": [1, 2, 3, 15, 16], "return": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17], "construct": [1, 2, 5, 6, 9, 10, 11, 12, 13, 15, 16, 17], "when": [1, 3, 5, 10, 12], "regular": [1, 3], "express": [1, 9, 15], "group": [1, 10], "accord": [1, 4, 5, 9, 10], "match": [1, 15, 16], "certain": [1, 6], "pattern": 1, "up": 1, "wildcard": 1, "same": [1, 2, 3, 9, 10, 13, 15, 17], "output": [1, 4, 5, 6, 9, 11, 12, 15, 16, 17], "thi": [1, 2, 3, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17], "ha": [1, 2, 3, 4, 12, 15, 16], "input": [1, 5, 9, 11, 12, 13], "replac": 1, "x": [1, 2, 9, 10, 11, 12, 13, 14, 15], "period": 1, "special": [1, 2, 9], "mean": [1, 4, 5, 9, 12, 15, 17], "interpret": [1, 13], "liter": 1, "ani": [1, 2, 3, 4, 5, 9, 10, 12, 13, 14, 15, 16, 17], "charact": 1, "regex": 1, "For": [1, 3, 15], "instanc": [1, 2, 3, 4, 5, 9, 15, 16, 17], "A": [1, 2, 9, 10, 15], "z": [1, 2, 9, 11], "_": 1, "9": 1, "5": 1, "zst": 1, "find": [1, 16], "whose": [1, 2], "contain": [1, 2, 3, 4, 5, 9, 12, 13, 15], "one": [1, 5, 9, 10, 16, 17], "capit": 1, "letter": 1, "follow": [1, 2, 9, 12, 15], "underscor": 1, "five": 1, "number": [1, 5, 10, 11, 12, 13, 15], "upgrade_genie_step4_141020_a_000000": 1, "upgrade_genie_step4_141020_a_000001": 1, "upgrade_genie_step4_141020_a_000008": 1, "upgrade_genie_step4_141020_a_000009": 1, "would": 1, "upgrade_genie_step4_141020_a_00000x": 1, "suffix": 1, "upgrade_genie_step4_141020_a_000010": 1, "separ": [1, 3, 15], "upgrade_genie_step4_141020_a_00001x": 1, "extract": [1, 2, 3, 5, 6, 13, 15], "singl": [1, 2, 10, 12, 15, 17], "If": [1, 2, 4, 5, 9, 15], "strategi": 1, "each": [1, 2, 3, 5, 6, 9, 10, 12, 13, 14, 15, 16], "correspond": [1, 2, 3, 5, 6, 12, 13, 15, 16], "method": [1, 2, 3, 4, 5, 9, 10, 13, 15], "The": [1, 2, 3, 5, 9, 10, 12, 13, 14, 15, 16], "abov": [1, 14, 15], "distinct": 1, "allow": [1, 7, 9, 10, 15], "rather": [1, 13], "than": [1, 13, 16], "send": 1, "back": 1, "path": [1, 2, 4, 5, 6, 9, 14, 16, 17], "gcd": [1, 2, 3, 6, 16], "ordereddict": [1, 4, 5], "arg": [1, 13, 15, 16, 17], "iter": 1, "over": 1, "batch": [1, 9, 10, 12], "result": [1, 2, 4, 5, 10, 15, 17], "tupl": [1, 2, 3, 4, 5, 9, 12, 13, 14, 15, 16], "csv": [1, 6], "updat": [1, 9, 13, 15], "self": [1, 17], "_index": 1, "_output_fil": 1, "set": [1, 2, 13, 16], "multiprocess": 1, "wa": [1, 2], "In": [1, 17], "case": [1, 2, 5, 10, 13], "been": [1, 4, 15], "abl": [1, 3], "write": 1, "directli": [1, 2, 16], "we": [1, 3], "need": [1, 3, 9, 15], "get": [1, 2, 3, 5, 15, 16], "sync": 1, "gener": [1, 2, 5, 13, 15], "individu": [1, 5, 9, 10, 12], "inherit": [1, 2, 3, 11, 13, 15, 16], "properti": [1, 2, 3, 10, 11, 12, 13, 17], "nb_file": 1, "unit": [1, 15, 16], "": [1, 2, 3, 5, 6, 9, 12, 13, 15, 16, 17], "identifi": [1, 2, 5, 17], "map": [1, 2, 5], "function": [1, 3, 5, 6, 9, 10, 13, 14, 15, 16, 17], "pure": [1, 2, 3], "output_fil": [1, 4, 5], "input_fil": [1, 2, 4, 5], "merg": [1, 4, 5, 15], "current": [1, 2, 4, 5, 15], "rais": [1, 2, 4, 9], "notimplementederror": [1, 4], "backend": [1, 4, 5], "question": 1, "process_method": 1, "cach": 1, "typevar": 1, "f": [1, 10], "bound": [1, 14], "callabl": [1, 3, 10, 13, 15, 16, 17], "make": [1, 5, 15, 17], "global_index": 1, "avail": [1, 2, 16], "synchron": 1, "batch_siz": [1, 9, 15], "shuffl": [1, 6, 15], "num_work": [1, 15], "10": [1, 9, 15], "persistent_work": [1, 15], "true": [1, 5, 9, 15], "kwarg": [1, 10, 13, 15, 16, 17], "bool": [1, 2, 3, 5, 9, 12, 15, 16, 17], "0x7fd77553e4d0": 1, "classmethod": [1, 9, 15, 17], "select": [1, 4, 5, 15, 16, 17], "datasetconfig": [1, 16, 17], "dict": [1, 2, 3, 4, 5, 9, 11, 14, 15, 17], "remov": 1, "less": 1, "two": [1, 2, 12, 15], "dom": [1, 5, 9, 10], "hit": 1, "occur": 1, "product": 1, "selection_nam": 1, "check": [1, 2, 3, 5, 16, 17], "whether": [1, 2, 3, 5, 9, 12, 15, 16, 17], "except": [1, 2], "indic": [1, 2, 5, 10, 15], "miss": 1, "column": [1, 5, 9, 15], "pulsemap": [1, 2, 4, 5, 15, 16, 17], "node_truth": [1, 4, 5, 15, 16, 17], "truth_tabl": [1, 4, 5, 15, 16, 17], "node_truth_t": [1, 4, 5, 15, 16, 17], "string_select": [1, 4, 5, 15, 16, 17], "dtype": [1, 4, 5, 16], "torch": [1, 4, 5, 9, 10, 12, 16], "float32": [1, 4, 5], "loss_weight_t": [1, 4, 5, 15, 16, 17], "loss_weight_column": [1, 4, 5, 15, 16, 17], "loss_weight_default_valu": [1, 4, 5, 16, 17], "seed": [1, 4, 5, 15, 16, 17], "read": [1, 3, 4, 5, 9, 11, 12, 13], "float": [1, 2, 4, 5, 9, 12, 14, 15, 17], "sequential_index": [1, 5], "puls": [1, 2, 3, 5, 9, 10], "seri": [1, 2, 3, 5], "node": [1, 5, 9, 10, 12, 13], "multipl": [1, 2, 5, 15, 17], "differ": [1, 2, 5, 9, 15], "store": [1, 2, 5, 15], "level": [1, 2, 5, 9, 10, 16], "ad": [1, 2, 5, 12], "attribut": [1, 2, 5, 9, 13], "uniqu": [1, 5, 6, 17], "indici": [1, 3, 5, 15], "tabl": [1, 2, 5, 15], "inform": [1, 2, 5, 14, 15], "subset": [1, 5, 10, 12], "exist": [1, 2, 5, 9], "tensor": [1, 5, 9, 10, 12, 13, 15, 16], "per": [1, 2, 5, 10, 13, 15], "loss": [1, 5, 9, 13, 15], "weight": [1, 5, 13, 15, 17], "also": [1, 5, 16, 17], "assign": [1, 5, 6, 9, 10], "note": [1, 5, 14, 17], "valu": [1, 2, 3, 5, 10, 14, 15, 17], "appli": [1, 2, 5, 9, 10, 12, 17], "specifi": [1, 5, 9, 13, 14, 15, 16], "That": [1, 5, 12, 13, 15], "ignor": [1, 3, 5], "resolv": 1, "10000": 1, "20": [1, 16], "entri": [1, 2, 12, 14, 17], "loss_weight": [1, 13], "creat": [1, 5, 17], "pytorch": [1, 4, 5, 15], "No": 1, "preprocess": [1, 11], "perform": [1, 9, 10, 12, 13], "stage": 1, "just": [1, 10], "adjanc": 1, "impos": 1, "edge_attr": 1, "edge_weight": 1, "associ": [1, 2, 13, 15], "weigh": 1, "_index_column": 1, "truth_dict": 1, "doubl": 1, "bang": 1, "dictionari": [1, 2, 3, 4, 5, 14, 17], "num": [1, 10], "frac": 1, "intern": 1, "represent": [1, 3, 10], "implemen": 1, "code": [1, 2, 5, 17], "after": [1, 10, 12, 15], "constructor": [1, 2], "queri": [1, 2, 5], "length": [1, 3, 15], "Their": 1, "constitu": 1, "sequenti": 1, "len": 1, "_may_": 1, "_indic": 1, "respect": 1, "some": [1, 2, 5], "out": [1, 9, 12, 13, 15, 16], "entir": [1, 9], "befor": [1, 5, 12, 13, 15], "scalar": [1, 9, 15], "element": [1, 3, 9, 17], "present": [1, 16], "_featur": 1, "_truth": 1, "expect": 1, "panda": [1, 5, 15], "datafram": [1, 5, 9, 15], "compat": 1, "syntax": [1, 11, 13, 15], "mai": [1, 11], "fix": 1, "randomli": [1, 5, 17], "sampl": 1, "kei": [1, 2, 3, 5, 10, 15, 17], "fn": [1, 3, 17], "add": [1, 12], "custom": [1, 15], "defin": [1, 10, 17], "analysi": 1, "module_dict": 1, "devic": 1, "retro_table_nam": 1, "retro": [1, 2], "100": [1, 2, 15], "n_worker": 1, "pipeline_nam": 1, "databas": [1, 2, 5, 6, 15], "chunk_siz": 1, "1000000": 1, "field": [1, 2, 6, 14, 15], "_module_dict": 1, "target": [1, 13, 15, 16, 17], "slice": [1, 10, 12], "chunk": 1, "size": [1, 10, 12], "control": [1, 15], "memori": 1, "usag": 1, "initialis": [1, 17], "gnn_module_for_energy_regress": 1, "modulelist": 1, "comput": [1, 9, 13, 15], "alreadi": [1, 2, 5, 16], "prompt": 1, "avoid": [1, 5, 15], "overwrit": [1, 15], "pipeline_databas": 1, "table_nam": [1, 5], "df": [1, 5], "combin": [1, 3, 13], "enabl": [1, 16], "industri": 1, "flatten_nested_dictionari": [2, 3], "serialis": [2, 3, 17], "transpose_list_of_dict": [2, 3], "frame_is_montecarlo": [2, 3], "frame_is_nois": [2, 3], "get_om_keys_and_pulseseri": [2, 3], "break_cyclic_recurs": [2, 3], "cast_object_to_pure_python": [2, 3], "cast_pulse_series_to_pure_python": [2, 3], "get_member_vari": [2, 3], "is_boost_class": [2, 3], "is_boost_enum": [2, 3], "is_icecube_class": [2, 3], "is_method": [2, 3], "is_typ": [2, 3], "icetrai": [2, 3, 16], "i3fram": [2, 3], "keep": 2, "track": [2, 13], "proven": 2, "geospati": 2, "refer": 2, "being": [2, 13], "manag": [2, 15], "member": [2, 3, 16, 17], "treat": 2, "86": [2, 11], "p": [2, 3, 5, 15], "nois": [2, 3, 5], "flag": 2, "exclude_kei": 2, "dynam": [2, 10, 12], "call": [2, 3, 5, 10, 15, 16], "tri": [2, 3], "automat": [2, 15], "cast": [2, 3], "done": [2, 10, 16], "recurs": [2, 3, 16, 17], "look": 2, "variabl": [2, 3, 9, 12, 15], "signatur": [2, 3], "similar": [2, 3], "handl": [2, 15], "hand": 2, "mc": 2, "tree": 2, "trigger": 2, "possibl": [2, 3], "other": [2, 15], "exclud": [2, 6], "while": [2, 15], "valueerror": [2, 9], "both": [2, 13, 14], "obj": [2, 3, 17], "i3mctre": 2, "dataclass": [2, 3], "hierarchi": 2, "i3triggerhierarchi": 2, "i3mapkeyuint": 2, "like": [2, 3, 9, 10, 11, 13, 15, 16], "om": [2, 3], "integ": [2, 12, 15], "vector": [2, 9, 10, 15], "flatten": [2, 3], "user": [2, 9, 15], "otherwis": [2, 3, 15], "possibli": 2, "ones": 2, "explicitli": 2, "hybrid": 2, "dnn_hybrid": 2, "galatict": 2, "plane": [2, 15], "tum": 2, "dnn": 2, "reconcstruct": 2, "quantiti": [2, 9, 13], "requir": [2, 5, 13, 15], "pisa_depend": 2, "padding_valu": 2, "default_valu": 2, "splinemp": 2, "spline_mpe_": 2, "point": [2, 15], "border": 2, "ndarrai": [2, 15], "arrai": [2, 3], "boundari": 2, "volum": 2, "y": [2, 9, 11, 14], "coordin": [2, 9], "particl": [2, 15], "start": 2, "stop": 2, "hard": 2, "determin": 2, "mont": [2, 3], "carlo": [2, 3], "simul": [2, 3], "primari": 2, "interact": [2, 13], "handler": 2, "doe": [2, 3, 17], "thing": 2, "catch": 2, "issu": 2, "relat": [2, 6, 16], "where": [2, 5, 15], "doesn": 2, "t": [2, 3, 11, 14, 15], "record": [2, 16], "pad": 2, "mciniceprimari": 2, "encod": 2, "2": [2, 3, 9, 10, 12, 13, 14, 15, 17], "neutral": 2, "neither": 2, "rang": [2, 13], "total": 2, "shrink_horizont": 2, "shrink_vert": 2, "calcul": [2, 9, 12, 15], "muon": [2, 5], "final": [2, 5, 10, 15], "posit": [2, 10, 13], "analogouo": 2, "vertex": [2, 13], "under": [2, 5], "first": [2, 15], "second": 2, "axi": [2, 14], "min": [2, 9, 10, 12], "max": [2, 9, 10, 12, 15], "depth": 2, "see": [2, 9, 15], "exampl": [2, 3, 9, 10, 15, 17], "shrink": 2, "further": 2, "exclus": 2, "zone": 2, "meter": 2, "height": [2, 14], "well": [2, 9], "boolean": 2, "chosen": [2, 9], "fiduci": 2, "tum_dnn": 2, "recoconstruct": 2, "manipul": 3, "parent_kei": 3, "__": 3, "nest": 3, "non": [3, 5, 15, 16], "d": [3, 15], "b": [3, 9, 10], "c": [3, 10, 15], "a__b": 3, "applic": 3, "parent": 3, "concaten": [3, 12], "nester": 3, "necessari": [3, 5], "json": 3, "typic": 3, "therefor": 3, "outer": 3, "order": [3, 9], "de": 3, "transpos": 3, "pulseseri": 3, "calibr": 3, "gcd_dict": 3, "i3calibr": 3, "indicesfor": 3, "ensur": [3, 6, 15], "isn": 3, "take": [3, 5, 10], "mainli": 3, "cannot": 3, "trivial": [3, 13], "try": 3, "similarli": 3, "support": 3, "equival": 3, "its": [3, 5], "itself": [3, 13], "deem": 3, "wai": 3, "optic": 3, "found": [3, 15], "return_discard": 3, "fals": [3, 5, 9, 12, 15, 17], "valid": [3, 9, 13, 15], "mangl": 3, "boost": 3, "enum": 3, "ak": 4, "to_list": 4, "attach": 5, "time": [5, 9, 10, 13, 16], "is_pulse_map": 5, "db": [5, 15], "everyth": 5, "temporari": 5, "submit": 5, "data_dict": 5, "empti": 5, "retriev": 5, "splitinicepuls": 5, "least": 5, "becaus": [5, 6], "instead": [5, 15], "alwai": 5, "sure": 5, "sqlite3": 5, "connect": [5, 9, 11, 15], "open": 5, "pass": [5, 9, 10, 12, 13, 15], "replica": 5, "own": 5, "databaseerror": 5, "disk": 5, "malform": 5, "due": 5, "inabl": 5, "accross": 5, "perturb": 5, "perturbation_dict": 5, "pre": [5, 11], "step": [5, 9, 15], "given": [5, 10, 15], "intend": 5, "test": [5, 13, 15, 16, 17], "stabil": 5, "small": [5, 15], "chang": [5, 15], "deviat": 5, "desired_s": 5, "fraction_nois": 5, "fraction_muon": 5, "fraction_nu_": 5, "fraction_nu_mu": 5, "fraction_nu_tau": 5, "fraction": [5, 12], "nu_e": 5, "nu_mu": 5, "nu_tau": 5, "reed": 5, "42": [5, 15], "equal": 5, "flavour": 5, "proport": 5, "resp": 5, "min_max_decay_length": 5, "dbang": 5, "cc": 5, "nc": 5, "mu": 5, "database_path": [5, 15], "must": [5, 9, 15], "parquet_path": 6, "mc_truth_tabl": 6, "mc_truth": 6, "excluded_field": 6, "id": 6, "By": [6, 9, 13], "everi": 6, "choos": 6, "argument": [6, 13, 15, 16, 17], "exclude_field": 6, "database_nam": 6, "convers": 6, "rng": 6, "i3_list": [6, 16], "gcd_list": [6, 16], "correpond": 6, "handi": 6, "even": [6, 15], "files_list": 6, "gcd_shuffl": 6, "i3_shuffl": 6, "submodul": [7, 19], "analys": [7, 14], "dynedgeconv": [9, 10, 12], "_group_ident": [9, 10], "group_bi": [9, 10], "group_pulses_to_dom": [9, 10], "group_pulses_to_pmt": [9, 10], "min_pool": [9, 10], "min_pool_x": [9, 10], "std_pool": [9, 10], "std_pool_x": [9, 10], "sum_pool": [9, 10], "sum_pool_and_distribut": [9, 10], "sum_pool_x": [9, 10], "nb_input": [9, 11, 12, 13], "nb_output": [9, 11, 12, 13], "icecubedeepcor": [9, 11], "icecubeupgrad": [9, 11], "icecubeupgrade_v2": [9, 11], "_calculate_global_vari": [9, 12], "_construct_lay": [9, 12], "_global_pool": [9, 12], "dynedgejinst": [9, 12], "binaryclassificationtask": [9, 13], "binaryclassificationtasklogit": [9, 13], "multiclassclassificationtask": [9, 13], "azimuthreconstruct": [9, 13], "azimuthreconstructionwithkappa": [9, 13], "directionreconstructionwithkappa": [9, 13], "energyreconstruct": [9, 13], "energyreconstructionwithpow": [9, 13], "energyreconstructionwithuncertainti": [9, 13], "inelasticityreconstruct": [9, 13], "positionreconstruct": [9, 13], "timereconstruct": [9, 13], "vertexreconstruct": [9, 13], "zenithreconstruct": [9, 13], "zenithreconstructionwithkappa": [9, 13], "identitytask": [9, 13], "_validate_and_set_transform": [9, 13], "train_ev": [9, 13], "oper": [9, 10, 12], "cluster": [9, 10, 12], "local": 9, "reduc": 9, "avg": 9, "transfer_attribut": 9, "simplecoarsen": 9, "longtensor": [9, 10, 12], "addit": [9, 10, 15], "nomin": 9, "pooling_method": 9, "overwritten": [9, 17], "bespok": 9, "original_data": 9, "pooled_data": 9, "transfer": 9, "avg_pool": 9, "avg_pool_x": 9, "max_pool": [9, 10], "max_pool_x": [9, 10], "sum": [9, 10, 12], "time_window": 9, "window": 9, "edge_index": [9, 10, 12], "split": 9, "mathbf": [9, 10], "ldot": [9, 10], "n": [9, 10, 15], "sigma": 9, "threshold": 9, "euclidean": [9, 15], "distanc": [9, 15], "between": [9, 15], "http": [9, 15], "arxiv": [9, 15], "org": [9, 15], "pdf": 9, "1809": 9, "06166": 9, "nb_nearest_neighbour": 9, "k": [9, 12, 15], "nearest": [9, 12], "neighbour": [9, 10, 12], "radiu": 9, "sphere": [9, 15], "centr": 9, "lightningmodul": [9, 10, 15], "train_dataload": 9, "val_dataload": 9, "max_epoch": 9, "gpu": 9, "ckpt_path": 9, "logger": [9, 16], "log_every_n_step": 9, "gradient_clip_v": 9, "trainer_kwarg": 9, "pytorch_lightn": 9, "trainer": [9, 15], "trust": [9, 17], "load_modul": [9, 17], "modelconfig": [9, 16, 17], "enough": 9, "eval": 9, "lambda": 9, "definit": 9, "consequ": 9, "state_dict": 9, "prediction_column": [9, 15], "node_level": [9, 15], "additional_attribut": [9, 12, 15], "optimizer_class": 9, "optim": [9, 15], "adam": 9, "optimizer_kwarg": 9, "scheduler_class": 9, "scheduler_kwarg": 9, "scheduler_config": 9, "togeth": 9, "complet": 9, "pred": [9, 13], "verbos": [9, 15], "activ": [9, 13], "mode": [9, 13], "batch_idx": 9, "share": 9, "deactiv": [9, 13], "train_batch": 9, "val_batch": 9, "xyz_coord": 9, "matrix": [9, 10, 15], "pairwis": 9, "shape": [9, 10, 15], "nb_dom": 9, "3": [9, 10, 12, 13, 14, 15], "xyzt": 9, "homophili": 9, "measur": 9, "notic": [9, 15], "assum": [9, 11, 13], "edg": [9, 10, 12], "complex": 9, "simpl": 9, "orient": 9, "modular": 9, "subclass": 9, "nn": [9, 10, 12], "few": 9, "purpos": [9, 15], "built": 9, "form": [9, 13], "aggr": 10, "nb_neighbor": 10, "8": [10, 12, 15], "features_subset": [10, 12], "edgeconv": 10, "convolut": [10, 12], "sequenc": [10, 17], "mlp": [10, 12], "aggreg": 10, "sparsetensor": 10, "row": 10, "ident": [10, 13], "pmt": 10, "f1": 10, "f2": 10, "6": [10, 14, 15], "7": 10, "groupbi": 10, "negat": 10, "repres": [10, 17], "std": 10, "averag": [10, 15], "torch_geometr": 10, "version": [10, 13, 15], "mathbb": 10, "r": 10, "n_1": 10, "n_b": 10, "maximum": [10, 13], "obtain": [10, 15], "wise": 10, "dens": 10, "fc": 10, "known": 10, "cluster_index": 10, "distribut": [10, 12, 13, 15], "scaler": 11, "ins": 11, "implent": [11, 13, 15], "adjac": 11, "overridden": 11, "prometheu": 11, "standardis": 11, "author": [12, 15], "martin": 12, "minh": 12, "nb_intermedi": 12, "128": 12, "dropout_ratio": 12, "dimens": [12, 15], "drop": 12, "learnabl": 12, "nb_neighbour": 12, "dynedge_layer_s": 12, "post_processing_layer_s": 12, "readout_layer_s": 12, "global_pooling_schem": 12, "add_global_variables_after_pool": 12, "latent": [12, 13], "metric": [12, 15], "dimenion": 12, "multi": 12, "perceptron": 12, "256": 12, "336": 12, "hidden": [12, 13], "skip": 12, "post": 12, "_and_": 12, "As": 12, "last": [12, 13, 15], "yield": [12, 15], "scheme": 12, "altern": [12, 15], "exact": [12, 15], "2209": 12, "03042": 12, "rasmu": 12, "oerso": 12, "layer_size_scal": 12, "4": [12, 13, 14, 15], "scale": [12, 13, 15], "core": 12, "hidden_s": 13, "target_label": 13, "transform_prediction_and_target": 13, "transform_target": 13, "transform_infer": 13, "transform_support": 13, "binari": [13, 15], "logit": [13, 15], "classifi": 13, "untransform": 13, "angl": [13, 15], "kappa": [13, 15], "var": 13, "3d": [13, 15], "vmf": 13, "stabl": [13, 15], "uncertainti": 13, "v": 13, "hadron": 13, "affin": 13, "feed": 13, "appropri": 13, "o": 13, "numer": [13, 15], "log10": [13, 15], "conjunct": 13, "invers": 13, "recov": 13, "minimum": 13, "restrict": [13, 15], "invert": 13, "1e6": 13, "assert": 13, "wrt": 13, "contour": 14, "contour_data": 14, "chi2_critical_valu": 14, "706": 14, "width": 14, "352": 14, "388": 14, "1d": 14, "path_to_pisa_fit_result": 14, "name_of_my_model_in_fit": 14, "legend": 14, "color": 14, "linestyl": 14, "style": 14, "line": [14, 15], "chi2": 14, "90": 14, "cl": 14, "right": [14, 15], "figur": 14, "inch": 14, "xlim": 14, "ylim": 14, "0023799999999999997": 14, "0025499999999999997": 14, "605": 14, "176": 14, "2d": [14, 15], "lower": 14, "upper": 14, "below": [14, 15], "interfac": 14, "oscil": 14, "dure": 15, "mileston": 15, "factor": 15, "last_epoch": 15, "_lrschedul": 15, "interpol": 15, "rate": 15, "linearli": 15, "denot": 15, "multipli": 15, "closest": 15, "vice": 15, "versa": 15, "wrap": [15, 17], "increas": 15, "epoch": 15, "print": [15, 16], "messag": [15, 16], "stdout": 15, "effect": 15, "refresh_r": 15, "process_posit": 15, "tqdmprogressbar": 15, "progress": 15, "bar": 15, "customis": 15, "lightn": 15, "overrid": 15, "show": 15, "don": 15, "duplciat": 15, "previou": 15, "behaviour": 15, "runtim": 15, "azimuth_kei": 15, "zenith_kei": 15, "produc": 15, "etc": 15, "cross": 15, "entropi": 15, "probabl": 15, "num_class": 15, "softmax": 15, "ed": 15, "prepar": 15, "squar": 15, "three": 15, "elementwis": 15, "von": 15, "mise": 15, "fisher": 15, "term": 15, "mit": 15, "licens": 15, "copyright": 15, "2019": 15, "ryabinin": 15, "permiss": 15, "herebi": 15, "grant": 15, "free": 15, "person": 15, "copi": 15, "softwar": 15, "document": 15, "deal": 15, "limit": 15, "modifi": 15, "publish": 15, "sublicens": 15, "sell": 15, "permit": 15, "whom": 15, "furnish": 15, "do": [15, 17], "so": 15, "subject": 15, "condit": 15, "shall": 15, "substanti": 15, "portion": 15, "THE": 15, "AS": 15, "warranti": 15, "OF": 15, "kind": 15, "OR": 15, "impli": 15, "BUT": 15, "NOT": 15, "TO": 15, "merchant": 15, "FOR": 15, "particular": 15, "AND": 15, "noninfring": 15, "IN": 15, "NO": 15, "holder": 15, "BE": 15, "liabl": 15, "claim": 15, "damag": 15, "liabil": 15, "action": 15, "contract": 15, "tort": 15, "aris": 15, "WITH": 15, "_____________________": 15, "github": 15, "com": 15, "mryab": 15, "vmf_loss": 15, "blob": 15, "master": 15, "py": 15, "bessel": 15, "exponenti": 15, "ditto": 15, "iv": 15, "1812": 15, "04616": 15, "spite": 15, "suggest": 15, "sec": 15, "paper": 15, "through": 15, "comparison": 15, "m": 15, "correct": 15, "static": 15, "ctx": 15, "grad_output": 15, "cosh": 15, "act": 15, "larg": 15, "inf": 15, "moder": 15, "kera": 15, "team": 15, "v2": 15, "l1580": 15, "l1617": 15, "return_el": 15, "either": 15, "root": 15, "0th": 15, "1st": 15, "estim": 15, "dimenson": 15, "utilis": 15, "dimension": 15, "space": 15, "kappa_switch": 15, "c_": 15, "sinc": 15, "diverg": 15, "700": 15, "float64": 15, "precis": 15, "unaccur": 15, "switch": 15, "continu": 15, "approx": 15, "ab": 15, "minu": 15, "sign": 15, "exactli": [15, 16], "database_indic": 15, "test_siz": 15, "33": 15, "tag": 15, "archiv": 15, "x_low": 15, "wherea": 15, "curv": 15, "alpha": 15, "05": 15, "cut": 15, "off": 15, "how": 15, "fast": 15, "approach": 15, "zero": 15, "larger": 15, "faster": 15, "public": 15, "fit_weight": 15, "uniformweightfitt": 15, "bin": 15, "weight_nam": 15, "add_to_databas": 15, "privat": 15, "sql": 15, "desir": [15, 16], "np": 15, "happen": 15, "baseconfig": [16, 17], "as_dict": [16, 17], "dump": [16, 17], "get_all_argument_valu": [16, 17], "save_config": [16, 17], "save_dataset_config": [16, 17], "_construct_model": [16, 17], "_is_model_config_entri": [16, 17], "_parse_if_model_config_entri": [16, 17], "_serialis": [16, 17], "class_nam": [16, 17], "save_model_config": [16, 17], "get_all_grapnet_class": [16, 17], "get_graphnet_class": [16, 17], "is_graphnet_class": [16, 17], "is_graphnet_modul": [16, 17], "list_all_submodul": [16, 17], "traverse_and_appli": [16, 17], "trainingconfig": [16, 17], "early_stopping_pati": [16, 17], "system": 16, "dir": 16, "search": [16, 18], "filenam": 16, "test_funct": 16, "consist": 16, "msg": 16, "deleg": 16, "repeat": 16, "nb_repeats_allow": 16, "logrecord": 16, "colour": 16, "formatt": 16, "coloredformatt": 16, "log_fold": 16, "place": 16, "termin": 16, "loggeradapt": 16, "onc": 16, "assort": 16, "ep": 16, "basemodel": 17, "yaml": 17, "re": 17, "dataconfig": 17, "transpar": 17, "reproduc": 17, "session": 17, "yml": 17, "anoth": 17, "you": 17, "init_fn": 17, "trainabl": 17, "hyperparamet": 17, "instanti": 17, "thu": 17, "basi": 17, "unambigu": 17, "grapnet": 17, "lookup": 17, "fn_kwarg": 17, "structur": 17, "modul": [18, 19], "page": 18, "graphnet": 19, "packag": 19, "subpackag": 19, "constant": 19, "content": 19}, "objects": {"": [[0, 0, 0, "-", "graphnet"]], "graphnet": [[0, 0, 0, "-", "constants"], [1, 0, 0, "-", "data"], [7, 0, 0, "-", "deployment"], [9, 0, 0, "-", "models"], [14, 0, 0, "-", "pisa"], [15, 0, 0, "-", "training"], [16, 0, 0, "-", "utilities"]], "graphnet.data": [[1, 0, 0, "-", "constants"], [1, 0, 0, "-", "dataconverter"], [1, 0, 0, "-", "dataloader"], [1, 0, 0, "-", "dataset"], [2, 0, 0, "-", "extractors"], [4, 0, 0, "-", "parquet"], [1, 0, 0, "-", "pipeline"], [5, 0, 0, "-", "sqlite"], [6, 0, 0, "-", "utilities"]], "graphnet.data.constants": [[1, 1, 1, "", "FEATURES"], [1, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[1, 2, 1, "", "DEEPCORE"], [1, 2, 1, "", "ICECUBE86"], [1, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[1, 2, 1, "", "DEEPCORE"], [1, 2, 1, "", "ICECUBE86"], [1, 2, 1, "", "UPGRADE"]], "graphnet.data.dataconverter": [[1, 1, 1, "", "DataConverter"], [1, 1, 1, "", "FileSet"], [1, 5, 1, "", "cache_output_files"], [1, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[1, 3, 1, "", "__call__"], [1, 3, 1, "", "__init__"], [1, 3, 1, "", "_extract_data"], [1, 3, 1, "", "_iterate_over_batches_of_files"], [1, 3, 1, "", "_save_filenames"], [1, 3, 1, "", "_update_shared_variables"], [1, 3, 1, "", "execute"], [1, 4, 1, "", "file_suffix"], [1, 3, 1, "", "get_map_function"], [1, 3, 1, "", "merge_files"], [1, 3, 1, "", "save_data"]], "graphnet.data.dataconverter.FileSet": [[1, 2, 1, "", "gcd_file"], [1, 2, 1, "", "i3_file"]], "graphnet.data.dataloader": [[1, 1, 1, "", "DataLoader"], [1, 5, 1, "", "collate_fn"], [1, 5, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "from_dataset_config"]], "graphnet.data.dataset": [[1, 6, 1, "", "ColumnMissingException"], [1, 1, 1, "", "Dataset"]], "graphnet.data.dataset.Dataset": [[1, 3, 1, "", "__getitem__"], [1, 3, 1, "", "__init__"], [1, 3, 1, "", "__len__"], [1, 3, 1, "", "_check_missing_columns"], [1, 3, 1, "", "_construct_datasets"], [1, 3, 1, "", "_create_graph"], [1, 3, 1, "", "_get_all_indices"], [1, 3, 1, "", "_get_dbang_label"], [1, 3, 1, "", "_get_labels"], [1, 3, 1, "", "_get_random_events_from_selection"], [1, 3, 1, "", "_init"], [1, 3, 1, "", "_post_init"], [1, 3, 1, "", "_query"], [1, 3, 1, "", "_query_table"], [1, 3, 1, "", "_remove_missing_columns"], [1, 3, 1, "", "_resolve_string_selection_to_indices"], [1, 3, 1, "", "add_label"], [1, 3, 1, "", "from_config"]], "graphnet.data.extractors": [[2, 0, 0, "-", "i3extractor"], [2, 0, 0, "-", "i3featureextractor"], [2, 0, 0, "-", "i3genericextractor"], [2, 0, 0, "-", "i3hybridrecoextractor"], [2, 0, 0, "-", "i3pisaextractor"], [2, 0, 0, "-", "i3retroextractor"], [2, 0, 0, "-", "i3splinempeextractor"], [2, 0, 0, "-", "i3truthextractor"], [2, 0, 0, "-", "i3tumextractor"], [3, 0, 0, "-", "utilities"]], "graphnet.data.extractors.i3extractor": [[2, 1, 1, "", "I3Extractor"], [2, 1, 1, "", "I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor.I3Extractor": [[2, 3, 1, "", "__call__"], [2, 3, 1, "", "__init__"], [2, 3, 1, "", "_load_gcd_data"], [2, 4, 1, "", "name"], [2, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3extractor.I3ExtractorCollection": [[2, 3, 1, "", "__call__"], [2, 3, 1, "", "__init__"], [2, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3featureextractor": [[2, 1, 1, "", "I3FeatureExtractor"], [2, 1, 1, "", "I3FeatureExtractorIceCube86"], [2, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [2, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [2, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor": [[2, 3, 1, "", "__init__"]], "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86": [[2, 3, 1, "", "__call__"]], "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade": [[2, 3, 1, "", "__call__"]], "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade": [[2, 3, 1, "", "__call__"]], "graphnet.data.extractors.i3genericextractor": [[2, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.i3genericextractor.I3GenericExtractor": [[2, 3, 1, "", "__call__"], [2, 3, 1, "", "__init__"], [2, 3, 1, "", "_cast_mc_tree"], [2, 3, 1, "", "_cast_triggers"], [2, 3, 1, "", "_extract_per_pulse_attribute"], [2, 3, 1, "", "_extract_pulse_series_map"], [2, 3, 1, "", "_flatten_result"], [2, 3, 1, "", "_flatten_result_mctree"], [2, 3, 1, "", "_get_keys"]], "graphnet.data.extractors.i3hybridrecoextractor": [[2, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor": [[2, 3, 1, "", "__call__"], [2, 3, 1, "", "__init__"]], "graphnet.data.extractors.i3pisaextractor": [[2, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor": [[2, 3, 1, "", "__call__"], [2, 3, 1, "", "__init__"]], "graphnet.data.extractors.i3retroextractor": [[2, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.i3retroextractor.I3RetroExtractor": [[2, 3, 1, "", "__call__"], [2, 3, 1, "", "__init__"], [2, 3, 1, "", "_try_get_key"]], "graphnet.data.extractors.i3splinempeextractor": [[2, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor": [[2, 3, 1, "", "__call__"], [2, 3, 1, "", "__init__"]], "graphnet.data.extractors.i3truthextractor": [[2, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.i3truthextractor.I3TruthExtractor": [[2, 3, 1, "", "__call__"], [2, 3, 1, "", "__init__"], [2, 3, 1, "", "_find_data_type"], [2, 3, 1, "", "_get_primary_particle_interaction_type_and_elasticity"], [2, 3, 1, "", "_get_primary_track_energy_and_inelasticity"], [2, 3, 1, "", "_muon_stopped"]], "graphnet.data.extractors.i3tumextractor": [[2, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.i3tumextractor.I3TUMExtractor": [[2, 3, 1, "", "__call__"], [2, 3, 1, "", "__init__"]], "graphnet.data.extractors.utilities": [[3, 0, 0, "-", "collections"], [3, 0, 0, "-", "frames"], [3, 0, 0, "-", "types"]], "graphnet.data.extractors.utilities.collections": [[3, 5, 1, "", "flatten_nested_dictionary"], [3, 5, 1, "", "serialise"], [3, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.utilities.frames": [[3, 5, 1, "", "frame_is_montecarlo"], [3, 5, 1, "", "frame_is_noise"], [3, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.types": [[3, 5, 1, "", "break_cyclic_recursion"], [3, 5, 1, "", "cast_object_to_pure_python"], [3, 5, 1, "", "cast_pulse_series_to_pure_python"], [3, 5, 1, "", "get_member_variables"], [3, 5, 1, "", "is_boost_class"], [3, 5, 1, "", "is_boost_enum"], [3, 5, 1, "", "is_icecube_class"], [3, 5, 1, "", "is_method"], [3, 5, 1, "", "is_type"]], "graphnet.data.parquet": [[4, 0, 0, "-", "parquet_dataconverter"], [4, 0, 0, "-", "parquet_dataset"]], "graphnet.data.parquet.parquet_dataconverter": [[4, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter": [[4, 2, 1, "", "file_suffix"], [4, 3, 1, "", "merge_files"], [4, 3, 1, "", "save_data"]], "graphnet.data.parquet.parquet_dataset": [[4, 1, 1, "", "ParquetDataset"]], "graphnet.data.parquet.parquet_dataset.ParquetDataset": [[4, 3, 1, "", "_format_dictionary_result"]], "graphnet.data.pipeline": [[1, 1, 1, "", "InSQLitePipeline"]], "graphnet.data.pipeline.InSQLitePipeline": [[1, 3, 1, "", "__call__"], [1, 3, 1, "", "__init__"], [1, 3, 1, "", "_create_table"]], "graphnet.data.sqlite": [[5, 0, 0, "-", "sqlite_dataconverter"], [5, 0, 0, "-", "sqlite_dataset"], [5, 0, 0, "-", "sqlite_dataset_perturbed"], [5, 0, 0, "-", "sqlite_selection"], [5, 0, 0, "-", "sqlite_utilities"]], "graphnet.data.sqlite.sqlite_dataconverter": [[5, 1, 1, "", "SQLiteDataConverter"], [5, 5, 1, "", "construct_dataframe"], [5, 5, 1, "", "is_pulsemap_check"]], "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter": [[5, 3, 1, "", "_attach_index"], [5, 3, 1, "", "_create_table"], [5, 3, 1, "", "_extract_everything"], [5, 3, 1, "", "_extract_table_names"], [5, 3, 1, "", "_merge_temporary_databases"], [5, 3, 1, "", "_submit_to_database"], [5, 3, 1, "", "any_pulsemap_is_non_empty"], [5, 2, 1, "", "file_suffix"], [5, 3, 1, "", "merge_files"], [5, 3, 1, "", "save_data"]], "graphnet.data.sqlite.sqlite_dataset": [[5, 1, 1, "", "SQLiteDataset"]], "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset": [[5, 3, 1, "", "_close_connection"], [5, 3, 1, "", "_establish_connection"], [5, 3, 1, "", "_query_table"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[5, 1, 1, "", "SQLiteDatasetPerturbed"]], "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed": [[5, 3, 1, "", "__getitem__"], [5, 3, 1, "", "__init__"]], "graphnet.data.sqlite.sqlite_selection": [[5, 5, 1, "", "get_desired_event_numbers"], [5, 5, 1, "", "get_equal_proportion_neutrino_indices"], [5, 5, 1, "", "get_even_dbang_selection"], [5, 5, 1, "", "get_even_signal_background_indicies"], [5, 5, 1, "", "get_even_track_cascade_indicies"]], "graphnet.data.sqlite.sqlite_utilities": [[5, 5, 1, "", "attach_index"], [5, 5, 1, "", "create_table"], [5, 5, 1, "", "run_sql_code"], [5, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities": [[6, 0, 0, "-", "parquet_to_sqlite"], [6, 0, 0, "-", "random"]], "graphnet.data.utilities.parquet_to_sqlite": [[6, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter": [[6, 3, 1, "", "__init__"], [6, 3, 1, "", "_save_config"], [6, 3, 1, "", "run"]], "graphnet.data.utilities.random": [[6, 5, 1, "", "pairwise_shuffle"]], "graphnet.models": [[9, 0, 0, "-", "coarsening"], [10, 0, 0, "-", "components"], [11, 0, 0, "-", "detector"], [12, 0, 0, "-", "gnn"], [9, 0, 0, "-", "graph_builders"], [9, 0, 0, "-", "model"], [9, 0, 0, "-", "standard_model"], [13, 0, 0, "-", "task"], [9, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[9, 1, 1, "", "AttributeCoarsening"], [9, 1, 1, "", "Coarsening"], [9, 1, 1, "", "CustomDOMCoarsening"], [9, 1, 1, "", "DOMAndTimeWindowCoarsening"], [9, 1, 1, "", "DOMCoarsening"], [9, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.AttributeCoarsening": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "_perform_clustering"]], "graphnet.models.coarsening.Coarsening": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "_additional_features"], [9, 3, 1, "", "_perform_clustering"], [9, 3, 1, "", "_transfer_attributes"], [9, 3, 1, "", "forward"], [9, 2, 1, "", "reduce_options"]], "graphnet.models.coarsening.CustomDOMCoarsening": [[9, 3, 1, "", "_additional_features"]], "graphnet.models.coarsening.DOMAndTimeWindowCoarsening": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "_perform_clustering"]], "graphnet.models.coarsening.DOMCoarsening": [[9, 3, 1, "", "_perform_clustering"]], "graphnet.models.components": [[10, 0, 0, "-", "layers"], [10, 0, 0, "-", "pool"]], "graphnet.models.components.layers": [[10, 1, 1, "", "DynEdgeConv"]], "graphnet.models.components.layers.DynEdgeConv": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "forward"]], "graphnet.models.components.pool": [[10, 5, 1, "", "_group_identical"], [10, 5, 1, "", "group_by"], [10, 5, 1, "", "group_pulses_to_dom"], [10, 5, 1, "", "group_pulses_to_pmt"], [10, 5, 1, "", "min_pool"], [10, 5, 1, "", "min_pool_x"], [10, 5, 1, "", "std_pool"], [10, 5, 1, "", "std_pool_x"], [10, 5, 1, "", "sum_pool"], [10, 5, 1, "", "sum_pool_and_distribute"], [10, 5, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[11, 0, 0, "-", "detector"], [11, 0, 0, "-", "icecube"], [11, 0, 0, "-", "prototype"]], "graphnet.models.detector.detector": [[11, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "_forward"], [11, 4, 1, "", "features"], [11, 3, 1, "", "forward"], [11, 4, 1, "", "nb_inputs"], [11, 4, 1, "", "nb_outputs"]], "graphnet.models.detector.icecube": [[11, 1, 1, "", "IceCube86"], [11, 1, 1, "", "IceCubeDeepCore"], [11, 1, 1, "", "IceCubeUpgrade"], [11, 1, 1, "", "IceCubeUpgrade_V2"]], "graphnet.models.detector.icecube.IceCube86": [[11, 3, 1, "", "_forward"], [11, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[11, 3, 1, "", "_forward"], [11, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[11, 3, 1, "", "_forward"], [11, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeUpgrade_V2": [[11, 3, 1, "", "_forward"], [11, 2, 1, "", "features"], [11, 4, 1, "", "nb_outputs"]], "graphnet.models.detector.prototype": [[11, 1, 1, "", "Prototype"]], "graphnet.models.detector.prototype.Prototype": [[11, 3, 1, "", "_forward"], [11, 2, 1, "", "features"]], "graphnet.models.gnn": [[12, 0, 0, "-", "convnet"], [12, 0, 0, "-", "dynedge"], [12, 0, 0, "-", "dynedge_jinst"], [12, 0, 0, "-", "gnn"]], "graphnet.models.gnn.convnet": [[12, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[12, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "_calculate_global_variables"], [12, 3, 1, "", "_construct_layers"], [12, 3, 1, "", "_global_pooling"], [12, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[12, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[12, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "forward"], [12, 4, 1, "", "nb_inputs"], [12, 4, 1, "", "nb_outputs"]], "graphnet.models.graph_builders": [[9, 1, 1, "", "EuclideanGraphBuilder"], [9, 1, 1, "", "GraphBuilder"], [9, 1, 1, "", "KNNGraphBuilder"], [9, 1, 1, "", "RadialGraphBuilder"]], "graphnet.models.graph_builders.EuclideanGraphBuilder": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "forward"]], "graphnet.models.graph_builders.KNNGraphBuilder": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "forward"]], "graphnet.models.graph_builders.RadialGraphBuilder": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "forward"]], "graphnet.models.model": [[9, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[9, 3, 1, "", "fit"], [9, 3, 1, "", "forward"], [9, 3, 1, "", "from_config"], [9, 3, 1, "", "load"], [9, 3, 1, "", "load_state_dict"], [9, 3, 1, "", "predict"], [9, 3, 1, "", "predict_as_dataframe"], [9, 3, 1, "", "save"], [9, 3, 1, "", "save_state_dict"]], "graphnet.models.standard_model": [[9, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "compute_loss"], [9, 3, 1, "", "configure_optimizers"], [9, 3, 1, "", "forward"], [9, 3, 1, "", "inference"], [9, 3, 1, "", "predict"], [9, 3, 1, "", "shared_step"], [9, 3, 1, "", "train"], [9, 3, 1, "", "training_step"], [9, 3, 1, "", "validation_step"]], "graphnet.models.task": [[13, 0, 0, "-", "classification"], [13, 0, 0, "-", "reconstruction"], [13, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[13, 1, 1, "", "BinaryClassificationTask"], [13, 1, 1, "", "BinaryClassificationTaskLogits"], [13, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[13, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[13, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[13, 1, 1, "", "AzimuthReconstruction"], [13, 1, 1, "", "AzimuthReconstructionWithKappa"], [13, 1, 1, "", "DirectionReconstructionWithKappa"], [13, 1, 1, "", "EnergyReconstruction"], [13, 1, 1, "", "EnergyReconstructionWithPower"], [13, 1, 1, "", "EnergyReconstructionWithUncertainty"], [13, 1, 1, "", "InelasticityReconstruction"], [13, 1, 1, "", "PositionReconstruction"], [13, 1, 1, "", "TimeReconstruction"], [13, 1, 1, "", "VertexReconstruction"], [13, 1, 1, "", "ZenithReconstruction"], [13, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[13, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[13, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[13, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[13, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[13, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[13, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[13, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[13, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[13, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[13, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[13, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[13, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[13, 1, 1, "", "IdentityTask"], [13, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[13, 3, 1, "", "__init__"], [13, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[13, 3, 1, "", "__init__"], [13, 3, 1, "", "_forward"], [13, 3, 1, "", "_validate_and_set_transforms"], [13, 3, 1, "", "compute_loss"], [13, 3, 1, "", "forward"], [13, 3, 1, "", "inference"], [13, 4, 1, "", "nb_inputs"], [13, 3, 1, "", "train_eval"]], "graphnet.models.utils": [[9, 5, 1, "", "calculate_distance_matrix"], [9, 5, 1, "", "calculate_xyzt_homophily"], [9, 5, 1, "", "knn_graph_batch"]], "graphnet.pisa": [[14, 0, 0, "-", "plotting"]], "graphnet.pisa.plotting": [[14, 5, 1, "", "plot_1D_contour"], [14, 5, 1, "", "plot_2D_contour"], [14, 5, 1, "", "read_entry"]], "graphnet.training": [[15, 0, 0, "-", "callbacks"], [15, 0, 0, "-", "labels"], [15, 0, 0, "-", "loss_functions"], [15, 0, 0, "-", "utils"], [15, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[15, 1, 1, "", "PiecewiseLinearLR"], [15, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[15, 3, 1, "", "__init__"], [15, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[15, 3, 1, "", "get_metrics"], [15, 3, 1, "", "init_predict_tqdm"], [15, 3, 1, "", "init_test_tqdm"], [15, 3, 1, "", "init_train_tqdm"], [15, 3, 1, "", "init_validation_tqdm"], [15, 3, 1, "", "on_train_epoch_end"], [15, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[15, 1, 1, "", "Direction"], [15, 1, 1, "", "Label"]], "graphnet.training.labels.Direction": [[15, 3, 1, "", "__call__"], [15, 3, 1, "", "__init__"]], "graphnet.training.labels.Label": [[15, 3, 1, "", "__call__"], [15, 3, 1, "", "__init__"]], "graphnet.training.loss_functions": [[15, 1, 1, "", "BinaryCrossEntropyLoss"], [15, 1, 1, "", "CrossEntropyLoss"], [15, 1, 1, "", "EuclideanDistanceLoss"], [15, 1, 1, "", "LogCMK"], [15, 1, 1, "", "LogCoshLoss"], [15, 1, 1, "", "LossFunction"], [15, 1, 1, "", "MSELoss"], [15, 1, 1, "", "RMSELoss"], [15, 1, 1, "", "VonMisesFisher2DLoss"], [15, 1, 1, "", "VonMisesFisher3DLoss"], [15, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.CrossEntropyLoss": [[15, 3, 1, "", "__init__"], [15, 3, 1, "", "_forward"]], "graphnet.training.loss_functions.EuclideanDistanceLoss": [[15, 3, 1, "", "_forward"]], "graphnet.training.loss_functions.LogCMK": [[15, 3, 1, "", "backward"], [15, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LogCoshLoss": [[15, 3, 1, "", "_forward"], [15, 3, 1, "", "_log_cosh"]], "graphnet.training.loss_functions.LossFunction": [[15, 3, 1, "", "__init__"], [15, 3, 1, "", "_forward"], [15, 3, 1, "", "forward"]], "graphnet.training.loss_functions.MSELoss": [[15, 3, 1, "", "_forward"]], "graphnet.training.loss_functions.RMSELoss": [[15, 3, 1, "", "_forward"]], "graphnet.training.loss_functions.VonMisesFisher2DLoss": [[15, 3, 1, "", "_forward"]], "graphnet.training.loss_functions.VonMisesFisher3DLoss": [[15, 3, 1, "", "_forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[15, 3, 1, "", "_evaluate"], [15, 3, 1, "", "log_cmk"], [15, 3, 1, "", "log_cmk_approx"], [15, 3, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[15, 5, 1, "", "get_predictions"], [15, 5, 1, "", "make_dataloader"], [15, 5, 1, "", "make_train_validation_dataloader"], [15, 5, 1, "", "save_results"]], "graphnet.training.weight_fitting": [[15, 1, 1, "", "BjoernLow"], [15, 1, 1, "", "Uniform"], [15, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.BjoernLow": [[15, 3, 1, "", "_fit_weights"]], "graphnet.training.weight_fitting.Uniform": [[15, 3, 1, "", "_fit_weights"]], "graphnet.training.weight_fitting.WeightFitter": [[15, 3, 1, "", "__init__"], [15, 3, 1, "", "_get_truth"], [15, 3, 1, "", "fit"]], "graphnet.utilities": [[17, 0, 0, "-", "config"], [16, 0, 0, "-", "decorators"], [16, 0, 0, "-", "filesys"], [16, 0, 0, "-", "imports"], [16, 0, 0, "-", "logging"], [16, 0, 0, "-", "maths"]], "graphnet.utilities.config": [[17, 0, 0, "-", "base_config"], [17, 0, 0, "-", "configurable"], [17, 0, 0, "-", "dataset_config"], [17, 0, 0, "-", "model_config"], [17, 0, 0, "-", "parsing"], [17, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[17, 1, 1, "", "BaseConfig"], [17, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[17, 3, 1, "", "as_dict"], [17, 3, 1, "", "dump"], [17, 3, 1, "", "load"]], "graphnet.utilities.config.configurable": [[17, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[17, 3, 1, "", "__init__"], [17, 4, 1, "", "config"], [17, 3, 1, "", "from_config"], [17, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[17, 1, 1, "", "DatasetConfig"], [17, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[17, 3, 1, "", "__init__"], [17, 2, 1, "", "features"], [17, 2, 1, "", "index_column"], [17, 2, 1, "", "loss_weight_column"], [17, 2, 1, "", "loss_weight_default_value"], [17, 2, 1, "", "loss_weight_table"], [17, 2, 1, "", "node_truth"], [17, 2, 1, "", "node_truth_table"], [17, 2, 1, "", "path"], [17, 2, 1, "", "pulsemaps"], [17, 2, 1, "", "seed"], [17, 2, 1, "", "selection"], [17, 2, 1, "", "string_selection"], [17, 2, 1, "", "truth"], [17, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[17, 1, 1, "", "ModelConfig"], [17, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[17, 3, 1, "", "__init__"], [17, 3, 1, "", "_construct_model"], [17, 3, 1, "", "_is_model_config_entry"], [17, 3, 1, "", "_parse_if_model_config_entry"], [17, 3, 1, "", "_serialise"], [17, 2, 1, "", "arguments"], [17, 3, 1, "", "as_dict"], [17, 2, 1, "", "class_name"]], "graphnet.utilities.config.parsing": [[17, 5, 1, "", "get_all_grapnet_classes"], [17, 5, 1, "", "get_graphnet_classes"], [17, 5, 1, "", "is_graphnet_class"], [17, 5, 1, "", "is_graphnet_module"], [17, 5, 1, "", "list_all_submodules"], [17, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[17, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[17, 2, 1, "", "dataloader"], [17, 2, 1, "", "early_stopping_patience"], [17, 2, 1, "", "fit"], [17, 2, 1, "", "target"]], "graphnet.utilities.filesys": [[16, 5, 1, "", "find_i3_files"], [16, 5, 1, "", "has_extension"], [16, 5, 1, "", "is_gcd_file"], [16, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[16, 5, 1, "", "has_icecube_package"], [16, 5, 1, "", "has_torch_package"], [16, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[16, 1, 1, "", "LoggerMixin"], [16, 1, 1, "", "RepeatFilter"], [16, 5, 1, "", "get_formatters"], [16, 5, 1, "", "get_logger"], [16, 5, 1, "", "set_logging_level"], [16, 5, 1, "", "warn_once"]], "graphnet.utilities.logging.LoggerMixin": [[16, 3, 1, "", "_get_logger"], [16, 3, 1, "", "critical"], [16, 3, 1, "", "debug"], [16, 3, 1, "", "error"], [16, 3, 1, "", "info"], [16, 3, 1, "", "warning"]], "graphnet.utilities.logging.RepeatFilter": [[16, 3, 1, "", "__init__"], [16, 3, 1, "", "filter"]], "graphnet.utilities.maths": [[16, 5, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "subpackag": [0, 1, 2, 7, 9, 16], "submodul": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "constant": [0, 1], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "data": [1, 2, 3, 4, 5, 6], "dataconvert": 1, "dataload": 1, "dataset": 1, "pipelin": 1, "extractor": [2, 3], "i3extractor": 2, "i3featureextractor": 2, "i3genericextractor": 2, "i3hybridrecoextractor": 2, "i3pisaextractor": 2, "i3retroextractor": 2, "i3splinempeextractor": 2, "i3truthextractor": 2, "i3tumextractor": 2, "util": [3, 6, 9, 15, 16, 17], "collect": 3, "frame": 3, "type": 3, "parquet": 4, "parquet_dataconvert": 4, "parquet_dataset": 4, "sqlite": 5, "sqlite_dataconvert": 5, "sqlite_dataset": 5, "sqlite_dataset_perturb": 5, "sqlite_select": 5, "sqlite_util": 5, "parquet_to_sqlit": 6, "random": 6, "deploy": [7, 8], "i3modul": 8, "graphnet_modul": 8, "model": [9, 10, 11, 12, 13], "coarsen": 9, "graph_build": 9, "standard_model": 9, "compon": 10, "layer": 10, "pool": 10, "detector": 11, "icecub": 11, "prototyp": 11, "gnn": 12, "convnet": 12, "dynedg": 12, "dynedge_jinst": 12, "task": 13, "classif": 13, "reconstruct": 13, "pisa": 14, "fit": 14, "plot": 14, "train": 15, "callback": 15, "label": 15, "loss_funct": 15, "weight_fit": 15, "decor": 16, "filesi": 16, "import": 16, "log": 16, "math": 16, "config": 17, "base_config": 17, "configur": 17, "dataset_config": 17, "model_config": 17, "pars": 17, "training_config": 17, "welcom": 18, "": 18, "document": 18, "indic": 18, "tabl": 18, "src": 19}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"graphnet package": [[0, "graphnet-package"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [2, "subpackages"], [7, "subpackages"], [9, "subpackages"], [16, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"]], "graphnet.constants module": [[0, "module-graphnet.constants"]], "Module contents": [[0, "module-graphnet"], [1, "module-graphnet.data"], [2, "module-graphnet.data.extractors"], [3, "module-graphnet.data.extractors.utilities"], [4, "module-graphnet.data.parquet"], [5, "module-graphnet.data.sqlite"], [6, "module-graphnet.data.utilities"], [7, "module-graphnet.deployment"], [8, "module-contents"], [9, "module-graphnet.models"], [10, "module-graphnet.models.components"], [11, "module-graphnet.models.detector"], [12, "module-graphnet.models.gnn"], [13, "module-graphnet.models.task"], [14, "module-graphnet.pisa"], [15, "module-graphnet.training"], [16, "module-graphnet.utilities"], [17, "module-graphnet.utilities.config"]], "graphnet.data package": [[1, "graphnet-data-package"]], "graphnet.data.constants module": [[1, "module-graphnet.data.constants"]], "graphnet.data.dataconverter module": [[1, "module-graphnet.data.dataconverter"]], "graphnet.data.dataloader module": [[1, "module-graphnet.data.dataloader"]], "graphnet.data.dataset module": [[1, "module-graphnet.data.dataset"]], "graphnet.data.pipeline module": [[1, "module-graphnet.data.pipeline"]], "graphnet.data.extractors package": [[2, "graphnet-data-extractors-package"]], "graphnet.data.extractors.i3extractor module": [[2, "module-graphnet.data.extractors.i3extractor"]], "graphnet.data.extractors.i3featureextractor module": [[2, "module-graphnet.data.extractors.i3featureextractor"]], "graphnet.data.extractors.i3genericextractor module": [[2, "module-graphnet.data.extractors.i3genericextractor"]], "graphnet.data.extractors.i3hybridrecoextractor module": [[2, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "graphnet.data.extractors.i3pisaextractor module": [[2, "module-graphnet.data.extractors.i3pisaextractor"]], "graphnet.data.extractors.i3retroextractor module": [[2, "module-graphnet.data.extractors.i3retroextractor"]], "graphnet.data.extractors.i3splinempeextractor module": [[2, "module-graphnet.data.extractors.i3splinempeextractor"]], "graphnet.data.extractors.i3truthextractor module": [[2, "module-graphnet.data.extractors.i3truthextractor"]], "graphnet.data.extractors.i3tumextractor module": [[2, "module-graphnet.data.extractors.i3tumextractor"]], "graphnet.data.extractors.utilities package": [[3, "graphnet-data-extractors-utilities-package"]], "graphnet.data.extractors.utilities.collections module": [[3, "module-graphnet.data.extractors.utilities.collections"]], "graphnet.data.extractors.utilities.frames module": [[3, "module-graphnet.data.extractors.utilities.frames"]], "graphnet.data.extractors.utilities.types module": [[3, "module-graphnet.data.extractors.utilities.types"]], "graphnet.data.parquet package": [[4, "graphnet-data-parquet-package"]], "graphnet.data.parquet.parquet_dataconverter module": [[4, "module-graphnet.data.parquet.parquet_dataconverter"]], "graphnet.data.parquet.parquet_dataset module": [[4, "module-graphnet.data.parquet.parquet_dataset"]], "graphnet.data.sqlite package": [[5, "graphnet-data-sqlite-package"]], "graphnet.data.sqlite.sqlite_dataconverter module": [[5, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "graphnet.data.sqlite.sqlite_dataset module": [[5, "module-graphnet.data.sqlite.sqlite_dataset"]], "graphnet.data.sqlite.sqlite_dataset_perturbed module": [[5, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "graphnet.data.sqlite.sqlite_selection module": [[5, "module-graphnet.data.sqlite.sqlite_selection"]], "graphnet.data.sqlite.sqlite_utilities module": [[5, "module-graphnet.data.sqlite.sqlite_utilities"]], "graphnet.data.utilities package": [[6, "graphnet-data-utilities-package"]], "graphnet.data.utilities.parquet_to_sqlite module": [[6, "module-graphnet.data.utilities.parquet_to_sqlite"]], "graphnet.data.utilities.random module": [[6, "module-graphnet.data.utilities.random"]], "graphnet.deployment package": [[7, "graphnet-deployment-package"]], "graphnet.deployment.i3modules package": [[8, "graphnet-deployment-i3modules-package"]], "graphnet.deployment.i3modules.graphnet_module module": [[8, "graphnet-deployment-i3modules-graphnet-module-module"]], "graphnet.models package": [[9, "graphnet-models-package"]], "graphnet.models.coarsening module": [[9, "module-graphnet.models.coarsening"]], "graphnet.models.graph_builders module": [[9, "module-graphnet.models.graph_builders"]], "graphnet.models.model module": [[9, "module-graphnet.models.model"]], "graphnet.models.standard_model module": [[9, "module-graphnet.models.standard_model"]], "graphnet.models.utils module": [[9, "module-graphnet.models.utils"]], "graphnet.models.components package": [[10, "graphnet-models-components-package"]], "graphnet.models.components.layers module": [[10, "module-graphnet.models.components.layers"]], "graphnet.models.components.pool module": [[10, "module-graphnet.models.components.pool"]], "graphnet.models.detector package": [[11, "graphnet-models-detector-package"]], "graphnet.models.detector.detector module": [[11, "module-graphnet.models.detector.detector"]], "graphnet.models.detector.icecube module": [[11, "module-graphnet.models.detector.icecube"]], "graphnet.models.detector.prototype module": [[11, "module-graphnet.models.detector.prototype"]], "graphnet.models.gnn package": [[12, "graphnet-models-gnn-package"]], "graphnet.models.gnn.convnet module": [[12, "module-graphnet.models.gnn.convnet"]], "graphnet.models.gnn.dynedge module": [[12, "module-graphnet.models.gnn.dynedge"]], "graphnet.models.gnn.dynedge_jinst module": [[12, "module-graphnet.models.gnn.dynedge_jinst"]], "graphnet.models.gnn.gnn module": [[12, "module-graphnet.models.gnn.gnn"]], "graphnet.models.task package": [[13, "graphnet-models-task-package"]], "graphnet.models.task.classification module": [[13, "module-graphnet.models.task.classification"]], "graphnet.models.task.reconstruction module": [[13, "module-graphnet.models.task.reconstruction"]], "graphnet.models.task.task module": [[13, "module-graphnet.models.task.task"]], "graphnet.pisa package": [[14, "graphnet-pisa-package"]], "graphnet.pisa.fitting module": [[14, "graphnet-pisa-fitting-module"]], "graphnet.pisa.plotting module": [[14, "module-graphnet.pisa.plotting"]], "graphnet.training package": [[15, "graphnet-training-package"]], "graphnet.training.callbacks module": [[15, "module-graphnet.training.callbacks"]], "graphnet.training.labels module": [[15, "module-graphnet.training.labels"]], "graphnet.training.loss_functions module": [[15, "module-graphnet.training.loss_functions"]], "graphnet.training.utils module": [[15, "module-graphnet.training.utils"]], "graphnet.training.weight_fitting module": [[15, "module-graphnet.training.weight_fitting"]], "graphnet.utilities package": [[16, "graphnet-utilities-package"]], "graphnet.utilities.decorators module": [[16, "module-graphnet.utilities.decorators"]], "graphnet.utilities.filesys module": [[16, "module-graphnet.utilities.filesys"]], "graphnet.utilities.imports module": [[16, "module-graphnet.utilities.imports"]], "graphnet.utilities.logging module": [[16, "module-graphnet.utilities.logging"]], "graphnet.utilities.maths module": [[16, "module-graphnet.utilities.maths"]], "graphnet.utilities.config package": [[17, "graphnet-utilities-config-package"]], "graphnet.utilities.config.base_config module": [[17, "module-graphnet.utilities.config.base_config"]], "graphnet.utilities.config.configurable module": [[17, "module-graphnet.utilities.config.configurable"]], "graphnet.utilities.config.dataset_config module": [[17, "module-graphnet.utilities.config.dataset_config"]], "graphnet.utilities.config.model_config module": [[17, "module-graphnet.utilities.config.model_config"]], "graphnet.utilities.config.parsing module": [[17, "module-graphnet.utilities.config.parsing"]], "graphnet.utilities.config.training_config module": [[17, "module-graphnet.utilities.config.training_config"]], "Welcome to GraphNeT\u2019s documentation!": [[18, "welcome-to-graphnet-s-documentation"]], "Indices and tables": [[18, "indices-and-tables"]], "src": [[19, "src"]]}, "indexentries": {"graphnet": [[0, "module-graphnet"]], "graphnet.constants": [[0, "module-graphnet.constants"]], "module": [[0, "module-graphnet"], [0, "module-graphnet.constants"], [1, "module-graphnet.data"], [1, "module-graphnet.data.constants"], [1, "module-graphnet.data.dataconverter"], [1, "module-graphnet.data.dataloader"], [1, "module-graphnet.data.dataset"], [1, "module-graphnet.data.pipeline"], [2, "module-graphnet.data.extractors"], [2, "module-graphnet.data.extractors.i3extractor"], [2, "module-graphnet.data.extractors.i3featureextractor"], [2, "module-graphnet.data.extractors.i3genericextractor"], [2, "module-graphnet.data.extractors.i3hybridrecoextractor"], [2, "module-graphnet.data.extractors.i3pisaextractor"], [2, "module-graphnet.data.extractors.i3retroextractor"], [2, "module-graphnet.data.extractors.i3splinempeextractor"], [2, "module-graphnet.data.extractors.i3truthextractor"], [2, "module-graphnet.data.extractors.i3tumextractor"], [3, "module-graphnet.data.extractors.utilities"], [3, "module-graphnet.data.extractors.utilities.collections"], [3, "module-graphnet.data.extractors.utilities.frames"], [3, "module-graphnet.data.extractors.utilities.types"], [4, "module-graphnet.data.parquet"], [4, "module-graphnet.data.parquet.parquet_dataconverter"], [4, "module-graphnet.data.parquet.parquet_dataset"], [5, "module-graphnet.data.sqlite"], [5, "module-graphnet.data.sqlite.sqlite_dataconverter"], [5, "module-graphnet.data.sqlite.sqlite_dataset"], [5, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"], [5, "module-graphnet.data.sqlite.sqlite_selection"], [5, "module-graphnet.data.sqlite.sqlite_utilities"], [6, "module-graphnet.data.utilities"], [6, "module-graphnet.data.utilities.parquet_to_sqlite"], [6, "module-graphnet.data.utilities.random"], [7, "module-graphnet.deployment"], [9, "module-graphnet.models"], [9, "module-graphnet.models.coarsening"], [9, "module-graphnet.models.graph_builders"], [9, "module-graphnet.models.model"], [9, "module-graphnet.models.standard_model"], [9, "module-graphnet.models.utils"], [10, "module-graphnet.models.components"], [10, "module-graphnet.models.components.layers"], [10, "module-graphnet.models.components.pool"], [11, "module-graphnet.models.detector"], [11, "module-graphnet.models.detector.detector"], [11, "module-graphnet.models.detector.icecube"], [11, "module-graphnet.models.detector.prototype"], [12, "module-graphnet.models.gnn"], [12, "module-graphnet.models.gnn.convnet"], [12, "module-graphnet.models.gnn.dynedge"], [12, "module-graphnet.models.gnn.dynedge_jinst"], [12, "module-graphnet.models.gnn.gnn"], [13, "module-graphnet.models.task"], [13, "module-graphnet.models.task.classification"], [13, "module-graphnet.models.task.reconstruction"], [13, "module-graphnet.models.task.task"], [14, "module-graphnet.pisa"], [14, "module-graphnet.pisa.plotting"], [15, "module-graphnet.training"], [15, "module-graphnet.training.callbacks"], [15, "module-graphnet.training.labels"], [15, "module-graphnet.training.loss_functions"], [15, "module-graphnet.training.utils"], [15, "module-graphnet.training.weight_fitting"], [16, "module-graphnet.utilities"], [16, "module-graphnet.utilities.decorators"], [16, "module-graphnet.utilities.filesys"], [16, "module-graphnet.utilities.imports"], [16, "module-graphnet.utilities.logging"], [16, "module-graphnet.utilities.maths"], [17, "module-graphnet.utilities.config"], [17, "module-graphnet.utilities.config.base_config"], [17, "module-graphnet.utilities.config.configurable"], [17, "module-graphnet.utilities.config.dataset_config"], [17, "module-graphnet.utilities.config.model_config"], [17, "module-graphnet.utilities.config.parsing"], [17, "module-graphnet.utilities.config.training_config"]], "columnmissingexception": [[1, "graphnet.data.dataset.ColumnMissingException"]], "deepcore (graphnet.data.constants.features attribute)": [[1, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[1, "graphnet.data.constants.TRUTH.DEEPCORE"]], "dataconverter (class in graphnet.data.dataconverter)": [[1, "graphnet.data.dataconverter.DataConverter"]], "dataloader (class in graphnet.data.dataloader)": [[1, "graphnet.data.dataloader.DataLoader"]], "dataset (class in graphnet.data.dataset)": [[1, "graphnet.data.dataset.Dataset"]], "features (class in graphnet.data.constants)": [[1, "graphnet.data.constants.FEATURES"]], "fileset (class in graphnet.data.dataconverter)": [[1, "graphnet.data.dataconverter.FileSet"]], "icecube86 (graphnet.data.constants.features attribute)": [[1, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[1, "graphnet.data.constants.TRUTH.ICECUBE86"]], "insqlitepipeline (class in graphnet.data.pipeline)": [[1, "graphnet.data.pipeline.InSQLitePipeline"]], "truth (class in graphnet.data.constants)": [[1, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[1, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[1, "graphnet.data.constants.TRUTH.UPGRADE"]], "__call__() (graphnet.data.dataconverter.dataconverter method)": [[1, "graphnet.data.dataconverter.DataConverter.__call__"]], "__call__() (graphnet.data.pipeline.insqlitepipeline method)": [[1, "graphnet.data.pipeline.InSQLitePipeline.__call__"]], "__getitem__() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset.__getitem__"]], "__init__() (graphnet.data.dataconverter.dataconverter method)": [[1, "graphnet.data.dataconverter.DataConverter.__init__"]], "__init__() (graphnet.data.dataloader.dataloader method)": [[1, "graphnet.data.dataloader.DataLoader.__init__"]], "__init__() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset.__init__"]], "__init__() (graphnet.data.pipeline.insqlitepipeline method)": [[1, "graphnet.data.pipeline.InSQLitePipeline.__init__"]], "__len__() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset.__len__"]], "_check_missing_columns() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset._check_missing_columns"]], "_construct_datasets() (graphnet.data.dataset.dataset class method)": [[1, "graphnet.data.dataset.Dataset._construct_datasets"]], "_create_graph() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset._create_graph"]], "_create_table() (graphnet.data.pipeline.insqlitepipeline method)": [[1, "graphnet.data.pipeline.InSQLitePipeline._create_table"]], "_extract_data() (graphnet.data.dataconverter.dataconverter method)": [[1, "graphnet.data.dataconverter.DataConverter._extract_data"]], "_get_all_indices() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset._get_all_indices"]], "_get_dbang_label() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset._get_dbang_label"]], "_get_labels() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset._get_labels"]], "_get_random_events_from_selection() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset._get_random_events_from_selection"]], "_init() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset._init"]], "_iterate_over_batches_of_files() (graphnet.data.dataconverter.dataconverter method)": [[1, "graphnet.data.dataconverter.DataConverter._iterate_over_batches_of_files"]], "_post_init() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset._post_init"]], "_query() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset._query"]], "_query_table() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset._query_table"]], "_remove_missing_columns() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset._remove_missing_columns"]], "_resolve_string_selection_to_indices() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset._resolve_string_selection_to_indices"]], "_save_filenames() (graphnet.data.dataconverter.dataconverter method)": [[1, "graphnet.data.dataconverter.DataConverter._save_filenames"]], "_update_shared_variables() (graphnet.data.dataconverter.dataconverter method)": [[1, "graphnet.data.dataconverter.DataConverter._update_shared_variables"]], "add_label() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset.add_label"]], "cache_output_files() (in module graphnet.data.dataconverter)": [[1, "graphnet.data.dataconverter.cache_output_files"]], "collate_fn() (in module graphnet.data.dataloader)": [[1, "graphnet.data.dataloader.collate_fn"]], "do_shuffle() (in module graphnet.data.dataloader)": [[1, "graphnet.data.dataloader.do_shuffle"]], "execute() (graphnet.data.dataconverter.dataconverter method)": [[1, "graphnet.data.dataconverter.DataConverter.execute"]], "file_suffix (graphnet.data.dataconverter.dataconverter property)": [[1, "graphnet.data.dataconverter.DataConverter.file_suffix"]], "from_config() (graphnet.data.dataset.dataset class method)": [[1, "graphnet.data.dataset.Dataset.from_config"]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[1, "graphnet.data.dataloader.DataLoader.from_dataset_config"]], "gcd_file (graphnet.data.dataconverter.fileset attribute)": [[1, "graphnet.data.dataconverter.FileSet.gcd_file"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[1, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data": [[1, "module-graphnet.data"]], "graphnet.data.constants": [[1, "module-graphnet.data.constants"]], "graphnet.data.dataconverter": [[1, "module-graphnet.data.dataconverter"]], "graphnet.data.dataloader": [[1, "module-graphnet.data.dataloader"]], "graphnet.data.dataset": [[1, "module-graphnet.data.dataset"]], "graphnet.data.pipeline": [[1, "module-graphnet.data.pipeline"]], "i3_file (graphnet.data.dataconverter.fileset attribute)": [[1, "graphnet.data.dataconverter.FileSet.i3_file"]], "init_global_index() (in module graphnet.data.dataconverter)": [[1, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[1, "graphnet.data.dataconverter.DataConverter.merge_files"]], "save_data() (graphnet.data.dataconverter.dataconverter method)": [[1, "graphnet.data.dataconverter.DataConverter.save_data"]], "i3extractor (class in graphnet.data.extractors.i3extractor)": [[2, "graphnet.data.extractors.i3extractor.I3Extractor"]], "i3extractorcollection (class in graphnet.data.extractors.i3extractor)": [[2, "graphnet.data.extractors.i3extractor.I3ExtractorCollection"]], "i3featureextractor (class in graphnet.data.extractors.i3featureextractor)": [[2, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.i3featureextractor)": [[2, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.i3featureextractor)": [[2, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[2, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.i3hybridrecoextractor)": [[2, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "i3genericextractor (class in graphnet.data.extractors.i3genericextractor)": [[2, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor"]], "i3pisaextractor (class in graphnet.data.extractors.i3pisaextractor)": [[2, "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[2, "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "i3retroextractor (class in graphnet.data.extractors.i3retroextractor)": [[2, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.i3splinempeextractor)": [[2, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor"]], "i3tumextractor (class in graphnet.data.extractors.i3tumextractor)": [[2, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor"]], "i3truthextractor (class in graphnet.data.extractors.i3truthextractor)": [[2, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor"]], "__call__() (graphnet.data.extractors.i3extractor.i3extractor method)": [[2, "graphnet.data.extractors.i3extractor.I3Extractor.__call__"]], "__call__() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[2, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.__call__"]], "__call__() (graphnet.data.extractors.i3featureextractor.i3featureextractoricecube86 method)": [[2, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86.__call__"]], "__call__() (graphnet.data.extractors.i3featureextractor.i3featureextractoricecubeupgrade method)": [[2, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade.__call__"]], "__call__() (graphnet.data.extractors.i3featureextractor.i3pulsenoisetruthflagicecubeupgrade method)": [[2, "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade.__call__"]], "__call__() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[2, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3hybridrecoextractor.i3galacticplanehybridrecoextractor method)": [[2, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3pisaextractor.i3pisaextractor method)": [[2, "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3retroextractor.i3retroextractor method)": [[2, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3splinempeextractor.i3splinempeicextractor method)": [[2, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[2, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3tumextractor.i3tumextractor method)": [[2, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor.__call__"]], "__init__() (graphnet.data.extractors.i3extractor.i3extractor method)": [[2, "graphnet.data.extractors.i3extractor.I3Extractor.__init__"]], "__init__() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[2, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.__init__"]], "__init__() (graphnet.data.extractors.i3featureextractor.i3featureextractor method)": [[2, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[2, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3hybridrecoextractor.i3galacticplanehybridrecoextractor method)": [[2, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3pisaextractor.i3pisaextractor method)": [[2, "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3retroextractor.i3retroextractor method)": [[2, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3splinempeextractor.i3splinempeicextractor method)": [[2, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[2, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3tumextractor.i3tumextractor method)": [[2, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor.__init__"]], "_cast_mc_tree() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[2, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._cast_mc_tree"]], "_cast_triggers() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[2, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._cast_triggers"]], "_extract_per_pulse_attribute() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[2, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._extract_per_pulse_attribute"]], "_extract_pulse_series_map() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[2, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._extract_pulse_series_map"]], "_find_data_type() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[2, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor._find_data_type"]], "_flatten_result() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[2, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._flatten_result"]], "_flatten_result_mctree() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[2, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._flatten_result_mctree"]], "_get_keys() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[2, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._get_keys"]], "_get_primary_particle_interaction_type_and_elasticity() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[2, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor._get_primary_particle_interaction_type_and_elasticity"]], "_get_primary_track_energy_and_inelasticity() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[2, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor._get_primary_track_energy_and_inelasticity"]], "_load_gcd_data() (graphnet.data.extractors.i3extractor.i3extractor method)": [[2, "graphnet.data.extractors.i3extractor.I3Extractor._load_gcd_data"]], "_muon_stopped() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[2, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor._muon_stopped"]], "_try_get_key() (graphnet.data.extractors.i3retroextractor.i3retroextractor method)": [[2, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor._try_get_key"]], "graphnet.data.extractors": [[2, "module-graphnet.data.extractors"]], "graphnet.data.extractors.i3extractor": [[2, "module-graphnet.data.extractors.i3extractor"]], "graphnet.data.extractors.i3featureextractor": [[2, "module-graphnet.data.extractors.i3featureextractor"]], "graphnet.data.extractors.i3genericextractor": [[2, "module-graphnet.data.extractors.i3genericextractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[2, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "graphnet.data.extractors.i3pisaextractor": [[2, "module-graphnet.data.extractors.i3pisaextractor"]], "graphnet.data.extractors.i3retroextractor": [[2, "module-graphnet.data.extractors.i3retroextractor"]], "graphnet.data.extractors.i3splinempeextractor": [[2, "module-graphnet.data.extractors.i3splinempeextractor"]], "graphnet.data.extractors.i3truthextractor": [[2, "module-graphnet.data.extractors.i3truthextractor"]], "graphnet.data.extractors.i3tumextractor": [[2, "module-graphnet.data.extractors.i3tumextractor"]], "name (graphnet.data.extractors.i3extractor.i3extractor property)": [[2, "graphnet.data.extractors.i3extractor.I3Extractor.name"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractor method)": [[2, "graphnet.data.extractors.i3extractor.I3Extractor.set_files"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[2, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.set_files"]], "break_cyclic_recursion() (in module graphnet.data.extractors.utilities.types)": [[3, "graphnet.data.extractors.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[3, "graphnet.data.extractors.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[3, "graphnet.data.extractors.utilities.types.cast_pulse_series_to_pure_python"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.utilities.collections)": [[3, "graphnet.data.extractors.utilities.collections.flatten_nested_dictionary"]], "frame_is_montecarlo() (in module graphnet.data.extractors.utilities.frames)": [[3, "graphnet.data.extractors.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.utilities.frames)": [[3, "graphnet.data.extractors.utilities.frames.frame_is_noise"]], "get_member_variables() (in module graphnet.data.extractors.utilities.types)": [[3, "graphnet.data.extractors.utilities.types.get_member_variables"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.utilities.frames)": [[3, "graphnet.data.extractors.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities": [[3, "module-graphnet.data.extractors.utilities"]], "graphnet.data.extractors.utilities.collections": [[3, "module-graphnet.data.extractors.utilities.collections"]], "graphnet.data.extractors.utilities.frames": [[3, "module-graphnet.data.extractors.utilities.frames"]], "graphnet.data.extractors.utilities.types": [[3, "module-graphnet.data.extractors.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.utilities.types)": [[3, "graphnet.data.extractors.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.utilities.types)": [[3, "graphnet.data.extractors.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.utilities.types)": [[3, "graphnet.data.extractors.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.utilities.types)": [[3, "graphnet.data.extractors.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.utilities.types)": [[3, "graphnet.data.extractors.utilities.types.is_type"]], "serialise() (in module graphnet.data.extractors.utilities.collections)": [[3, "graphnet.data.extractors.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.utilities.collections)": [[3, "graphnet.data.extractors.utilities.collections.transpose_list_of_dicts"]], "parquetdataconverter (class in graphnet.data.parquet.parquet_dataconverter)": [[4, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter"]], "parquetdataset (class in graphnet.data.parquet.parquet_dataset)": [[4, "graphnet.data.parquet.parquet_dataset.ParquetDataset"]], "_format_dictionary_result() (graphnet.data.parquet.parquet_dataset.parquetdataset method)": [[4, "graphnet.data.parquet.parquet_dataset.ParquetDataset._format_dictionary_result"]], "file_suffix (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter attribute)": [[4, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.file_suffix"]], "graphnet.data.parquet": [[4, "module-graphnet.data.parquet"]], "graphnet.data.parquet.parquet_dataconverter": [[4, "module-graphnet.data.parquet.parquet_dataconverter"]], "graphnet.data.parquet.parquet_dataset": [[4, "module-graphnet.data.parquet.parquet_dataset"]], "merge_files() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[4, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.merge_files"]], "save_data() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[4, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.save_data"]], "sqlitedataconverter (class in graphnet.data.sqlite.sqlite_dataconverter)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter"]], "sqlitedataset (class in graphnet.data.sqlite.sqlite_dataset)": [[5, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset"]], "sqlitedatasetperturbed (class in graphnet.data.sqlite.sqlite_dataset_perturbed)": [[5, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed"]], "__getitem__() (graphnet.data.sqlite.sqlite_dataset_perturbed.sqlitedatasetperturbed method)": [[5, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed.__getitem__"]], "__init__() (graphnet.data.sqlite.sqlite_dataset_perturbed.sqlitedatasetperturbed method)": [[5, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed.__init__"]], "_attach_index() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._attach_index"]], "_close_connection() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[5, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset._close_connection"]], "_create_table() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._create_table"]], "_establish_connection() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[5, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset._establish_connection"]], "_extract_everything() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._extract_everything"]], "_extract_table_names() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._extract_table_names"]], "_merge_temporary_databases() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._merge_temporary_databases"]], "_query_table() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[5, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset._query_table"]], "_submit_to_database() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._submit_to_database"]], "any_pulsemap_is_non_empty() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.any_pulsemap_is_non_empty"]], "attach_index() (in module graphnet.data.sqlite.sqlite_utilities)": [[5, "graphnet.data.sqlite.sqlite_utilities.attach_index"]], "construct_dataframe() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.construct_dataframe"]], "create_table() (in module graphnet.data.sqlite.sqlite_utilities)": [[5, "graphnet.data.sqlite.sqlite_utilities.create_table"]], "file_suffix (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter attribute)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.file_suffix"]], "get_desired_event_numbers() (in module graphnet.data.sqlite.sqlite_selection)": [[5, "graphnet.data.sqlite.sqlite_selection.get_desired_event_numbers"]], "get_equal_proportion_neutrino_indices() (in module graphnet.data.sqlite.sqlite_selection)": [[5, "graphnet.data.sqlite.sqlite_selection.get_equal_proportion_neutrino_indices"]], "get_even_dbang_selection() (in module graphnet.data.sqlite.sqlite_selection)": [[5, "graphnet.data.sqlite.sqlite_selection.get_even_dbang_selection"]], "get_even_signal_background_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[5, "graphnet.data.sqlite.sqlite_selection.get_even_signal_background_indicies"]], "get_even_track_cascade_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[5, "graphnet.data.sqlite.sqlite_selection.get_even_track_cascade_indicies"]], "graphnet.data.sqlite": [[5, "module-graphnet.data.sqlite"]], "graphnet.data.sqlite.sqlite_dataconverter": [[5, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "graphnet.data.sqlite.sqlite_dataset": [[5, "module-graphnet.data.sqlite.sqlite_dataset"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[5, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "graphnet.data.sqlite.sqlite_selection": [[5, "module-graphnet.data.sqlite.sqlite_selection"]], "graphnet.data.sqlite.sqlite_utilities": [[5, "module-graphnet.data.sqlite.sqlite_utilities"]], "is_pulsemap_check() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.is_pulsemap_check"]], "merge_files() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.merge_files"]], "run_sql_code() (in module graphnet.data.sqlite.sqlite_utilities)": [[5, "graphnet.data.sqlite.sqlite_utilities.run_sql_code"]], "save_data() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.save_data"]], "save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[5, "graphnet.data.sqlite.sqlite_utilities.save_to_sql"]], "parquettosqliteconverter (class in graphnet.data.utilities.parquet_to_sqlite)": [[6, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter"]], "__init__() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[6, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.__init__"]], "_save_config() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[6, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter._save_config"]], "graphnet.data.utilities": [[6, "module-graphnet.data.utilities"]], "graphnet.data.utilities.parquet_to_sqlite": [[6, "module-graphnet.data.utilities.parquet_to_sqlite"]], "graphnet.data.utilities.random": [[6, "module-graphnet.data.utilities.random"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[6, "graphnet.data.utilities.random.pairwise_shuffle"]], "run() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[6, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.run"]], "graphnet.deployment": [[7, "module-graphnet.deployment"]], "attributecoarsening (class in graphnet.models.coarsening)": [[9, "graphnet.models.coarsening.AttributeCoarsening"]], "coarsening (class in graphnet.models.coarsening)": [[9, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[9, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[9, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[9, "graphnet.models.coarsening.DOMCoarsening"]], "euclideangraphbuilder (class in graphnet.models.graph_builders)": [[9, "graphnet.models.graph_builders.EuclideanGraphBuilder"]], "graphbuilder (class in graphnet.models.graph_builders)": [[9, "graphnet.models.graph_builders.GraphBuilder"]], "knngraphbuilder (class in graphnet.models.graph_builders)": [[9, "graphnet.models.graph_builders.KNNGraphBuilder"]], "model (class in graphnet.models.model)": [[9, "graphnet.models.model.Model"]], "radialgraphbuilder (class in graphnet.models.graph_builders)": [[9, "graphnet.models.graph_builders.RadialGraphBuilder"]], "standardmodel (class in graphnet.models.standard_model)": [[9, "graphnet.models.standard_model.StandardModel"]], "__init__() (graphnet.models.coarsening.attributecoarsening method)": [[9, "graphnet.models.coarsening.AttributeCoarsening.__init__"]], "__init__() (graphnet.models.coarsening.coarsening method)": [[9, "graphnet.models.coarsening.Coarsening.__init__"]], "__init__() (graphnet.models.coarsening.domandtimewindowcoarsening method)": [[9, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening.__init__"]], "__init__() (graphnet.models.graph_builders.euclideangraphbuilder method)": [[9, "graphnet.models.graph_builders.EuclideanGraphBuilder.__init__"]], "__init__() (graphnet.models.graph_builders.knngraphbuilder method)": [[9, "graphnet.models.graph_builders.KNNGraphBuilder.__init__"]], "__init__() (graphnet.models.graph_builders.radialgraphbuilder method)": [[9, "graphnet.models.graph_builders.RadialGraphBuilder.__init__"]], "__init__() (graphnet.models.standard_model.standardmodel method)": [[9, "graphnet.models.standard_model.StandardModel.__init__"]], "_additional_features() (graphnet.models.coarsening.coarsening method)": [[9, "graphnet.models.coarsening.Coarsening._additional_features"]], "_additional_features() (graphnet.models.coarsening.customdomcoarsening method)": [[9, "graphnet.models.coarsening.CustomDOMCoarsening._additional_features"]], "_perform_clustering() (graphnet.models.coarsening.attributecoarsening method)": [[9, "graphnet.models.coarsening.AttributeCoarsening._perform_clustering"]], "_perform_clustering() (graphnet.models.coarsening.coarsening method)": [[9, "graphnet.models.coarsening.Coarsening._perform_clustering"]], "_perform_clustering() (graphnet.models.coarsening.domandtimewindowcoarsening method)": [[9, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening._perform_clustering"]], "_perform_clustering() (graphnet.models.coarsening.domcoarsening method)": [[9, "graphnet.models.coarsening.DOMCoarsening._perform_clustering"]], "_transfer_attributes() (graphnet.models.coarsening.coarsening method)": [[9, "graphnet.models.coarsening.Coarsening._transfer_attributes"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[9, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[9, "graphnet.models.utils.calculate_xyzt_homophily"]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[9, "graphnet.models.standard_model.StandardModel.compute_loss"]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[9, "graphnet.models.standard_model.StandardModel.configure_optimizers"]], "fit() (graphnet.models.model.model method)": [[9, "graphnet.models.model.Model.fit"]], "forward() (graphnet.models.coarsening.coarsening method)": [[9, "graphnet.models.coarsening.Coarsening.forward"]], "forward() (graphnet.models.graph_builders.euclideangraphbuilder method)": [[9, "graphnet.models.graph_builders.EuclideanGraphBuilder.forward"]], "forward() (graphnet.models.graph_builders.knngraphbuilder method)": [[9, "graphnet.models.graph_builders.KNNGraphBuilder.forward"]], "forward() (graphnet.models.graph_builders.radialgraphbuilder method)": [[9, "graphnet.models.graph_builders.RadialGraphBuilder.forward"]], "forward() (graphnet.models.model.model method)": [[9, "graphnet.models.model.Model.forward"]], "forward() (graphnet.models.standard_model.standardmodel method)": [[9, "graphnet.models.standard_model.StandardModel.forward"]], "from_config() (graphnet.models.model.model class method)": [[9, "graphnet.models.model.Model.from_config"]], "graphnet.models": [[9, "module-graphnet.models"]], "graphnet.models.coarsening": [[9, "module-graphnet.models.coarsening"]], "graphnet.models.graph_builders": [[9, "module-graphnet.models.graph_builders"]], "graphnet.models.model": [[9, "module-graphnet.models.model"]], "graphnet.models.standard_model": [[9, "module-graphnet.models.standard_model"]], "graphnet.models.utils": [[9, "module-graphnet.models.utils"]], "inference() (graphnet.models.standard_model.standardmodel method)": [[9, "graphnet.models.standard_model.StandardModel.inference"]], "knn_graph_batch() (in module graphnet.models.utils)": [[9, "graphnet.models.utils.knn_graph_batch"]], "load() (graphnet.models.model.model class method)": [[9, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[9, "graphnet.models.model.Model.load_state_dict"]], "predict() (graphnet.models.model.model method)": [[9, "graphnet.models.model.Model.predict"]], "predict() (graphnet.models.standard_model.standardmodel method)": [[9, "graphnet.models.standard_model.StandardModel.predict"]], "predict_as_dataframe() (graphnet.models.model.model method)": [[9, "graphnet.models.model.Model.predict_as_dataframe"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[9, "graphnet.models.coarsening.Coarsening.reduce_options"]], "save() (graphnet.models.model.model method)": [[9, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[9, "graphnet.models.model.Model.save_state_dict"]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[9, "graphnet.models.standard_model.StandardModel.shared_step"]], "train() (graphnet.models.standard_model.standardmodel method)": [[9, "graphnet.models.standard_model.StandardModel.train"]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[9, "graphnet.models.standard_model.StandardModel.training_step"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[9, "graphnet.models.coarsening.unbatch_edge_index"]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[9, "graphnet.models.standard_model.StandardModel.validation_step"]], "dynedgeconv (class in graphnet.models.components.layers)": [[10, "graphnet.models.components.layers.DynEdgeConv"]], "__init__() (graphnet.models.components.layers.dynedgeconv method)": [[10, "graphnet.models.components.layers.DynEdgeConv.__init__"]], "_group_identical() (in module graphnet.models.components.pool)": [[10, "graphnet.models.components.pool._group_identical"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[10, "graphnet.models.components.layers.DynEdgeConv.forward"]], "graphnet.models.components": [[10, "module-graphnet.models.components"]], "graphnet.models.components.layers": [[10, "module-graphnet.models.components.layers"]], "graphnet.models.components.pool": [[10, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[10, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[10, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[10, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[10, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[10, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[10, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[10, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[10, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[10, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[10, "graphnet.models.components.pool.sum_pool_x"]], "detector (class in graphnet.models.detector.detector)": [[11, "graphnet.models.detector.detector.Detector"]], "icecube86 (class in graphnet.models.detector.icecube)": [[11, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[11, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[11, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "icecubeupgrade_v2 (class in graphnet.models.detector.icecube)": [[11, "graphnet.models.detector.icecube.IceCubeUpgrade_V2"]], "prototype (class in graphnet.models.detector.prototype)": [[11, "graphnet.models.detector.prototype.Prototype"]], "__init__() (graphnet.models.detector.detector.detector method)": [[11, "graphnet.models.detector.detector.Detector.__init__"]], "_forward() (graphnet.models.detector.detector.detector method)": [[11, "graphnet.models.detector.detector.Detector._forward"]], "_forward() (graphnet.models.detector.icecube.icecube86 method)": [[11, "graphnet.models.detector.icecube.IceCube86._forward"]], "_forward() (graphnet.models.detector.icecube.icecubedeepcore method)": [[11, "graphnet.models.detector.icecube.IceCubeDeepCore._forward"]], "_forward() (graphnet.models.detector.icecube.icecubeupgrade method)": [[11, "graphnet.models.detector.icecube.IceCubeUpgrade._forward"]], "_forward() (graphnet.models.detector.icecube.icecubeupgrade_v2 method)": [[11, "graphnet.models.detector.icecube.IceCubeUpgrade_V2._forward"]], "_forward() (graphnet.models.detector.prototype.prototype method)": [[11, "graphnet.models.detector.prototype.Prototype._forward"]], "features (graphnet.models.detector.detector.detector property)": [[11, "graphnet.models.detector.detector.Detector.features"]], "features (graphnet.models.detector.icecube.icecube86 attribute)": [[11, "graphnet.models.detector.icecube.IceCube86.features"]], "features (graphnet.models.detector.icecube.icecubedeepcore attribute)": [[11, "graphnet.models.detector.icecube.IceCubeDeepCore.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[11, "graphnet.models.detector.icecube.IceCubeUpgrade.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade_v2 attribute)": [[11, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.features"]], "features (graphnet.models.detector.prototype.prototype attribute)": [[11, "graphnet.models.detector.prototype.Prototype.features"]], "forward() (graphnet.models.detector.detector.detector method)": [[11, "graphnet.models.detector.detector.Detector.forward"]], "graphnet.models.detector": [[11, "module-graphnet.models.detector"]], "graphnet.models.detector.detector": [[11, "module-graphnet.models.detector.detector"]], "graphnet.models.detector.icecube": [[11, "module-graphnet.models.detector.icecube"]], "graphnet.models.detector.prototype": [[11, "module-graphnet.models.detector.prototype"]], "nb_inputs (graphnet.models.detector.detector.detector property)": [[11, "graphnet.models.detector.detector.Detector.nb_inputs"]], "nb_outputs (graphnet.models.detector.detector.detector property)": [[11, "graphnet.models.detector.detector.Detector.nb_outputs"]], "nb_outputs (graphnet.models.detector.icecube.icecubeupgrade_v2 property)": [[11, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.nb_outputs"]], "convnet (class in graphnet.models.gnn.convnet)": [[12, "graphnet.models.gnn.convnet.ConvNet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[12, "graphnet.models.gnn.dynedge.DynEdge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[12, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "gnn (class in graphnet.models.gnn.gnn)": [[12, "graphnet.models.gnn.gnn.GNN"]], "__init__() (graphnet.models.gnn.convnet.convnet method)": [[12, "graphnet.models.gnn.convnet.ConvNet.__init__"]], "__init__() (graphnet.models.gnn.dynedge.dynedge method)": [[12, "graphnet.models.gnn.dynedge.DynEdge.__init__"]], "__init__() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[12, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.__init__"]], "__init__() (graphnet.models.gnn.gnn.gnn method)": [[12, "graphnet.models.gnn.gnn.GNN.__init__"]], "_calculate_global_variables() (graphnet.models.gnn.dynedge.dynedge method)": [[12, "graphnet.models.gnn.dynedge.DynEdge._calculate_global_variables"]], "_construct_layers() (graphnet.models.gnn.dynedge.dynedge method)": [[12, "graphnet.models.gnn.dynedge.DynEdge._construct_layers"]], "_global_pooling() (graphnet.models.gnn.dynedge.dynedge method)": [[12, "graphnet.models.gnn.dynedge.DynEdge._global_pooling"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[12, "graphnet.models.gnn.convnet.ConvNet.forward"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[12, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[12, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[12, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn": [[12, "module-graphnet.models.gnn"]], "graphnet.models.gnn.convnet": [[12, "module-graphnet.models.gnn.convnet"]], "graphnet.models.gnn.dynedge": [[12, "module-graphnet.models.gnn.dynedge"]], "graphnet.models.gnn.dynedge_jinst": [[12, "module-graphnet.models.gnn.dynedge_jinst"]], "graphnet.models.gnn.gnn": [[12, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[12, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[12, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[13, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[13, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "identitytask (class in graphnet.models.task.task)": [[13, "graphnet.models.task.task.IdentityTask"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[13, "graphnet.models.task.classification.MulticlassClassificationTask"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.PositionReconstruction"]], "task (class in graphnet.models.task.task)": [[13, "graphnet.models.task.task.Task"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "__init__() (graphnet.models.task.task.identitytask method)": [[13, "graphnet.models.task.task.IdentityTask.__init__"]], "__init__() (graphnet.models.task.task.task method)": [[13, "graphnet.models.task.task.Task.__init__"]], "_forward() (graphnet.models.task.task.task method)": [[13, "graphnet.models.task.task.Task._forward"]], "_validate_and_set_transforms() (graphnet.models.task.task.task method)": [[13, "graphnet.models.task.task.Task._validate_and_set_transforms"]], "compute_loss() (graphnet.models.task.task.task method)": [[13, "graphnet.models.task.task.Task.compute_loss"]], "forward() (graphnet.models.task.task.task method)": [[13, "graphnet.models.task.task.Task.forward"]], "graphnet.models.task": [[13, "module-graphnet.models.task"]], "graphnet.models.task.classification": [[13, "module-graphnet.models.task.classification"]], "graphnet.models.task.reconstruction": [[13, "module-graphnet.models.task.reconstruction"]], "graphnet.models.task.task": [[13, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[13, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[13, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[13, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[13, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[13, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[13, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[13, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[13, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[13, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[13, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[13, "graphnet.models.task.task.Task.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[13, "graphnet.models.task.task.Task.train_eval"]], "graphnet.pisa": [[14, "module-graphnet.pisa"]], "graphnet.pisa.plotting": [[14, "module-graphnet.pisa.plotting"]], "plot_1d_contour() (in module graphnet.pisa.plotting)": [[14, "graphnet.pisa.plotting.plot_1D_contour"]], "plot_2d_contour() (in module graphnet.pisa.plotting)": [[14, "graphnet.pisa.plotting.plot_2D_contour"]], "read_entry() (in module graphnet.pisa.plotting)": [[14, "graphnet.pisa.plotting.read_entry"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[15, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[15, "graphnet.training.weight_fitting.BjoernLow"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[15, "graphnet.training.loss_functions.CrossEntropyLoss"]], "direction (class in graphnet.training.labels)": [[15, "graphnet.training.labels.Direction"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[15, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "label (class in graphnet.training.labels)": [[15, "graphnet.training.labels.Label"]], "logcmk (class in graphnet.training.loss_functions)": [[15, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[15, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[15, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[15, "graphnet.training.loss_functions.MSELoss"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[15, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[15, "graphnet.training.callbacks.ProgressBar"]], "rmseloss (class in graphnet.training.loss_functions)": [[15, "graphnet.training.loss_functions.RMSELoss"]], "uniform (class in graphnet.training.weight_fitting)": [[15, "graphnet.training.weight_fitting.Uniform"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[15, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[15, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[15, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "weightfitter (class in graphnet.training.weight_fitting)": [[15, "graphnet.training.weight_fitting.WeightFitter"]], "__call__() (graphnet.training.labels.direction method)": [[15, "graphnet.training.labels.Direction.__call__"]], "__call__() (graphnet.training.labels.label method)": [[15, "graphnet.training.labels.Label.__call__"]], "__init__() (graphnet.training.callbacks.piecewiselinearlr method)": [[15, "graphnet.training.callbacks.PiecewiseLinearLR.__init__"]], "__init__() (graphnet.training.labels.direction method)": [[15, "graphnet.training.labels.Direction.__init__"]], "__init__() (graphnet.training.labels.label method)": [[15, "graphnet.training.labels.Label.__init__"]], "__init__() (graphnet.training.loss_functions.crossentropyloss method)": [[15, "graphnet.training.loss_functions.CrossEntropyLoss.__init__"]], "__init__() (graphnet.training.loss_functions.lossfunction method)": [[15, "graphnet.training.loss_functions.LossFunction.__init__"]], "__init__() (graphnet.training.weight_fitting.weightfitter method)": [[15, "graphnet.training.weight_fitting.WeightFitter.__init__"]], "_evaluate() (graphnet.training.loss_functions.vonmisesfisherloss method)": [[15, "graphnet.training.loss_functions.VonMisesFisherLoss._evaluate"]], "_fit_weights() (graphnet.training.weight_fitting.bjoernlow method)": [[15, "graphnet.training.weight_fitting.BjoernLow._fit_weights"]], "_fit_weights() (graphnet.training.weight_fitting.uniform method)": [[15, "graphnet.training.weight_fitting.Uniform._fit_weights"]], "_forward() (graphnet.training.loss_functions.crossentropyloss method)": [[15, "graphnet.training.loss_functions.CrossEntropyLoss._forward"]], "_forward() (graphnet.training.loss_functions.euclideandistanceloss method)": [[15, "graphnet.training.loss_functions.EuclideanDistanceLoss._forward"]], "_forward() (graphnet.training.loss_functions.logcoshloss method)": [[15, "graphnet.training.loss_functions.LogCoshLoss._forward"]], "_forward() (graphnet.training.loss_functions.lossfunction method)": [[15, "graphnet.training.loss_functions.LossFunction._forward"]], "_forward() (graphnet.training.loss_functions.mseloss method)": [[15, "graphnet.training.loss_functions.MSELoss._forward"]], "_forward() (graphnet.training.loss_functions.rmseloss method)": [[15, "graphnet.training.loss_functions.RMSELoss._forward"]], "_forward() (graphnet.training.loss_functions.vonmisesfisher2dloss method)": [[15, "graphnet.training.loss_functions.VonMisesFisher2DLoss._forward"]], "_forward() (graphnet.training.loss_functions.vonmisesfisher3dloss method)": [[15, "graphnet.training.loss_functions.VonMisesFisher3DLoss._forward"]], "_get_truth() (graphnet.training.weight_fitting.weightfitter method)": [[15, "graphnet.training.weight_fitting.WeightFitter._get_truth"]], "_log_cosh() (graphnet.training.loss_functions.logcoshloss class method)": [[15, "graphnet.training.loss_functions.LogCoshLoss._log_cosh"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[15, "graphnet.training.loss_functions.LogCMK.backward"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[15, "graphnet.training.weight_fitting.WeightFitter.fit"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[15, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[15, "graphnet.training.loss_functions.LossFunction.forward"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[15, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[15, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "get_predictions() (in module graphnet.training.utils)": [[15, "graphnet.training.utils.get_predictions"]], "graphnet.training": [[15, "module-graphnet.training"]], "graphnet.training.callbacks": [[15, "module-graphnet.training.callbacks"]], "graphnet.training.labels": [[15, "module-graphnet.training.labels"]], "graphnet.training.loss_functions": [[15, "module-graphnet.training.loss_functions"]], "graphnet.training.utils": [[15, "module-graphnet.training.utils"]], "graphnet.training.weight_fitting": [[15, "module-graphnet.training.weight_fitting"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[15, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[15, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[15, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[15, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[15, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[15, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[15, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "make_dataloader() (in module graphnet.training.utils)": [[15, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[15, "graphnet.training.utils.make_train_validation_dataloader"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[15, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[15, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "save_results() (in module graphnet.training.utils)": [[15, "graphnet.training.utils.save_results"]], "loggermixin (class in graphnet.utilities.logging)": [[16, "graphnet.utilities.logging.LoggerMixin"]], "repeatfilter (class in graphnet.utilities.logging)": [[16, "graphnet.utilities.logging.RepeatFilter"]], "__init__() (graphnet.utilities.logging.repeatfilter method)": [[16, "graphnet.utilities.logging.RepeatFilter.__init__"]], "_get_logger() (graphnet.utilities.logging.loggermixin method)": [[16, "graphnet.utilities.logging.LoggerMixin._get_logger"]], "critical() (graphnet.utilities.logging.loggermixin method)": [[16, "graphnet.utilities.logging.LoggerMixin.critical"]], "debug() (graphnet.utilities.logging.loggermixin method)": [[16, "graphnet.utilities.logging.LoggerMixin.debug"]], "eps_like() (in module graphnet.utilities.maths)": [[16, "graphnet.utilities.maths.eps_like"]], "error() (graphnet.utilities.logging.loggermixin method)": [[16, "graphnet.utilities.logging.LoggerMixin.error"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[16, "graphnet.utilities.logging.RepeatFilter.filter"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[16, "graphnet.utilities.filesys.find_i3_files"]], "get_formatters() (in module graphnet.utilities.logging)": [[16, "graphnet.utilities.logging.get_formatters"]], "get_logger() (in module graphnet.utilities.logging)": [[16, "graphnet.utilities.logging.get_logger"]], "graphnet.utilities": [[16, "module-graphnet.utilities"]], "graphnet.utilities.decorators": [[16, "module-graphnet.utilities.decorators"]], "graphnet.utilities.filesys": [[16, "module-graphnet.utilities.filesys"]], "graphnet.utilities.imports": [[16, "module-graphnet.utilities.imports"]], "graphnet.utilities.logging": [[16, "module-graphnet.utilities.logging"]], "graphnet.utilities.maths": [[16, "module-graphnet.utilities.maths"]], "has_extension() (in module graphnet.utilities.filesys)": [[16, "graphnet.utilities.filesys.has_extension"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[16, "graphnet.utilities.imports.has_icecube_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[16, "graphnet.utilities.imports.has_torch_package"]], "info() (graphnet.utilities.logging.loggermixin method)": [[16, "graphnet.utilities.logging.LoggerMixin.info"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[16, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[16, "graphnet.utilities.filesys.is_i3_file"]], "requires_icecube() (in module graphnet.utilities.imports)": [[16, "graphnet.utilities.imports.requires_icecube"]], "set_logging_level() (in module graphnet.utilities.logging)": [[16, "graphnet.utilities.logging.set_logging_level"]], "warn_once() (in module graphnet.utilities.logging)": [[16, "graphnet.utilities.logging.warn_once"]], "warning() (graphnet.utilities.logging.loggermixin method)": [[16, "graphnet.utilities.logging.LoggerMixin.warning"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[17, "graphnet.utilities.config.base_config.BaseConfig"]], "configurable (class in graphnet.utilities.config.configurable)": [[17, "graphnet.utilities.config.configurable.Configurable"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[17, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[17, "graphnet.utilities.config.model_config.ModelConfig"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[17, "graphnet.utilities.config.training_config.TrainingConfig"]], "__init__() (graphnet.utilities.config.configurable.configurable method)": [[17, "graphnet.utilities.config.configurable.Configurable.__init__"]], "__init__() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[17, "graphnet.utilities.config.dataset_config.DatasetConfig.__init__"]], "__init__() (graphnet.utilities.config.model_config.modelconfig method)": [[17, "graphnet.utilities.config.model_config.ModelConfig.__init__"]], "_construct_model() (graphnet.utilities.config.model_config.modelconfig method)": [[17, "graphnet.utilities.config.model_config.ModelConfig._construct_model"]], "_is_model_config_entry() (graphnet.utilities.config.model_config.modelconfig method)": [[17, "graphnet.utilities.config.model_config.ModelConfig._is_model_config_entry"]], "_parse_if_model_config_entry() (graphnet.utilities.config.model_config.modelconfig method)": [[17, "graphnet.utilities.config.model_config.ModelConfig._parse_if_model_config_entry"]], "_serialise() (graphnet.utilities.config.model_config.modelconfig class method)": [[17, "graphnet.utilities.config.model_config.ModelConfig._serialise"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[17, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[17, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[17, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[17, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "config (graphnet.utilities.config.configurable.configurable property)": [[17, "graphnet.utilities.config.configurable.Configurable.config"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[17, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[17, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[17, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[17, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[17, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[17, "graphnet.utilities.config.configurable.Configurable.from_config"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[17, "graphnet.utilities.config.base_config.get_all_argument_values"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[17, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[17, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config": [[17, "module-graphnet.utilities.config"]], "graphnet.utilities.config.base_config": [[17, "module-graphnet.utilities.config.base_config"]], "graphnet.utilities.config.configurable": [[17, "module-graphnet.utilities.config.configurable"]], "graphnet.utilities.config.dataset_config": [[17, "module-graphnet.utilities.config.dataset_config"]], "graphnet.utilities.config.model_config": [[17, "module-graphnet.utilities.config.model_config"]], "graphnet.utilities.config.parsing": [[17, "module-graphnet.utilities.config.parsing"]], "graphnet.utilities.config.training_config": [[17, "module-graphnet.utilities.config.training_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[17, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[17, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[17, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[17, "graphnet.utilities.config.parsing.list_all_submodules"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[17, "graphnet.utilities.config.base_config.BaseConfig.load"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[17, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[17, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[17, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[17, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[17, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[17, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[17, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[17, "graphnet.utilities.config.configurable.Configurable.save_config"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[17, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[17, "graphnet.utilities.config.model_config.save_model_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[17, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[17, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[17, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[17, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[17, "graphnet.utilities.config.parsing.traverse_and_apply"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[17, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[17, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]]}})